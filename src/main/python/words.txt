start
android
учебник
android
начинающих
продвинутых
поиск
start
android
учебник
android
начинающих
продвинутых
присоединяйтесь
нам
различным
тематикам
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
хранение
данных
preferences
поиск
полный
список
в
уроке
хранение
данных
помощью
preferences
хватит
intent
activity
поговорим
хранении
данных
в
android
несколько
способов
хранения
данных
preferences
качестве
аналогии
привести
виндовые
iniфайлы
sqlite
база
данных
таблицы
обычные
файлы
внутренние
внешние
sd
карте
мы
начнем
самого
простого
preferences
значения
сохраняются
виде
пары
имя
значение
так
например
extras
intent
разработаем
приложение
в
нем
поле
ввода
текста
две
кнопки
save
load
по
нажатию
save
будем
сохранять
значение
поля
нажатию
load
загружать
создадим
проект
project
name
build
target
android
application
name
sharedpreferences
package
name
create
activity
mainactivity
откроем
mainxml
создадим
экран
поле
ввода
две
кнопки
теперь
пишем
код
mainactivityjava
package
import
androidappactivity
import
androidcontentsharedpreferences
import
androidcontentsharedpreferenceseditor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
ettext
button
btnsave
btnload
sharedpreferences
spref
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
ettext
edittext
findviewbyidridettext
btnsave
button
findviewbyidridbtnsave
btnsavesetonclicklistenerthis
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtnsave
savetext
break
case
ridbtnload
loadtext
break
default
break
void
savetext
spref
editor
ed
sprefedit
ettextgettexttostring
edcommit
toastmaketextthis
void
loadtext
spref
string
savedtext
ettextsettextsavedtext
toastmaketextthis
определение
элементов
экрана
присвоение
обработчиков
реализация
onclick
понятно
обычно
нам
интересны
методы
которые
вызываем
onclick
savetext
сохранение
данных
сначала
помощью
метода
получаем
объект
spref
класса
sharedpreferences
который
позволяет
работать
данными
читать
писать
константа
используется
настройки
доступа
означает
сохранения
данные
будут
видны
этому
приложению
далее
редактировать
данные
необходим
объект
editor
получаем
spref
в
метод
указываем
наименование
переменной
это
константа
значение
содержимое
поля
ettext
чтобы
данные
сохранились
необходимо
выполнить
и
наглядности
выводим
сообщение
данные
сохранены
loadtext
загрузка
данных
так
savetext
помощью
метода
getpreferences
получаем
объект
spref
класса
sharedpreferences
снова
указывается
хотя
используется
записи
данных
здесь
editor
используем
тк
интересует
чтение
данных
читаем
помощью
метода
параметрах
указываем
константу
это
имя
значение
умолчанию
пустая
строка
далее
пишем
значение
поле
ввода
ettext
выводим
сообщение
данные
считаны
все
сохраняем
запускаем
приложение
для
начала
давайте
убедимся
сохранение
принципе
нужно
введите
какойнить
текст
поле
ввода
нажимая
кнопку
save
закройте
приложение
кнопкой
назад
теперь
найдите
приложение
общем
списке
приложений
эмулятора
запустите
снова
поле
ввода
пустое
то
вводили
пропало
закрытии
программы
нажатие
load
даст
сохраняли
давайте
попробуем
сохранять
снова
введите
значение
нажмите
save
значение
сохранилось
системе
теперь
закроем
приложение
назад
снова
откроем
нажмем
load
значение
считалось
отобразилось
давайте
сделаем
сохранение
загрузка
происходили
автоматически
закрытии
открытии
приложения
жать
кнопки
для
метод
loadtext
будем
вызывать
oncreate
public
void
oncreatebundle
savedinstancestate
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
loadtext
добавляете
строку
метод
savetext
ondestroy
protected
void
ondestroy
superondestroy
savetext
все
сохраним
запустим
теперь
вводить
данные
закрывать
приложение
снова
открывать
данные
потеряются
кнопки
save
load
также
работают
в
момент
сохранять
данные
ваших
приложениях
решать
по
нажатию
кнопки
закрытии
программы
какомулибо
событию
главное
это
умеете
еще
немного
слов
теме
preferencesданные
сохраняются
файлы
можете
посмотреть
для
eclipse
откройте
меню
window
show
view
выберите
android
file
explorer
отобразилась
файловая
система
эмулятора
открываем
папку
видим
файл
mainactivityxml
если
выгрузить
комп
открыть
увидим
следующее
все
верно
имя
значение
abcdefg
обратите
внимание
пути
файлу
используется
наш
package
теперь
разберемся
откуда
взялось
наименование
файла
mainactivityxml
кроме
метода
getpreferences
который
использовали
метод
он
выполняет
абсолютно
те
функции
позволяет
указать
имя
файла
хранения
данных
те
например
savetext
использовали
получение
sharedpreferences
код
spref
то
данные
сохранились
файле
myprefxml
mainactivityxml
теперь
посмотрим
исходники
метода
getpreferences
видим
следующее
public
sharedpreferences
getpreferencesint
mode
return
getsharedpreferencesgetlocalclassname
mode
используется
метод
getsharedpreferences
качестве
имени
файла
берется
имя
класса
текущего
activity
отсюда
появилось
имя
файла
mainactivityxml
в
итоге
используете
getpreferences
работаете
данными
текущего
activity
хотите
выдумывать
имя
файла
используете
getsharedpreferences
сохраняете
например
данные
общие
нескольких
activity
сами
выбираете
имя
файла
сохранения
кстати
file
explorer
можете
видеть
файлу
попробуйте
сохранении
данных
использовать
посмотрите
будут
меняться
права
полный
код
mainactivityjava
package
import
androidappactivity
import
androidcontentsharedpreferences
import
androidcontentsharedpreferenceseditor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
ettext
button
btnsave
btnload
sharedpreferences
spref
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
ettext
edittext
findviewbyidridettext
btnsave
button
findviewbyidridbtnsave
btnsavesetonclicklistenerthis
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
loadtext
public
void
onclickview
v
switch
vgetid
case
ridbtnsave
savetext
break
case
ridbtnload
loadtext
break
default
break
void
savetext
spref
editor
ed
sprefedit
ettextgettexttostring
edcommit
toastmaketextthis
void
loadtext
spref
string
savedtext
ettextsettextsavedtext
toastmaketextthis
protected
void
ondestroy
superondestroy
savetext
на
следующем
уроке
хранение
данных
помощью
sqlite
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
data
storing
preferences
lessons
lesson
data
storing
preferences
enough
speaking
intent
activity
speak
data
storing
several
ways
store
data
android
preferences
like
windows
inifiles
sqlite
database
tables
common
files
internal
external
sd
card
begin
simplest
preferences
case
values
used
saved
pairs
names
values
well
extras
within
intent
develop
app
edittext
field
save
load
buttons
save
value
edittext
clicking
save
button
load
value
clicking
load
button
create
new
project
project
name
build
target
android
application
name
sharedpreferences
package
name
create
activity
mainactivity
open
mainxml
code
layout
edittext
view
two
buttons
code
mainactivityjava
package
import
androidappactivity
import
androidcontentsharedpreferences
import
androidcontentsharedpreferenceseditor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
ettext
button
btnsave
btnload
sharedpreferences
spref
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
ettext
edittext
findviewbyidridettext
btnsave
button
findviewbyidridbtnsave
btnsavesetonclicklistenerthis
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtnsave
savetext
break
case
ridbtnload
loadtext
break
default
break
void
savetext
spref
editor
ed
sprefedit
ettextgettexttostring
edcommit
toastmaketextthis
void
loadtext
spref
string
savedtext
ettextsettextsavedtext
toastmaketextthis
views
determining
listeners
setting
onclick
implementation
common
interested
methods
call
within
onclick
savetext
method
data
save
first
get
sharedpreferences
spref
object
getpreferences
method
allows
us
work
data
read
right
constant
used
access
adjustment
means
data
would
accessible
app
saving
need
editor
object
data
editing
get
spref
pass
key
value
ettext
data
putstring
method
must
call
commit
save
data
loadtext
method
data
loading
get
sharedpreferences
spref
object
similarly
savetext
used
although
used
data
saving
use
editor
interested
data
saving
get
data
getstring
method
method
parameters
key
default
value
empty
string
set
ettext
value
display
message
data
loaded
save
launch
app
first
make
sure
works
type
anything
edittext
field
close
app
without
clicking
save
button
find
app
app
list
launch
edittext
field
empty
data
entered
lost
closing
app
load
button
clicking
also
useful
saved
anything
try
save
something
enter
text
click
save
button
make
save
load
work
automatically
opening
closing
app
without
button
clickingto
call
loadtext
method
within
oncreate
public
void
oncreatebundle
savedinstancestate
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
loadtext
add
string
savetext
method
called
within
ondestroy
protected
void
ondestroy
superondestroy
savetext
save
launch
app
close
data
entering
lose
save
load
buttons
also
work
decide
way
save
data
button
click
app
closing
way
main
thing
know
preferences
data
saves
files
take
look
open
within
eclipse
window
show
chose
android
file
explorer
file
explorer
would
displayed
open
find
mainactivityxml
file
see
next
copy
pc
open
spref
look
getpreferences
source
code
see
public
sharedpreferences
getpreferencesint
mode
return
getsharedpreferencesgetlocalclassname
mode
getsharedpreferences
method
used
current
activity
name
passed
method
file
name
file
name
mainactivityxml
eventually
case
work
data
current
activity
use
getpreferences
want
come
file
name
case
saving
data
common
several
activities
use
getsharedpreference
choose
file
name
way
within
file
explorer
see
unix
file
access
rwxrights
try
use
instead
save
file
look
rights
change
mainactivityjava
full
code
package
import
androidappactivity
import
androidcontentsharedpreferences
import
androidcontentsharedpreferenceseditor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
ettext
button
btnsave
btnload
sharedpreferences
spref
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
ettext
edittext
findviewbyidridettext
btnsave
button
findviewbyidridbtnsave
btnsavesetonclicklistenerthis
btnload
button
findviewbyidridbtnload
btnloadsetonclicklistenerthis
loadtext
public
void
onclickview
v
switch
vgetid
case
ridbtnsave
savetext
break
case
ridbtnload
loadtext
break
default
break
void
savetext
spref
editor
ed
sprefedit
ettextgettexttostring
edcommit
toastmaketextthis
void
loadtext
spref
string
savedtext
ettextsettextsavedtext
toastmaketextthis
protected
void
ondestroy
superondestroy
savetext
next
lesson
storing
data
sqlite
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
activity
lifecycle
example
changing
states
two
activities
lessons
lesson
learn
state
changes
example
two
activities
translated
taras
leskiv
previous
lesson
looked
states
activity
pass
method
invoked
lifetime
seen
activity
resumed
state
means
activity
visible
focused
lesson
using
two
activities
try
understand
cases
activity
remain
stopped
state
visible
focused
exists
memory
create
project
project
name
build
target
android
application
name
twoactivitystate
package
name
create
activity
mainactivity
write
following
mainxml
world
activity
open
mainactivityjava
write
methods
including
onrestart
time
write
log
entries
inside
methods
also
find
define
button
assign
listener
write
anything
inside
onclick
method
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
tag
button
btnacttwo
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnacttwo
button
findviewbyidridbtnacttwo
btnacttwosetonclicklistenerthis
logdtag
protected
void
onrestart
superonrestart
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
public
void
onclickview
v
previous
lesson
seen
methods
order
invoked
working
one
activity
interested
behaviour
two
activities
create
second
activity
name
activitytwo
remember
previous
lessons
create
class
name
subclass
androidappactivity
register
new
activity
inside
manifestfile
also
need
create
layoutfile
name
twoxml
fill
following
code
activity
textview
text
clear
activitytwo
create
class
activitytwojava
code
package
import
androidappactivity
import
androidosbundle
import
androidutillog
public
class
activitytwo
extends
activity
final
string
tag
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayouttwo
logdtag
protected
void
onrestart
superonrestart
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
forget
add
record
activitytwo
manifest
add
onclick
method
code
mainactivityjava
invoking
activitytwo
public
void
onclickview
v
intent
intent
new
intentthis
activitytwoclass
startactivityintent
add
highlighted
code
log
filter
remain
previous
lesson
use
create
filter
tag
states
save
everything
run
application
step
run
application
mainactivity
appeared
logs
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
everything
previous
time
three
methods
invoked
activity
goes
stopped
paused
states
remains
resumed
state
step
press
activity
button
activitytwo
appear
logs
mainactivity
onpauseactivitytwo
oncreateactivitytwo
onstartactivitytwo
onresumemainactivity
onstop
look
mainactivtyonpause
invocation
means
mainactivity
loses
focus
goes
pause
state
activitytwo
created
oncreate
displayed
onstart
receives
focus
onresume
mainactivity
visible
onstop
note
ondestroy
invoked
mainactivity
means
destroyed
mainactivity
remains
memory
stopped
state
activitytwo
resumed
state
visible
focused
interact
step
press
back
button
emulator
returned
mainactivity
logs
activitytwo
onpausemainactivity
onrestartmainactivity
onstartmainactivity
onresumeactivitytwo
onstopactivitytwo
ondestroy
activitytwoonpause
means
activitytwo
loses
focus
goes
paused
state
mainactivity
restored
stopped
state
end
previous
lesson
written
method
invoked
onstart
method
activity
created
scratch
restored
stopped
exactly
case
mainactivity
killed
system
still
memory
mainactivityonrestart
invoked
mainactivityonstart
mainactivityonresume
invoked
means
mainactivity
went
paused
state
displayed
resumed
state
gained
focus
onstop
ondestroy
methods
invocation
means
activitytwo
changed
state
stopped
visible
destroyed
step
press
back
application
closed
logs
mainactivity
onpausemainactivity
onstopmainactivity
ondestroy
logs
show
mainactivity
changed
state
paused
stopped
destroyed
clear
fis
time
try
repeat
algorithm
several
times
check
diagram
previous
lesson
quite
obvious
help
get
try
draw
whole
diagram
sheet
paper
changes
activity
state
also
display
sequence
steps
make
obvious
found
activity
necessarily
destroyed
visible
stored
ram
looking
guess
question
appeared
step
mainactivity
disappeared
screen
left
memory
destroyed
step
activitytwo
destroyed
disappeared
screen
step
end
mainactivity
destroyed
step
exceptional
talk
next
lesson
lesson
already
quite
complicated
topic
extremely
important
one
key
concepts
android
operating
system
next
lesson
theory
task
fixing
activity
paused
state
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
dagger
поиск
в
проектах
использую
паттерн
dependency
injection
он
дает
возможность
библиотека
dagger
берет
часть
реализации
паттерна
dependency
injection
упрощает
работу
разработчика
снижает
количество
написанного
кода
на
сегодняшний
день
курс
приобрели
человек
лучше
увидеть
десять
прочитать
поэтому
взгляните
примеров
моего
курса
пример
наглядно
объясняет
польза
dagger
создании
объекта
изучая
dagger
пришлось
просмотреть
материалы
нескольких
ресурсов
нигде
нашел
полной
информации
кроме
потратил
кучу
времени
создание
тестового
проекта
эксперименты
конца
разобраться
теме
тогда
понял
нужно
писать
свои
уроки
я
обобщил
собранную
информацию
дополнил
примерами
практики
так
получился
полноценный
курс
уроками
стиле
startandroidru
доступно
шагам
картинками
визуальные
схемы
курса
лучшего
понимания
работы
dagger
рассматриваем
самые
последние
возможности
библиотеки
первый
урок
доступен
бесплатно
регистрации
прочитав
примете
осознанное
решение
покупке
курс
постоянно
дополняется
на
сегодняшний
день
состоит
полный
курс
доступен
регистрации
сайте
оплаты
стоимость
курса
рублей
с
выходом
новых
уроков
стоимость
увеличивается
но
читатели
купившие
курс
автоматически
получат
доступ
новым
урокам
поэтому
тема
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
читателю
купившему
хотя
курс
предоставляется
скидка
остальные
курсы
доступ
курсу
предоставляется
навсегда
включая
последующие
уроки
обновления
сразу
курсы
скидкой
процентов
можете
купить
докупить
при
возникновении
какихлибо
вопросов
используйте
урок
дополнительные
возможности
во
втором
уроке
рассмотрим
некоторые
дополнительные
возможности
lazy
provider
named
qualifier
intoset
elementsintoset
intomap
inject
урок
subcomponent
scope
в
третьем
уроке
узнаете
такое
subcomponent
задается
время
жизни
объектов
помощью
scope
урок
produced
в
четвертом
уроке
разберем
асинхронные
механизмы
dagger
productioncomponent
producermodule
produces
producer
а
также
разберем
помощью
produced
обрабатывать
ошибки
урок
builderв
уроке
подробно
рассмотрим
билдеры
генерируются
даггером
использовать
свой
билдер
помощью
аннотации
передавать
объекты
компонент
минуя
модули
кроме
рассмотрим
вариант
архитектурного
решения
dagger
mvp
которое
позволит
сохранять
презентер
повороте
экрана
научимся
создавать
сабкомпоненты
помощью
билдеров
аргумента
subcomponents
аннотации
урок
androidinjectionв
уроке
разберемся
работает
механизм
androidinjection
который
позволяет
упростить
inject
activity
fragment
рассмотрим
классы
daggeractivity
daggerfragment
использовании
которых
вашем
коде
вообще
строки
вызовом
метода
inject
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
activity
lifecycle
activity
states
lessons
lesson
activity
lifecycle
activity
behavior
creation
invocation
closing
translated
taras
leskiv
application
running
create
new
activities
close
old
ones
hide
application
open
activity
process
events
required
example
free
resources
save
data
described
detail
activity
created
running
application
one
three
states
resumed
activity
visible
screen
focused
user
interact
state
sometimes
called
runningpaused
activity
focused
user
cannot
interact
visible
covered
another
activity
cover
whole
screen
transparentstopped
activity
visible
completely
covered
another
activity
focused
user
cannot
interact
activity
goes
one
state
another
system
invokes
different
methods
fill
code
illustrated
diagram
simplify
understanding
given
brief
state
description
brackets
state
names
cross
means
activity
exist
following
methods
invoked
system
oncreate
invoked
activity
created
first
timeonstart
invoked
activity
shown
useronresume
invoked
activity
becomes
available
user
interaction
onpause
invoked
another
activity
shownonstop
invoked
activity
visible
userondestroy
invoked
activity
destroyed
methods
cause
state
changes
viceversa
state
change
activity
trigger
invokes
methods
informed
state
changes
way
react
accordingly
see
order
methods
invoked
practice
lesson
emulate
screen
orientation
changes
android
emulator
wrong
use
version
project
need
create
new
avd
version
create
project
note
use
android
version
project
name
target
android
name
oneactivitystatepackage
name
activity
mainactivity
change
layout
important
open
mainactivityjava
code
default
usual
package
import
androidappactivity
import
androidosbundle
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
see
already
familiar
us
oncreate
method
already
implemented
repeat
important
understand
method
create
activity
creation
system
business
system
creates
activity
gives
us
opportunity
participate
run
code
inside
oncreate
method
use
opportunity
tell
system
activity
display
screen
rlayoutmain
add
remaining
methods
diagram
add
log
entry
package
import
androidappactivity
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
tag
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
implementing
methods
always
invoke
corresponding
superclass
methods
always
code
see
code
method
contains
superclass
method
invocation
code
located
methods
invoked
see
logs
configure
filter
tag
look
messages
pile
logs
learnt
done
lesson
save
everything
run
application
running
see
log
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
activity
created
passed
two
states
stopped
paused
third
state
resumed
means
created
oncreate
displayed
onstart
gained
ability
interact
user
onresume
press
back
button
emulators
activity
closed
see
log
mainactivity
onpausemainactivity
onstopmainactivity
ondestroy
activity
opposite
creation
first
focus
lost
onpause
disappears
screen
onstop
destroyed
completely
ondestroy
see
activity
behave
change
screen
orientation
run
application
find
list
running
applications
emulator
press
ctrl
eclipse
three
methods
invoked
creation
displayed
press
ctrl
emulator
orientation
changed
looks
like
nothing
special
happened
look
logs
see
mainactivity
onpausemainactivity
onstopmainactivity
ondestroymainactivity
oncreatemainactivity
onstartmainactivity
onresume
activity
completely
destroyed
created
process
procedures
saving
restoring
data
usually
occur
lose
data
application
save
appearance
talk
next
lessons
done
also
onrestart
method
invoked
onstart
activity
created
scratch
restored
stopped
state
look
method
next
lesson
usually
books
topic
presented
little
bit
different
template
explanation
seems
clear
written
usual
hope
managed
explain
subject
well
advice
lesson
read
documentation
link
provided
beginning
lesson
everything
written
well
remember
everything
better
important
thing
understand
moment
method
invoked
later
look
use
code
next
lesson
learn
state
changes
example
two
activities
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
введение
поиск
в
уроке
подробно
расскажу
dagger
возможностях
мы
разберем
такое
component
module
подключим
dagger
проекту
сделаем
несколько
простых
примеров
зачем
нужен
dagger
если
хотите
снизить
зависимость
объектов
друг
друга
упростить
написание
тестов
вашего
кода
подойдет
паттерн
dependency
injection
а
dagger
это
библиотека
которая
поможет
реализации
паттерна
в
миникурсе
опишу
использование
библиотеки
dagger
версии
далее
тексту
даггер
плюсы
даггера
сравнении
другими
библиотеками
генерирует
код
несложный
понимания
отладки
проверяет
зависимости
этапе
компиляции
создает
проблем
использовании
proguard
сразу
скажу
тема
нетривиальная
могут
возникать
вопросы
типа
сделать
все
случаи
рассмотреть
могу
поэтому
очень
рекомендую
создавать
примеры
проверять
это
работает
ином
случае
мне
практика
очень
сильно
помогла
понять
теорию
чтобы
понять
нам
понадобиться
dependency
injection
даггер
давайте
рассмотрим
небольшой
абстрактный
пример
котором
смоделируем
ситуацию
создание
одного
объекта
повлечь
собой
создание
нескольких
пусть
нашем
приложении
некая
mainactivity
соответствии
паттерном
mvp
презентер
презентеру
работы
нужны
будут
некие
itemcontroller
datacontroller
те
нам
создать
этих
объекта
создать
презентер
но
создания
двух
этих
объектов
нам
очередь
нужны
объекты
apiservice
sharedpreferences
а
создания
apiservice
нужны
restadapter
restadapterbuilder
okhttpclient
cache
в
обычной
реализации
это
выглядеть
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
file
cachedirectory
new
cache
cache
new
httpresponsecachecachedirectory
okhttpclient
httpclient
new
okhttpclient
httpclientsetcachecache
restadapterbuilder
builder
new
restadapterbuilder
buildersetclientnew
okclienthttpclient
restadapter
restadapter
builderbuild
apiservice
apiservice
restadaptercreateapiserviceclass
itemcontroller
itemcontroller
new
itemcontrollerapiservice
sharedpreferences
preference
datacontroller
datacontroller
new
datacontrollerpreference
activitypresenter
new
mainactivitypresenterthis
itemcontroller
datacontroller
в
mainactivity
создаем
кучу
объектов
итогу
получить
презентер
нам
примере
важно
какие
именно
объекты
создаются
главное
это
сколько
кода
потребоваться
написать
mainactivity
получить
результат
если
применим
паттерн
dependency
injection
используем
даггер
код
activity
выглядеть
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
activitypresenter
appgetcomponentgetpresenter
разумеется
код
создания
объектов
никуда
исчез
но
вынесен
activity
отдельные
классы
которым
даггер
имеет
доступ
в
итоге
просто
вызываем
метод
getpresenter
получить
объект
mainactivitypresenter
а
даггер
создаст
объект
необходимую
иерархию
объектов
то
самое
могли
сделать
даггера
простым
переносом
кода
создания
объектов
метод
типа
mainactivitypresentercreateinstance
но
presenter
которому
частично
нужны
те
объекты
методе
createinstance
нам
придется
дублировать
код
создания
некоторых
объектов
при
использовании
даггера
код
создания
необходимого
нам
объекта
существовать
одном
месте
одном
экземпляре
даггер
использует
код
везде
потребуется
создать
объект
теория
теперь
давайте
смотреть
работает
даггер
изнутри
возьмем
пример
activity
presenter
те
activity
своих
нужд
создает
объект
presenter
обычая
схема
создания
выглядеть
activity
presenter
те
activity
создает
presenter
самостоятельно
при
использовании
даггера
схема
выглядеть
activity
component
module
presenter
activity
обращается
компоненту
компонент
помощью
модулей
создает
presenter
возвращает
activity
модули
компоненты
это
ключевых
понятия
даггера
модули
это
просто
классы
помещаем
код
создания
объектов
и
обычно
каждый
модуль
включает
объекты
близкие
смыслу
например
модуль
itemmodule
содержать
код
создания
объектов
связанных
пользователями
те
чтонибудь
типа
item
itemcontroller
модуль
networkmodule
объекты
okhttpclient
apiservice
модуль
storagemodule
объекты
datacontroller
sharedpreferences
компонент
это
посредник
activity
модулем
когда
activity
нужен
какойлибо
объект
сообщает
компоненту
компонент
знает
модуль
умеет
создавать
объект
просит
модуль
создать
объект
передает
activity
при
компонент
использовать
другие
модули
создать
иерархию
объектов
необходимую
создания
искомого
объекта
процесс
работы
даггера
сравнить
обедом
mcdonalds
те
аналогии
схемой
даггера
activity
component
module
presenter
схема
mcdonalds
выглядит
клиент
кассир
производственная
линия
заказ
рассмотрим
подробнее
шаги
этих
схем
mcdonalds
даггер
клиент
определился
заказ
состоять
бигмака
картошки
колы
говорит
кассиру
activity
сообщает
компоненту
понадобится
presenter
кассир
ходит
производственной
линии
собирает
заказ
берет
бигмак
наливает
колу
насыпает
картошку
компонент
использует
модули
создать
необходимые
объекты
которые
понадобятся
создания
presenter
кассир
комплектует
заказ
пакет
поднос
выдает
клиенту
компонент
итоге
получает
модулей
требуемый
объект
presenter
отдает
activity
практика
теперь
простом
примере
посмотрим
создавать
модули
компоненты
помощью
activity
получать
требуемые
объекты
создайте
новый
проект
чтобы
использовать
даггер
добавьте
раздел
dependencies
файла
buildgradle
вашего
модуля
compile
annotationprocessor
если
работает
удалите
и
попробуйте
добавить
конец
файла
buildgradle
вашего
модуля
строки
add
plugin
buildscript
repositories
mavencentral
dependencies
classpath
apply
plugin
apply
plugin
comneenbedanktandroidapt
add
dagger
dependencies
dependencies
compile
apt
если
чтото
работает
воспользуйтесь
этим
в
качестве
объектов
которые
будем
запрашивать
даггера
используем
пару
классов
databasehelper
networkutils
public
class
databasehelper
public
class
networkutils
их
реализация
нам
важна
оставляем
пустыми
предположим
объекты
будут
нужны
нам
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
чтобы
получить
помощью
даггера
нам
нужно
создать
модули
компонент
создаем
модули
которые
будут
уметь
предоставлять
требуемые
объекты
именно
модулях
пишем
весь
код
созданию
объектов
это
обычные
классы
парой
аннотаций
public
class
networkmodule
networkutils
providenetworkutils
return
new
networkutils
public
class
storagemodule
databasehelper
providedatabasehelper
return
new
databasehelper
аннотацией
сообщаем
даггеру
класс
является
модулем
а
аннотация
указывает
метод
является
поставщиком
объекта
компонент
использовать
получить
объекттехнически
вполне
обойтись
одним
модулем
но
логичнее
разделить
объекты
модули
смыслу
области
применениямодули
готовы
создаем
компонент
для
нам
необходимо
создать
интерфейс
public
interface
appcomponent
данный
интерфейс
описывает
пустой
компонент
который
пока
уметь
при
компиляции
проекта
даггер
найдет
интерфейс
аннотации
сгенерирует
класс
daggerappcomponent
имя
класса
слово
dagger
имя
интерфейса
которые
реализует
интерфейс
это
класс
компонента
все
требуется
наполнить
интерфейс
методами
этим
дадим
понять
компоненту
какие
объекты
должен
уметь
нам
возвращать
а
сборе
проекта
даггер
реализует
сгенерированном
классе
компонента
компонент
возвращать
нам
объекты
двумя
способами
первый
это
обычные
getметоды
те
просто
вызываем
метод
который
вернет
нам
объект
второй
способ
интереснее
это
injectметоды
в
случае
передаем
компоненту
экземпляр
activity
компонент
заполняет
необходимые
поля
создавая
необходимые
объекты
рассмотрим
оба
способа
примерах
дополним
интерфейс
компонент
научился
создавать
объекты
public
interface
appcomponent
networkutils
getnetworkutils
databasehelper
getdatabasehelper
список
modules
это
модули
которых
компонент
сможет
искать
код
создания
объектов
методы
могут
любым
именем
главное
это
возвращаемые
типы
networkutils
databasehelper
они
дают
понять
компоненту
какие
именно
объекты
захотим
получить
при
компиляции
даггер
проверит
каком
модуле
объект
достать
нагенерит
реализации
двух
этих
методов
соответствующий
код
создания
этих
объектов
а
mainactivity
просто
вызовем
методы
компонента
получить
готовые
объекты
осталось
гдето
описать
создание
экземпляра
компонента
используем
application
класс
не
забудьте
добавить
манифест
public
class
app
extends
application
private
static
appcomponent
component
public
void
oncreate
superoncreate
component
daggerappcomponentcreate
public
static
appcomponent
getcomponent
return
component
в
методе
oncreate
создаем
компонент
на
месте
ваша
среда
разработки
скорее
ругаться
класс
daggerappcomponent
так
происходит
класса
daggerappcomponent
пока
существует
мы
описали
интерфейс
компонента
appcomponent
нам
скомпилировать
проект
даггер
создал
класскомпонент
скомпилируйте
проект
в
android
studio
это
сделать
меню
build
make
project
после
процесс
завершится
класс
daggerappcomponent
создан
недрах
папки
студия
знает
класс
должна
предлагать
добавить
import
коде
никаких
ошибок
теперь
mainactivity
можем
использовать
компонент
получить
готовые
объекты
databasehelper
networkutils
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
databasehelper
appgetcomponentgetdatabasehelper
networkutils
appgetcomponentgetnetworkutils
при
запуске
приложения
объекты
будут
созданы
даггером
если
крэшит
npe
убедитесь
добавили
app
класс
манифест
у
mainactivity
объекта
которые
получаем
компонента
но
штук
придется
интерфейсе
компонента
описать
getметодов
коде
mainactivity
написать
вызовов
этих
методов
у
даггера
удобное
решение
таких
случаев
мы
можем
научить
компонент
просто
возвращать
объекты
самому
наполнять
activity
требуемыми
объектами
те
даем
компоненту
экземпляр
mainactivity
смотрит
какие
объекты
нужны
создает
помещает
соответствующие
поля
перепишем
интерфейс
компонента
public
interface
appcomponent
void
injectsmainactivitymainactivity
mainactivity
вместо
пары
getметодов
описываем
injectметод
имя
любым
главное
это
тип
единственного
параметра
мы
указываем
mainactivity
тем
самым
говорим
компоненту
будем
вызывать
метод
передавать
туда
экземпляр
mainactivity
ожидаем
компонент
наполнит
экземпляр
требуемыми
объектами
при
компиляции
проекта
даггер
увидит
метод
интерфейсе
просмотрит
класс
mainactivity
наличие
помеченных
специальными
аннотациями
полей
определит
какие
объекты
нужно
создавать
в
итоге
классе
компонента
даггер
реализует
метод
injectsmainactivity
получал
объекты
своих
модулей
подставлял
соответствующие
переменные
переданного
экземпляра
mainactivity
перепишем
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
appgetcomponentinjectsmainactivitythis
аннотациями
помечаем
поля
которые
компонент
должен
заполнить
при
вызове
метода
injectsmainactivity
компонент
вытащит
модулей
объекты
databasehelper
networkutils
поместит
поля
mainactivity
этот
механизм
посмотреть
коде
класса
компонента
который
сгенерирован
даггером
метод
injectsmainactivity
public
void
injectsmainactivitymainactivity
mainactivity
mainactivitymembersinjectorinjectmembersmainactivity
если
пойти
дальше
посмотреть
внутрь
mainactivitymembersinjectorinjectmembers
увидим
следующее
public
void
injectmembersmainactivity
instance
instance
null
throw
new
inject
members
null
instancedatabasehelper
databasehelperproviderget
instancenetworkutils
networkutilsproviderget
здесь
просто
проверка
null
присвоение
объектов
поля
mainactivity
разумеется
getметоды
injectметоды
могут
использованы
вместе
одном
компоненте
я
описывал
отдельно
друг
друга
простоты
понимания
совокупность
объектов
которые
умеет
создавать
компонент
называется
граф
объектов
компонента
граф
зависимостей
компонента
те
примере
выше
граф
состоит
двух
объектов
databasehelper
networkutils
компонент
знает
создать
объекты
предоставить
в
некоторых
случаях
создании
одного
объекта
компоненту
потребоваться
объект
мы
говорили
самом
начале
урока
когда
создания
презентера
нам
понадобилось
создать
десяток
объектов
рассмотрим
пример
модуля
public
class
networkmodule
networkutils
providenetworkutilshttpclient
httpclient
return
new
networkutilshttpclient
httpclient
providehttpclient
return
new
httpclient
когда
компонента
попросим
объект
networkutils
компонент
придет
модуль
вызовет
метод
providenetworkutils
но
вход
этому
методу
требуется
объект
httpclient
компонент
ищет
модулей
умеет
создавать
объект
находит
модуле
он
вызывает
метод
providehttpclient
получает
объект
httpclient
использует
вызове
providenetworkutils
те
ваш
объект
требует
создания
другие
объекты
необходимо
модулях
описать
создание
этих
объектов
в
случае
компонент
создаст
цепочку
получит
искомый
объект
бывают
случаи
просто
создать
модулях
нужны
какието
объекты
извне
даггера
этот
случай
опишу
одном
следующих
уроков
к
плюсам
даггера
относят
какаято
ошибка
построении
зависимостей
узнаете
runtime
этапе
компиляции
давайте
проверим
создадим
пустой
класс
preferences
public
class
preferences
и
добавим
mainactivity
переменную
типа
аннотацией
inject
preferences
preferences
теперь
компонент
инджекте
должен
создать
объект
preferences
добавили
создание
объекта
модули
и
компонент
просто
знает
откуда
взять
пытаемся
скомпилировать
и
получаем
error
preferences
cannot
provided
without
constructor
method
компилятор
вполне
закономерно
жалуется
знает
откуда
компоненту
взять
объект
preferences
в
уроке
рассказал
самые
основы
даггера
особых
подробностей
сложностей
прочитав
сможете
понять
общий
принцип
работы
роли
компонента
модулей
в
следующих
уроках
расскажу
дополнительных
возможностях
которые
предоставляет
даггер
создании
объектов
мы
рассмотрим
пример
могут
организованы
компоненты
небольшом
приложении
а
также
изучим
возможность
компонента
создавать
объекты
отдельном
потоке
комментарии
очень
забавная
аналогия
макдональдсом
у
получалось
подключить
dagger
проекту
не
силён
англицком
вроде
нашёл
причину
проблемы
решение
причина
gradle
решение
добавляем
толькоdependencies
compile
annotationprocessor
а
это
используем
убираемclasspath
plugin
comneenbedanktandroidaptapt
комуто
благодарю
качественное
изложение
сформировалась
картина
происходящего
прошел
весь
курс
урок
диагонали
могу
уверенностью
сказать
это
круто
видно
человек
работает
этим
изучил
досконально
тему
пропустил
адаптировал
курса
особенно
спасибо
такие
мелочи
линки
доки
везде
проекты
гитхаб
повествование
простого
сложному
особенно
урок
просто
самый
жир
вобщем
души
большое
спасибо
дмитрий
могу
представить
это
труд
надеюсь
собираетесь
останавливаться
ибо
курсы
практикующего
это
золото
котлин
буду
ждать
новых
курсов
поглядываю
тестирование
нужно
сначала
закончить
rx
need
cheap
hosting
try
плюсам
даггера
относят
какаято
ошибка
построении
зависимостей
узнаете
runtime
этапе
компиляции
давайте
проверим
создадим
пустой
класс
минусам
странный
вопрос
почему
минусам
приложение
которое
компилируется
приложение
которое
падает
рантайме
большое
спасибо
автору
отличную
статью
даже
английском
сегменте
нашел
хорошую
статью
тему
а
понятно
просто
стартует
активити
oncreate
getcomponent
беру
указатель
окей
сразу
обьект
сетю
данныеесли
делаю
сетить
oncreate
немогу
нулевой
указатель
правильно
использовать
активити
inject
думал
это
спрингеа
appgetcomponentinjectsmainactivitythis
забыл
через
getметоды
всё
работает
причём
класса
app
inject
app
у
моего
daggergetbreakfast
компонета
метода
create
могу
выполнить
component
daggergetbreakfastcreate
в
чём
проблема
разобрался
всё
работает
прочитал
прочитал
вдумчиво
нарисовал
схему
бумаге
всё
четко
полкам
купил
курсы
надеюсь
дальше
всё
красиво
понятно
спасибо
вашу
работу
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
menu
groups
order
menuinflater
xmlmenu
lessons
lesson
create
menu
items
ids
group
sort
menu
items
translated
taras
leskiv
previous
lesson
observed
simplest
way
creating
menu
using
method
passed
text
parameter
look
another
implementation
method
methods
takes
parametersgroupid
group
identifier
menu
item
belongs
toitemid
menu
item
idorder
specifying
order
menu
items
showntitle
text
displayed
create
application
illustrate
parameters
used
textview
checkbox
screen
textview
display
menu
item
chosen
checkbox
define
whether
show
simple
expanded
menu
implemented
using
menu
groups
let
clarify
terms
android
terms
namings
application
running
user
clicks
menu
button
see
menu
user
checks
checkbox
menu
contains
items
displayed
create
project
project
name
target
android
name
menuadvpackage
name
rustartandroiddevelopmenuadvcreate
activity
mainactivity
open
mainxml
assign
id
existing
textview
erase
text
create
checkbox
code
open
mainactivityjava
fill
mainactivity
class
following
code
public
class
mainactivity
extends
activity
screen
elements
textview
tv
checkbox
chb
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
elements
tv
textview
findviewbyidridtextview
chb
checkbox
findviewbyidridchbextmenu
menu
creation
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
adding
menu
items
return
superoncreateoptionsmenumenu
menu
update
public
boolean
onprepareoptionsmenumenu
menu
todo
autogenerated
method
stub
menu
items
group
id
visible
checkbox
checked
chbischecked
return
superonprepareoptionsmenumenu
process
clicks
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
stringbuilder
sb
new
stringbuilder
print
info
pressed
menu
item
groupid
stringvalueofitemgetgroupid
itemid
stringvalueofitemgetitemid
order
stringvalueofitemgetorder
title
itemgettitle
tvsettextsbtostring
return
superonoptionsitemselecteditem
forget
update
imports
ctrl
shift
look
code
use
following
methods
invoked
menu
shown
first
time
creates
menu
used
add
menu
items
invoked
every
time
displaying
menu
make
changes
already
existing
menu
necessary
invoked
menu
item
clicked
define
menu
item
clicked
oncreateoptionsmenu
add
menu
items
look
add
method
parameters
first
parameter
group
id
first
three
items
equals
three
equals
copy
paste
exit
menu
items
united
group
id
visually
displayed
way
differ
color
something
else
use
group
id
onprepareoptionsmenu
implementation
second
parameter
id
menu
item
used
listener
define
menu
item
pressed
use
onoptionsitemselected
third
parameter
defines
item
position
menu
parameter
used
defining
order
menu
items
displayed
sort
order
ascending
smaller
order
larger
fourth
parameter
text
displayed
menu
item
everything
clear
menu
object
passed
onprepareoptionsmenu
method
work
current
example
invoke
method
allows
menu
items
passed
two
parameters
group
id
boolean
value
write
group
id
group
contains
copy
paste
exit
menu
items
use
checkbox
state
boolean
parameter
checked
menu
items
group
id
displayed
items
displayed
save
everything
launch
application
menu
menu
depending
checkbox
state
items
menu
visible
pay
attention
item
order
sorted
order
parameter
ascending
order
several
items
items
positioned
order
creation
oncreateoptionsmenu
method
pressing
menu
item
onoptionsitemselected
method
triggered
method
output
information
item
pressed
textview
compare
information
coded
creating
menu
items
parameters
match
made
order
items
add
method
convenience
groupid
itemid
order
title
try
add
items
menu
look
displayed
simplify
code
hardcoded
numbers
group
ids
menu
item
ids
usually
recommended
use
constants
use
constants
one
convenient
preferable
way
creating
menu
using
xmlfile
layoutfile
creating
screen
get
menu
created
programmatically
lesson
create
mymenuxml
file
folder
item
menu
item
group
group
items
id
attributes
use
approach
ids
screen
components
eclipse
generate
ids
rjava
orderincategory
attribute
order
items
title
text
menu
item
need
hardcode
creation
menu
item
connect
menu
passed
parameter
oncreateoptionsmenu
method
xmlfile
public
boolean
oncreateoptionsmenumenu
menu
getmenuinflaterinflatermenumymenu
menu
return
superoncreateoptionsmenumenu
using
getmenuinflater
method
obtain
invoke
inflate
method
pass
mymenuxml
file
folder
menu
object
parameters
menuinflater
takes
menu
object
fills
menu
items
mymenuxml
file
want
hide
group
invoke
setgroupvisible
method
pass
parameter
group
id
view
attributes
menu
xmlfile
details
recommend
try
test
ways
creating
menu
creating
menu
programmatically
flexible
xml
shrinks
code
amount
next
lesson
create
context
menu
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
пишем
простой
браузер
поиск
полный
список
в
уроке
пишем
простой
браузер
на
прошлом
уроке
увидели
вызвать
intent
action
data
uriобъект
httpадресом
запускается
браузер
отображает
содержимое
страницы
этому
httpадресу
мы
можем
самостоятельно
сделать
простейший
браузер
который
реагировать
intent
просто
отобразит
страницу
для
настроить
intent
filter
использовать
компонент
webview
на
первом
экране
приложения
кнопка
отправляющая
intent
на
втором
экране
webview
создадим
проект
project
name
build
target
android
application
name
simplebrowser
package
name
create
activity
mainactivity
рисуем
mainxml
на
экране
просто
кнопка
кодим
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidneturi
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
findviewbyidridbtnwebsetonclicklistenernew
onclicklistener
public
void
onclickview
v
startactivitynew
код
немного
непривычен
обратите
внимание
нигде
описываю
объект
класса
button
метод
findviewbyid
возвращает
view
это
view
поддерживает
метод
setonclicklistener
который
вызываю
а
методе
setonclicklistener
создаю
объект
реализующий
интерфейс
onclicklistener
нем
пишу
код
onclick
также
создаю
объект
intent
отдельно
прямо
методе
startactivity
кода
меньше
получилось
обычно
может
подойдет
вариант
итак
нажатию
кнопку
запускаем
intent
который
означает
хотим
просмотреть
сайт
создадим
второе
activity
сначала
layoutфайл
browserxml
на
экране
компонент
webview
создаем
browseractivityjava
package
import
androidappactivity
import
androidneturi
import
androidosbundle
import
androidwebkitwebview
public
class
browseractivity
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutbrowser
webview
webview
webview
findviewbyidridwebview
webviewsetwebviewclientnew
webviewclient
uri
data
getintentgetdata
webviewloadurldatatostring
определяем
webview
читаем
data
intent
передаем
строку
webview
теперь
пропишем
activity
манифесте
к
нему
нам
добавить
intent
filter
нем
указать
action
а
data
видим
несколько
параметров
используем
scheme
http
это
значит
uri
объект
intent
должен
содержать
httpадрес
не
забываем
category
default
label
browseractivity
укажите
например
mybrowser
также
манифесте
добавить
uses
permission
androidpermissioninternet
вкладке
permissions
чтобы
система
дала
приложению
доступ
интернет
все
сохраним
запустим
приложение
жмем
кнопку
видим
выбор
система
предлагает
нам
выбор
системный
браузер
наш
сделанный
те
intent
c
запросом
просмотр
httpадреса
нашел
системе
activity
которые
своих
intent
filter
заявили
умеют
отображать
httpадреса
выбираем
наше
mybrowser
видим
страницу
мы
увидели
activity
наших
приложениях
могут
обрабатывать
наши
придуманные
action
системные
и
самым
создавать
альтернативу
системным
приложениям
но
понимаете
запросто
могли
нашем
activity
использовать
webview
показывать
страницу
можно
использовать
textview
нем
просто
отобразить
виде
текста
адрес
data
или
накодить
httpзапрос
который
скачал
страницу
отобразил
htmlсодержимое
мы
могли
вообще
забить
httpадрес
показать
какуюнибудь
картинку
левую
просто
темный
экран
те
activity
создать
intent
filter
который
сообщать
системе
приложение
умеет
чтото
внутри
activity
какаянибудь
ерунда
это
вопросы
программерской
этики
здравого
смысла
адекватности
полный
код
манифестфайла
на
следующем
уроке
хранение
данных
помощью
preferences
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
task
formed
lessons
lesson
theory
task
fixing
activity
paused
state
translated
taras
leskiv
lesson
find
activity
placed
visible
taken
back
button
pressed
explained
quite
good
make
brief
interpretation
documentation
use
diagrams
already
know
application
contain
several
activities
activity
invoke
activities
applications
using
intent
intent
filter
want
send
mail
application
invoke
activity
mail
application
pass
required
data
message
sent
come
back
application
seems
like
everything
happened
context
single
application
workflow
achieved
running
two
activities
mail
inside
one
task
start
explaining
try
make
analogy
make
simple
understanding
give
similar
android
concepts
brackets
mechanism
activity
organization
similar
browser
navigation
implementation
currently
one
tab
opened
task
open
pages
activity
clicking
links
intent
every
moment
come
back
previous
page
clicking
back
forward
button
absent
page
back
button
clicked
removed
memory
want
open
click
link
need
open
something
new
create
new
tab
open
pages
click
links
come
back
need
end
several
tabs
background
one
currently
active
working
foreground
finally
list
analogies
browser
android
following
browser
androidtab
history
visited
pages
taskpage
activitylink
intent
text
task
easier
understand
task
group
several
activities
help
user
performs
specific
operation
usually
starting
position
creating
task
home
screen
home
invoke
application
list
applications
clicking
shortcut
application
activity
marked
main
manifestfile
put
task
root
activity
task
goes
foreground
invoking
application
system
notices
already
task
background
corresponds
application
bring
foreground
create
anything
invokes
put
top
task
receives
focus
remains
task
stopped
state
visible
focused
user
clicks
back
button
opened
deleted
task
destroyed
top
task
gains
focus
activities
stored
task
order
opened
added
task
sorted
ordered
way
inside
task
set
activities
task
also
called
back
stack
call
stack
diagram
official
site
demonstrates
example
top
part
user
see
bottom
part
contents
task
see
invoke
new
activities
added
top
stack
back
button
pressed
top
activity
removed
stack
previous
activity
displayed
suppose
task
several
activities
currently
working
foreground
case
press
home
button
nothing
removed
activities
saved
current
task
task
go
background
able
invoke
task
launching
application
whose
activity
root
task
hold
home
button
see
list
tasks
background
press
back
button
several
times
active
task
activities
left
stack
empty
stack
removed
user
see
home
screen
lot
nuances
complications
stop
go
knowledge
enough
answer
questions
previous
lesson
step
mainactivity
disappeared
screen
left
memory
destroyed
step
activitytwo
destroyed
disappeared
screen
step
end
mainactivity
destroyed
step
exceptional
know
step
mainactivity
left
stack
activitytwo
put
top
stack
gained
focus
steps
activities
deleted
top
stack
activities
left
stack
saw
home
screen
pressed
back
step
task
activities
would
gone
background
nothing
would
destroyed
open
project
previous
lesson
wanted
catch
activity
paused
state
state
means
activity
focused
visible
even
partially
achieve
assign
dialog
style
activitytwo
displayed
dialog
mainactivity
partially
visible
behind
mainactivity
paused
state
implement
open
androidmanifestxml
application
tab
find
activitytwo
right
theme
field
write
following
text
save
everything
run
application
mainactivity
appeared
logs
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
everything
correct
invoke
activitytwo
logs
mainactivity
onpauseactivitytwo
oncreateactivitytwo
onstartactivitytwo
onresume
see
onstop
method
invoked
mainactivity
means
application
put
stopped
state
remains
paused
state
press
back
logs
activitytwo
onpausemainactivity
onresumeactivitytwo
onstopactivitytwo
ondestroy
mainactivity
restored
onresume
invocation
onstart
needed
paused
stopped
state
clearly
noticed
difference
example
one
previous
lesson
mainactivity
paused
state
press
back
home
button
already
know
happen
cases
check
reading
logs
make
activitytwo
display
normal
go
manifest
delete
line
theme
field
way
already
enough
knowledge
create
application
multiple
activities
make
invocations
play
around
read
logs
make
knowledge
solid
way
next
lesson
invoking
activity
using
implicit
invocation
intent
filter
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
activity
lifecycle
в
каких
состояниях
activity
поиск
полный
список
в
уроке
activity
lifecycle
поведение
activity
создании
вызове
закрытии
при
работе
приложения
создаем
новые
activity
закрываем
старые
сворачиваем
приложение
снова
открываем
тд
activity
умеет
обрабатывать
движения
это
необходимо
например
освобождения
ресурсов
сохранения
данных
в
достаточно
подробно
это
описано
созданное
работе
приложения
activity
одном
трех
состояний
resumed
activity
видно
экране
оно
находится
фокусе
пользователь
взаимодействовать
это
состояние
также
называют
runningpaused
activity
фокусе
пользователь
взаимодействовать
видно
оно
перекрыто
другим
activity
которое
занимает
весь
экран
полупрозрачноstopped
activity
видно
полностью
перекрывается
другим
activity
соответственно
оно
фокусе
пользователь
взаимодействовать
когда
activity
переходит
одного
состояния
другое
система
вызывает
различные
методы
которые
можем
заполнять
своим
кодом
схематично
это
изобразить
для
упрощения
понимания
дал
краткое
описание
состояний
скобках
названиями
а
крестом
обозначил
отсутствие
activity
итак
имеем
следующие
методы
activity
которые
вызывает
система
oncreate
вызывается
первом
создании
activityonstart
вызывается
activity
видно
пользователюonresume
вызывается
доступно
активности
пользователя
взаимодействие
onpause
вызывается
показано
другое
activityonstop
вызывается
activity
становится
видно
пользователюondestroy
вызывается
activity
уничтожено
те
методы
не
вызывают
смену
состояния
наоборот
смена
состояния
activity
является
триггером
который
вызывает
методы
тем
самым
уведомляют
смене
можем
реагировать
соответственно
посмотрим
практике
каком
порядке
вызываются
методы
в
уроке
нам
эмулировать
событие
смены
ориентации
экрана
но
эмулятор
android
делает
это
криво
поэтому
проекте
будем
использовать
версию
для
новое
avd
версии
создадим
проект
обратите
внимание
используем
android
project
name
target
android
name
oneactivitystatepackage
name
activity
mainactivity
layout
меняем
нам
важен
открываем
mainactivityjava
обычно
код
умолчанию
package
import
androidappactivity
import
androidosbundle
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
мы
видим
реализован
знакомый
нам
схеме
метод
oncreate
повторюсь
важно
понимать
метод
не
создает
activity
создание
это
дело
системы
те
система
сама
создает
activity
нам
дает
возможность
немного
поучаствовать
выполнить
свой
код
методе
oncreate
мы
возможностью
пользуемся
говорим
системе
activity
должна
отобразить
экран
rlayoutmain
добавим
остальные
методы
схемы
каждый
добавим
запись
лог
package
import
androidappactivity
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
tag
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
в
каментах
подсказали
важное
замечание
при
реализации
этих
методов
обязательно
вызывайте
соответствующие
методы
суперкласса
обязательно
вашим
кодом
см
код
выше
каждый
метод
содержит
вызов
метода
суперкласса
свой
код
расположен
этих
вызовов
теперь
методы
будут
вызываться
будем
видеть
это
логах
настроим
фильтр
тег
states
искать
свои
сообщения
общей
куче
логов
как
это
делается
проходили
все
сохраним
запустим
приложение
после
запустилось
смотрим
лог
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
activity
создалось
прошло
состояния
stopped
paused
находится
третьем
состоянии
resumed
те
оно
создалось
oncreate
отобразилось
onstart
получило
возможность
взаимодействовать
пользователем
onresume
теперь
нажмем
кнопку
back
эмуляторе
activity
закрылось
смотрим
лог
mainactivity
onpausemainactivity
onstopmainactivity
ondestroy
activity
проделывает
путь
обратный
созданию
сначала
теряет
фокус
onpause
затем
исчезает
экрана
onstop
затем
полностью
уничтожается
ondestroy
посмотрим
ведет
activity
происходит
смена
ориентации
экрана
запустите
снова
приложение
либо
найдите
списке
приложений
системе
эмуляторе
либо
снова
нажмите
eclipse
в
логах
снова
отобразились
метода
вызванные
создании
теперь
эмуляторе
нажмите
ориентация
сменилась
кажется
особенного
произошло
смотрим
логи
видим
mainactivity
onpausemainactivity
onstopmainactivity
ondestroymainactivity
oncreatemainactivity
onstartmainactivity
onresume
activity
полностью
уничтожается
снова
создается
при
обычно
выполняются
процедуры
сохранения
восстановления
данных
потерялись
данные
приложение
сохранило
свой
вид
про
это
делается
будем
говорить
последующих
уроках
также
метод
onrestart
он
вызывается
методом
onstart
activity
создается
нуля
восстанавливается
состояния
stoped
его
рассмотрим
следующем
уроке
обычно
учебниках
эта
тема
дается
подругому
но
это
шаблонное
объяснение
кажется
недостаточно
понятным
поэтому
написал
свое
как
надеюсь
получилось
раскрыть
тему
советую
урока
прочитать
хелп
ссылку
который
дал
самом
начале
урока
там
очень
написано
и
знания
усвоятся
пока
главное
это
понять
момент
метод
вызывается
а
дальше
будем
разбираться
это
использовать
кодить
на
следующем
уроке
изучаем
смену
состояния
примере
двух
activity
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
intent
filter
practice
lessons
next
lesson
invoking
activity
using
implicit
invocation
intent
filter
translated
taras
leskiv
last
lessons
overloaded
theory
theory
must
understood
well
problems
practice
topics
basis
task
lifecycle
intent
understand
something
completely
always
open
materials
read
implement
examples
confirm
theory
everything
become
clear
previous
lessons
learnt
invoke
activity
using
intent
explicitly
defining
class
also
aware
another
way
activity
invocation
implicit
based
point
activity
invoked
name
functionality
want
complete
specific
actions
create
configure
corresponding
intent
sent
look
activities
solve
problem
look
implemented
practice
create
application
display
current
time
date
implement
using
three
activities
first
one
contain
two
buttons
show
time
show
date
second
display
time
third
display
date
clicking
show
time
button
invoke
second
activity
pressing
show
date
third
activity
implement
explicitly
defining
activity
classes
intent
using
intent
filter
create
project
project
name
target
android
name
intentfilterpackage
name
activity
mainactivity
open
mainxml
draw
two
buttons
mainactivityjava
implementation
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
button
btntime
button
findviewbyidridbtntime
button
btndate
button
findviewbyidridbtndate
btntimesetonclicklistenerthis
btndatesetonclicklistenerthis
public
void
onclickview
v
intent
intent
switchvgetid
case
ridbtntime
intent
new
startactivityintent
break
case
ridbtndate
intent
new
startactivityintent
break
code
defined
buttons
set
activity
click
listener
inside
onclick
method
define
button
clicked
create
intent
creating
intent
use
constructor
creating
intent
specify
attribute
called
action
usual
string
constant
action
usually
specifies
action
want
perform
example
system
actionconstants
view
edit
selection
list
make
call
action
performed
data
one
intentattribute
specified
data
inside
specify
object
need
user
address
book
map
coordinates
phone
number
etc
action
specifies
data
talk
data
next
lessons
use
action
already
enumerated
system
actionconstants
use
action
see
code
came
actionsrustartandroidintentactionshowtimerustartandroidintentactionshowdate
first
one
means
want
invoke
activity
show
current
time
second
one
activity
current
date
clearly
understand
following
thing
action
text
could
come
action
like
showtime
text
represents
want
accomplish
obvious
understandable
using
rustartandroidintentaction
prefix
avoid
collisions
may
application
installed
already
uses
showtime
action
want
intercept
action
rustartandroidintentactionshowtime
created
intent
action
sent
system
look
activities
activity
fit
intent
must
contain
action
attribute
value
action
intent
means
need
create
two
activities
configure
intent
filters
implement
displaying
date
time
activity
created
usual
create
activitytime
class
subclass
androidappactivity
register
manifest
activity
registered
manifest
create
intent
filter
place
select
activitytime
click
add
choose
intent
filter
click
ok
analogically
create
action
inside
intent
filter
write
rustartandroidintentactionshowtime
inside
name
field
also
create
category
inside
intent
filter
name
field
choose
androidintentcategorydefault
list
explain
needed
without
startactivityintent
invocation
find
activity
create
layout
new
activity
name
timexml
write
code
inside
activitytimejava
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitytime
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayouttime
simpledateformat
sdf
new
string
time
sdfformatnew
datesystemcurrenttimemillis
textview
tvtime
textview
findviewbyidridtvtime
tvtimesettexttime
everything
simple
calculate
current
time
display
textview
save
everything
run
application
press
show
time
button
time
displayed
intent
action
rustartandroidintentactionshowtime
found
displayed
activity
action
equal
rustartandroidintentactionshowtime
inside
intent
filter
get
back
back
button
press
show
date
button
application
generate
error
find
activity
corresponds
intent
action
rustartandroidintentactionshowdate
created
showtime
create
activity
name
activitydate
actions
creating
activitytime
class
creation
creating
activity
manifest
creating
intent
filter
action
rustartandroidintentactionshowdate
category
androidintentcategorydefault
name
layoutfile
datexml
activitydatejava
code
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitydate
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutdate
simpledateformat
sdf
new
string
date
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvdate
tvdatesettextdate
save
everything
run
application
press
show
date
see
date
displayed
means
intent
action
rustartandroidintentactionshowdate
found
displayed
activitydate
fits
intent
filter
make
knowledge
solid
something
else
remember
lesson
intent
filter
wrote
one
intent
find
several
appropriate
activities
case
user
given
choice
activity
use
implement
case
make
one
activity
react
intent
action
rustartandroidintentactionshowdate
display
current
date
analogically
activitydate
display
format
slightly
different
create
activity
name
activitydateex
actions
like
creating
activitydate
class
creation
activity
creation
manifest
creating
intent
filter
action
rustartandroidintentactionshowdate
category
androidintentcategorydefault
create
new
layoutfile
use
already
existing
datexml
actually
three
activities
could
used
layout
absolutely
identical
one
textview
activitydateexjava
code
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitydateex
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutdate
simpledateformat
sdf
new
mmm
string
date
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvdate
tvdatesettextdate
see
difference
activitydate
date
format
save
everything
run
application
press
show
date
see
following
choice
intent
found
two
activities
showed
name
parent
application
package
case
activities
application
text
distinguish
fix
providing
proper
names
press
back
close
selection
dialog
go
manifest
change
label
activity
date
basic
activitydatedate
extended
activitydateex
save
everything
run
application
press
show
date
see
following
choice
significantly
better
press
date
extended
see
date
extended
format
activitydateex
sent
intent
action
intent
found
activity
proper
intent
filter
displayed
found
several
activities
gave
choice
examples
great
explanation
mechanism
got
lost
create
project
structure
manifest
contents
manifest
contents
androidmanifestxml
tab
next
lesson
reading
action
intent
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
layoutinflater
учимся
использовать
поиск
полный
список
в
уроке
разбираем
использовать
layoutinflater
после
изучения
sqlite
самое
время
приступить
изучению
списков
list
но
этим
полезно
узнать
layoutinflater
это
знание
пригодится
нам
создании
расширенных
списков
также
этим
уроком
рекомендую
снова
прочесть
урок
освежить
знания
это
класс
который
умеет
содержимого
layoutфайла
создать
viewэлемент
метод
который
это
делает
называется
inflate
есть
несколько
реализаций
метода
различными
параметрами
но
используют
друг
друга
результат
выполнения
view
мы
рассмотрим
реализацию
как
видим
вход
метод
принимает
параметра
resource
id
layoutфайла
который
использован
создания
view
например
rlayoutmainroot
родительский
viewgroupэлемент
создаваемого
view
layoutparams
viewgroup
присваиваются
создаваемому
viewattachtoroot
присоединять
создаваемый
view
root
если
true
root
становится
родителем
создаваемого
view
те
это
равносильно
команде
rootaddviewview
если
false
создаваемый
view
просто
получает
layoutparams
root
дочерним
элементом
становится
посмотрим
практике
создадим
проект
project
name
build
target
android
application
name
layoutinflater
package
name
create
activity
mainactivity
открываем
mainxml
рисуем
экран
layout
layout
на
экране
две
viewgroup
linlayout
rellayout
в
textview
соответствующим
текстом
создадим
layoutфайл
textxml
тут
просто
textview
всяких
viewgroup
на
нем
будем
испытывать
layoutinflater
открываем
mainactivityjava
пишем
код
package
import
androidappactivity
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgrouplayoutparams
import
androidwidgettextview
public
class
mainactivity
extends
activity
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
view
view
ltinflaterinflaterlayouttext
null
false
layoutparams
lp
viewgetlayoutparams
view
viewgetclasstostring
view
null
lp
null
view
textview
viewgettext
мы
получаем
layoutinflater
методом
используем
получения
viewэлемента
layoutфайла
textxml
считываем
layoutparams
свежесозданного
view
обратите
внимание
параметры
которые
использовали
метода
inflate
мы
указали
id
layoutресурса
передали
null
качестве
родительского
элемента
соответственно
привязка
родителю
false
все
сохраним
запустим
на
экране
изменилось
тк
конвертнули
layout
view
никуда
поместили
он
просто
висит
памяти
смотрим
лог
class
view
class
androidwidgettextviewlayoutparams
view
null
truetext
view
layout
textview
мы
видим
класс
созданного
элемента
textview
все
верно
элемент
файле
textxml
далее
видим
null
вместо
layoutparams
это
произошло
родителя
методе
inflate
указали
null
а
именно
родителя
view
должен
получить
layoutparams
третья
строка
лога
показывает
текст
textview
он
layoutфайле
textxml
верно
давайте
немного
изменим
программу
будем
добавлять
наш
созданный
элемент
linlayout
mainxml
делается
это
просто
командой
addview
layoutparams
lp
viewgetlayoutparams
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
linlayoutaddviewview
view
viewgetclasstostring
добавляете
выделенные
строки
мы
нашли
linlayout
экрана
добавили
созданный
помощью
layoutinflater
элемент
сохраняем
запускаем
видим
элемент
добавился
экран
linlayout
теперь
давайте
попробуем
указать
родителя
root
вызове
метода
inflate
перепишем
метод
oncreate
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
view
ltinflaterinflaterlayouttext
linlayout
false
layoutparams
layoutparams
textview
relativelayout
rellayout
relativelayout
findviewbyidridrellayout
view
ltinflaterinflaterlayouttext
rellayout
false
layoutparams
layoutparams
textview
мы
находим
элементы
linlayout
rellayout
экрана
помощью
layoutinflater
создаем
viewэлемента
layoutфайла
textxml
для
первого
указываем
root
linlayout
второго
rellayout
но
третий
параметр
attachtoroot
оставляем
false
это
значит
созданный
viewэлемент
получит
layoutparams
rootэлемента
добавится
нему
все
сохраним
запустим
на
экране
поменялось
тк
чему
новые
элементы
добавляли
attachtoroot
false
смотрим
лог
class
class
androidwidgettextviewclass
layoutparams
class
layout
textviewclass
class
androidwidgettextviewclass
layoutparams
class
layout
textview
по
логам
видно
класс
созданных
элементов
textview
а
класс
layoutparams
различается
в
первом
случае
это
тк
качестве
root
элемента
методе
inflate
указали
linlayout
это
объект
класса
linearlayout
во
втором
случае
класс
layoutparams
созданного
элемента
потому
качестве
root
указали
rellayout
класс
relativelayout
теперь
варианта
добавить
созданные
экран
снова
использовать
методы
addview
передавать
true
качестве
третьего
параметра
метода
inflate
тогда
созданный
viewэлемент
добавлен
root
выберем
второй
вариант
внесем
изменения
код
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
view
ltinflaterinflaterlayouttext
linlayout
true
layoutparams
layoutparams
relativelayout
rellayout
relativelayout
findviewbyidridrellayout
view
ltinflaterinflaterlayouttext
rellayout
true
layoutparams
layoutparams
передаем
true
качестве
третьего
параметра
методе
inflate
убираем
строки
выведения
лог
текстов
textview
сейчас
понятно
почему
все
сохраним
запустим
приложение
как
видим
созданные
textview
появились
своих
родителях
которых
указали
методе
inflate
в
relativelayout
элементы
наложились
друг
друга
тк
настроили
расположение
в
данный
момент
это
существенно
смотрим
лог
class
class
androidwidgetlinearlayout
class
layoutparams
class
class
class
androidwidgetrelativelayout
class
layoutparams
class
обратите
внимание
класс
элементов
в
первом
случае
это
linearlayout
втором
relativelayout
те
метод
inflate
вернул
нам
созданные
layoutфайла
viewэлементы
те
указывали
root
а
созданные
layoutфайла
view
элементы
добавил
root
дочерние
аналогично
команде
addview
это
произошло
указали
true
третьем
параметре
attachtoroot
метода
inflate
соответственно
layoutparams
тк
linlayout
rellayout
имеют
родителя
linearlayout
и
layoutparams
берут
для
закрепления
темы
следующем
уроке
сделаем
пример
поинтереснее
на
следующем
уроке
делаем
свой
вариант
списка
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
activity
lifecycle
пример
смены
состояний
двумя
activity
поиск
полный
список
в
уроке
изучаем
смену
состояния
примере
двух
activity
на
прошлом
уроке
рассмотрели
какие
состояния
проходит
activity
время
своего
существования
какие
методы
вызываются
но
видели
activity
состоянии
resumed
те
видно
оно
фокусе
на
уроке
примере
двух
activity
попробуем
понять
каком
случае
activity
остаться
состоянии
stopped
те
видно
фокусе
существует
памяти
создадим
проект
project
name
build
target
android
application
name
twoactivitystate
package
name
create
activity
mainactivity
в
mainxml
пишем
следующее
activity
кнопка
go
activity
two
вызывать
второе
activity
откроем
mainactivityjava
пишем
туда
методы
включая
onrestart
методах
прописываем
запись
логи
также
описываем
находим
кнопку
присваиваем
обработчик
в
методе
onclick
пока
пишем
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
tag
button
btnacttwo
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnacttwo
button
findviewbyidridbtnacttwo
btnacttwosetonclicklistenerthis
logdtag
protected
void
onrestart
superonrestart
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
public
void
onclickview
v
какие
методы
каком
порядке
выполняются
работе
одного
activity
видели
прошлом
уроке
сейчас
нам
интересно
поведение
двух
activity
поэтому
создаем
второе
activity
назовем
activitytwo
вспоминаем
прошлые
уроки
создать
класс
таким
именем
суперклассом
androidappactivity
прописать
новое
activity
манифестфайле
также
создать
layoutфайл
назовем
twoxml
заполним
этим
кодом
activity
просто
textview
текстом
понятно
это
activitytwo
создаем
класс
код
activitytwojava
package
import
androidappactivity
import
androidosbundle
import
androidutillog
public
class
activitytwo
extends
activity
final
string
tag
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayouttwo
logdtag
protected
void
onrestart
superonrestart
logdtag
protected
void
onstart
superonstart
logdtag
protected
void
onresume
superonresume
logdtag
protected
void
onpause
superonpause
logdtag
protected
void
onstop
superonstop
logdtag
protected
void
ondestroy
superondestroy
logdtag
не
забудьте
добавить
запись
activitytwo
манифест
и
можем
дописать
код
метода
onclick
mainactivityjava
прописав
вызов
activitytwo
public
void
onclickview
v
intent
intent
new
intentthis
activitytwoclass
startactivityintent
добавляете
строки
фильтр
логов
должен
остаться
прошлого
урока
используем
если
создайте
фильтр
тегу
states
все
сохраним
приступим
испытаниям
запускаем
приложение
появилось
mainactivity
логи
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
все
прошлый
вызываются
метода
activity
проходит
состояния
stopped
paused
остается
состоянии
resumed
шаг
жмем
кнопку
go
activity
two
экране
появляется
activitytwo
логи
mainactivity
onpauseactivitytwo
oncreateactivitytwo
onstartactivitytwo
onresumemainactivity
onstop
давайте
разбираться
вызов
mainactivityonpause
означает
mainactivity
теряет
фокус
переходит
состояние
paused
затем
создается
oncreate
отображается
onstart
получает
фокус
onresume
activitytwo
затем
перестает
видно
onstop
mainactivity
обратите
внимание
вызывается
ondestroy
mainactivity
значит
оно
уничтожается
mainactivity
остается
памяти
состоянии
stopped
а
activitytwo
находится
состоянии
resumed
его
видно
оно
фокусе
взаимодействовать
шаг
жмем
кнопку
назад
back
эмуляторе
мы
вернулись
mainactivity
логи
activitytwo
onpausemainactivity
onrestartmainactivity
onstartmainactivity
onresumeactivitytwo
onstopactivitytwo
ondestroy
activitytwoonpause
означает
activitytwo
теряет
фокус
переходит
состояние
paused
mainactivity
должна
восстановиться
статуса
stopped
в
конце
прошлого
урока
написал
метод
onrestart
вызывается
методом
onstart
activity
создается
нуля
восстанавливается
состояния
stopped
это
наш
случай
mainactivity
уничтожено
системой
оно
висело
памяти
поэтому
вызывается
mainactivityonrestart
далее
вызываются
методы
mainactivityonstart
mainactivityonresume
значит
mainactivity
перешло
состояние
paused
отобразилось
resumed
получило
фокус
ну
вызов
методов
onstop
ondestroy
означает
activitytwo
переведено
статус
stopped
потеряло
видимость
уничтожено
шаг
жмем
назад
наше
приложение
закрылось
логи
mainactivity
onpausemainactivity
onstopmainactivity
ondestroy
логи
показывают
mainactivity
перешло
состояние
paused
stopped
уничтожено
если
первого
раза
непонятно
попробуйте
прогнать
алгоритм
несколько
сверяйтесь
схемой
она
достаточно
наглядная
поможет
разобраться
попробуйте
расписать
схему
бумаге
нарисовать
смену
статусов
activity
я
приведу
схему
шагов
наглядности
мы
увидели
activity
обязательно
уничтожается
видно
оставаться
памяти
в
связи
этим
думаю
наверняка
возник
вопрос
почему
шаге
mainactivity
исчезло
экрана
осталось
висеть
памяти
уничтожено
ведь
шаге
уничтожено
activitytwo
оно
пропало
экрана
а
шаге
итоге
уничтожено
mainactivity
почему
шаг
стал
исключением
об
поговорим
следующем
уроке
тк
получился
слишком
заумным
но
тема
очень
важная
одна
ключевых
понимания
принципов
работы
android
если
чегото
получилось
пишите
каменты
на
следующем
уроке
немного
теории
task
фиксируем
activity
состоянии
paused
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
simple
menu
lessons
lesson
create
menu
items
translated
taras
leskiv
guess
point
explaining
menu
displayed
menu
button
clicked
create
menu
create
project
project
name
target
android
name
menusimplepackage
name
rustartandroiddevelopmenusimplecreate
activity
mainactivity
open
mainactivityjava
method
responsible
creating
menu
menu
object
passed
method
parameter
add
menu
items
object
adding
procedure
simple
method
used
method
takes
text
menu
item
parameter
add
items
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
return
superoncreateoptionsmenumenu
oncreateoptionsmenu
method
returns
boolean
result
true
show
menu
false
show
could
made
checking
condition
result
check
show
menu
returning
false
need
delegate
choice
method
superclass
returns
true
default
save
everything
run
application
click
emulator
menu
button
four
menu
items
appeared
clicking
nothing
listener
implemented
activity
listener
method
called
receives
menu
item
clicked
parameter
menuitem
possible
define
menu
item
clicked
method
show
toast
message
text
menu
item
clicked
method
must
return
boolean
value
end
delegate
superclass
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
toastmaketextthis
itemgettitle
return
superonoptionsitemselecteditem
complete
code
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
return
superoncreateoptionsmenumenu
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
toastmaketextthis
itemgettitle
return
superonoptionsitemselecteditem
best
practice
define
clicked
menu
item
title
later
id
create
menu
slightly
differently
next
lesson
create
menu
items
ids
group
sort
menu
items
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
зачем
intent
атрибут
data
что
такое
uri
вызываем
системные
приложения
поиск
полный
список
в
уроке
узнаем
такое
uri
intentатрибут
data
вызываем
системные
приложения
браузер
звонилка
карта
мы
знаем
intent
имеет
атрибут
action
с
помощью
атрибута
обычно
дается
указание
действия
например
просмотр
редактирование
но
действие
обычно
совершается
просто
чемлибо
значит
кроме
указания
действия
должны
указывать
объект
которым
действия
нужно
произвести
для
intent
имеет
атрибут
data
один
способов
присвоения
значения
этому
атрибуту
метод
объекта
intent
на
вход
этому
методу
подается
объект
uri
это
объект
который
берет
строку
разбирает
составляющие
хранит
информацию
строка
должна
любая
составлена
соответствии
этим
документом
uri
имеет
кучу
методов
которые
позволяют
извлекать
распарсенной
строки
отдельные
элементы
я
создам
объект
uri
строки
лог
буду
выводить
название
метода
двоеточие
значение
которое
возвращает
например
возьмем
такую
строку
http
адрес
uri
uri
смотрим
нам
возвращают
методы
urigetscheme
httpurigetschemespecificpart
developerandroidcomurigethost
developerandroidcomurigetpath
urihtml
понятия
scheme
authority
host
path
пр
взяты
rfc
дока
ссылку
который
дал
выше
там
найти
полное
описание
понять
означают
свериться
нам
вернул
uri
рассмотрим
примеры
ftp
uri
uri
код
написанный
выше
идет
одной
строкой
самом
деле
здесь
идут
пробелы
вокруг
изза
особенностей
разметки
urigetscheme
ftpurigetschemespecificpart
googlecomurigetport
filesurigetuserinfo
bob
координаты
uri
uri
urigetscheme
geourigetschemespecificpart
здесь
получилось
выделить
scheme
schemespecificpart
номер
телефона
uri
uri
urigetscheme
аналогично
получилось
выделить
две
части
строки
контакт
адресной
книги
uri
uri
urigetscheme
contenturigetschemespecificpart
contactsurigetpath
в
примере
scheme
равен
content
это
особый
тип
данных
content
provider
он
позволяет
любой
программе
давать
доступ
своим
данным
другим
программам
читать
менять
данные
эту
тему
рассмотрим
позднее
сами
будем
создавать
тип
данных
посмотреть
какие
стандартные
uri
поддерживаются
примеры
показывают
uri
создать
абсолютно
разных
строк
httpадрес
ftpадрес
координаты
номер
телефона
контакт
адресной
книги
тип
содержимого
определить
scheme
и
scheme
настроить
intent
filter
отсеивать
intent
нужным
нам
типом
данных
uri
например
http
этим
займемся
позднее
пока
сделаем
простой
пример
котором
будем
формировать
intent
action
data
отправлять
смотреть
получится
попробуем
просмотреть
следующее
httpадрес
координаты
карте
открыть
окно
набора
номера
чтобы
посмотреть
координаты
карте
необходимо
приложение
google
maps
его
стандартных
образах
android
систем
тех
sdk
manager
скачивали
нужен
образ
название
которого
начинается
создайте
avd
платформе
google
apis
api
level
назовите
ваше
усмотрение
создадим
проект
обратите
внимание
используем
платформу
google
apis
версии
project
name
build
target
google
apis
application
name
simpleintents
package
name
create
activity
mainactivity
если
получилось
установить
google
apis
создавайте
проект
обычно
платформой
android
просто
работать
вызов
google
maps
примере
сформируем
экран
mainxml
на
экране
кнопки
первая
открывать
вебстраницу
вторая
карту
третья
звонилку
пишем
код
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidneturi
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
button
btnweb
button
btnmap
button
btncall
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnweb
button
findviewbyidridbtnweb
btnmap
button
findviewbyidridbtnmap
btncall
button
findviewbyidridbtncall
btnwebsetonclicklistenerthis
btnmapsetonclicklistenerthis
btncallsetonclicklistenerthis
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtnweb
intent
new
startactivityintent
break
case
ridbtnmap
intent
new
intent
startactivityintent
break
case
ridbtncall
intent
new
startactivityintent
break
я
использовал
разных
способа
создания
intentа
задания
атрибутов
в
случае
btnweb
использовал
конструктор
он
создает
intent
вход
сразу
принимает
action
data
мы
используем
стандартный
системный
action
это
константа
классе
intent
означает
хотим
просмотреть
чтолибо
в
качестве
data
подаем
объект
uri
созданный
вебссылки
и
попытаться
описать
словами
наш
код
получится
intent
означает
хотим
посмотреть
содержимое
ссылки
ищем
activity
которая
могла
нам
помочь
в
случае
btnmap
использовался
конструктор
он
просто
создает
intent
а
следующих
строках
присваиваем
атрибуты
action
data
action
снова
качестве
data
создаем
uri
пары
координат
этот
intent
означает
хотим
посмотреть
карте
указанные
координаты
в
случае
btncall
используем
конструктор
на
вход
сразу
подается
action
data
указывается
позже
action
данном
случае
открывает
звонилку
набирает
номер
указанный
data
начинает
звонок
в
data
помещаем
uri
созданный
номера
телефона
три
этих
способа
приводят
одному
результату
intent
заполненными
атрибутами
action
data
какой
использовать
решать
зависимости
ситуации
тк
нашему
приложению
понадобится
интернет
открыть
ссылку
посмотреть
карту
вашем
компе
интернет
также
файле
манифеста
приложения
вкладке
permission
добавьте
элемент
uses
permission
справа
поле
name
выберите
androidpermissioninternet
это
даст
приложению
доступ
интернет
правда
почемуто
работает
пока
понял
почему
все
сохраняем
запускаем
приложение
жмем
кнопку
web
открывается
стандартный
браузер
отображает
содержимое
страницы
ссылке
возвращаемся
жмем
map
отображается
карта
которая
показывает
место
соответствующее
указанным
координатам
возвращаемся
жмем
call
отображается
стандартный
экран
набора
номера
видим
номер
который
указывали
data
набран
нам
остается
нажать
кнопку
звонка
скорее
вопросов
типа
что
на
некоторые
сразу
могу
ответить
предлагаю
поэкспериментировать
текущем
приложении
что
указать
координаты
приставки
geo
система
ругнется
нашла
подходящего
activity
см
логи
тк
activity
карты
настроен
intent
filter
который
думаю
настроен
data
c
schema
geo
аналогично
сработает
звонилка
указать
номер
приставки
tel
что
координатах
оставить
geo
координаты
указать
кривые
если
попробуем
посмотреть
например
такие
координаты
geoab
карта
запустится
скажет
нам
unable
load
url
те
данные
подошли
schema
оказались
некорректными
что
координаты
указать
верно
action
использовать
получается
хотим
отредактировать
место
карте
заданное
этими
координатами
но
система
говорит
нам
нашла
такое
activity
потому
приложение
google
maps
ожидает
intent
action
оно
сможет
показать
нам
это
место
карте
а
редактирование
оно
подписывалось
необходимо
понять
приложения
системе
заточены
конкретные
действия
конкретными
типами
данных
и
попробуете
позвонить
адрес
сайта
открыть
карте
номер
телефона
система
просто
найдет
приложения
способные
это
на
следующем
уроке
пишем
простой
браузер
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
event
listeners
button
example
lessons
lesson
learn
process
button
clicks
find
listener
translated
taras
leskiv
lets
create
project
project
name
target
android
name
onclickbuttonspackage
name
rustartandroiddeveloponclickbuttonscreate
activity
mainactivity
layout
file
mainxml
write
following
save
textview
text
two
buttons
ok
cancel
make
textview
content
change
button
clicked
ok
clicked
display
text
ok
cancel
button
open
mainactivityjava
declare
instance
variables
objects
outside
oncreate
method
done
like
enable
us
referencing
variables
method
initialize
object
using
findviewbyid
method
already
familiar
end
resulted
code
like
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
update
import
section
objects
tvout
btnok
btncancel
correspond
viewelements
screen
work
teach
buttons
react
clicked
method
available
parameter
object
implements
button
delegate
click
processing
method
create
object
continue
writing
code
inside
oncreate
method
onclicklistener
oclbtnok
new
onclicklistener
public
void
onclickview
v
todo
autogenerated
method
stub
eclipse
underlines
onclicklistener
red
line
familiar
yet
must
update
import
section
press
eclipse
shows
us
knows
two
interfaces
onclicklistener
names
offers
us
choose
need
viewonclicklistener
button
method
setonclicklistener
requires
parameter
created
oclbtnok
object
implements
viewonclicklistener
interface
object
onclick
method
exactly
need
method
invoked
button
clicked
decided
display
ok
text
textview
tvout
button
clicked
implement
onclick
method
write
ok
click
listener
ready
thing
left
set
button
using
setonclicklistener
method
btnoksetonclicklisteneroclbtnok
resulting
code
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
create
click
listener
onclicklistener
oclbtnok
new
onclicklistener
public
void
onclickview
v
change
text
textview
tvout
ok
assign
click
listener
ok
button
btnok
btnoksetonclicklisteneroclbtnok
save
run
application
click
ok
button
see
text
changed
clicking
cancel
button
nothing
created
assigned
click
listener
similarly
ok
button
begin
create
listener
onclicklistener
oclbtncancel
new
onclicklistener
public
void
onclickview
v
change
text
textview
tvout
cancel
set
button
btncancelsetonclicklisteneroclbtncancel
save
run
check
result
buttons
process
clicks
talk
event
processing
mechanism
button
click
example
button
cannot
process
clicks
needs
listener
assigned
using
setonclicklistener
method
button
clicked
listener
reacts
runs
code
onclick
method
displayed
like
means
implement
follow
steps
create
listener
implement
onclick
method
assign
listener
button
event
processing
system
ready
next
lesson
learn
use
one
listener
several
viewelements
teach
activity
act
listener
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
введение
поиск
в
уроке
подробно
расскажу
dagger
возможностях
мы
разберем
такое
component
module
подключим
dagger
проекту
сделаем
несколько
простых
примеров
зачем
нужен
dagger
если
хотите
снизить
зависимость
объектов
друг
друга
упростить
написание
тестов
вашего
кода
подойдет
паттерн
dependency
injection
а
dagger
это
библиотека
которая
поможет
реализации
паттерна
в
миникурсе
опишу
использование
библиотеки
dagger
версии
далее
тексту
даггер
плюсы
даггера
сравнении
другими
библиотеками
генерирует
код
несложный
понимания
отладки
проверяет
зависимости
этапе
компиляции
создает
проблем
использовании
proguard
сразу
скажу
тема
нетривиальная
могут
возникать
вопросы
типа
сделать
все
случаи
рассмотреть
могу
поэтому
очень
рекомендую
создавать
примеры
проверять
это
работает
ином
случае
мне
практика
очень
сильно
помогла
понять
теорию
чтобы
понять
нам
понадобиться
dependency
injection
даггер
давайте
рассмотрим
небольшой
абстрактный
пример
котором
смоделируем
ситуацию
создание
одного
объекта
повлечь
собой
создание
нескольких
пусть
нашем
приложении
некая
mainactivity
соответствии
паттерном
mvp
презентер
презентеру
работы
нужны
будут
некие
itemcontroller
datacontroller
те
нам
создать
этих
объекта
создать
презентер
но
создания
двух
этих
объектов
нам
очередь
нужны
объекты
apiservice
sharedpreferences
а
создания
apiservice
нужны
restadapter
restadapterbuilder
okhttpclient
cache
в
обычной
реализации
это
выглядеть
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
file
cachedirectory
new
cache
cache
new
httpresponsecachecachedirectory
okhttpclient
httpclient
new
okhttpclient
httpclientsetcachecache
restadapterbuilder
builder
new
restadapterbuilder
buildersetclientnew
okclienthttpclient
restadapter
restadapter
builderbuild
apiservice
apiservice
restadaptercreateapiserviceclass
itemcontroller
itemcontroller
new
itemcontrollerapiservice
sharedpreferences
preference
datacontroller
datacontroller
new
datacontrollerpreference
activitypresenter
new
mainactivitypresenterthis
itemcontroller
datacontroller
в
mainactivity
создаем
кучу
объектов
итогу
получить
презентер
нам
примере
важно
какие
именно
объекты
создаются
главное
это
сколько
кода
потребоваться
написать
mainactivity
получить
результат
если
применим
паттерн
dependency
injection
используем
даггер
код
activity
выглядеть
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
activitypresenter
appgetcomponentgetpresenter
разумеется
код
создания
объектов
никуда
исчез
но
вынесен
activity
отдельные
классы
которым
даггер
имеет
доступ
в
итоге
просто
вызываем
метод
getpresenter
получить
объект
mainactivitypresenter
а
даггер
создаст
объект
необходимую
иерархию
объектов
то
самое
могли
сделать
даггера
простым
переносом
кода
создания
объектов
метод
типа
mainactivitypresentercreateinstance
но
presenter
которому
частично
нужны
те
объекты
методе
createinstance
нам
придется
дублировать
код
создания
некоторых
объектов
при
использовании
даггера
код
создания
необходимого
нам
объекта
существовать
одном
месте
одном
экземпляре
даггер
использует
код
везде
потребуется
создать
объект
теория
теперь
давайте
смотреть
работает
даггер
изнутри
возьмем
пример
activity
presenter
те
activity
своих
нужд
создает
объект
presenter
обычая
схема
создания
выглядеть
activity
presenter
те
activity
создает
presenter
самостоятельно
при
использовании
даггера
схема
выглядеть
activity
component
module
presenter
activity
обращается
компоненту
компонент
помощью
модулей
создает
presenter
возвращает
activity
модули
компоненты
это
ключевых
понятия
даггера
модули
это
просто
классы
помещаем
код
создания
объектов
и
обычно
каждый
модуль
включает
объекты
близкие
смыслу
например
модуль
itemmodule
содержать
код
создания
объектов
связанных
пользователями
те
чтонибудь
типа
item
itemcontroller
модуль
networkmodule
объекты
okhttpclient
apiservice
модуль
storagemodule
объекты
datacontroller
sharedpreferences
компонент
это
посредник
activity
модулем
когда
activity
нужен
какойлибо
объект
сообщает
компоненту
компонент
знает
модуль
умеет
создавать
объект
просит
модуль
создать
объект
передает
activity
при
компонент
использовать
другие
модули
создать
иерархию
объектов
необходимую
создания
искомого
объекта
процесс
работы
даггера
сравнить
обедом
mcdonalds
те
аналогии
схемой
даггера
activity
component
module
presenter
схема
mcdonalds
выглядит
клиент
кассир
производственная
линия
заказ
рассмотрим
подробнее
шаги
этих
схем
mcdonalds
даггер
клиент
определился
заказ
состоять
бигмака
картошки
колы
говорит
кассиру
activity
сообщает
компоненту
понадобится
presenter
кассир
ходит
производственной
линии
собирает
заказ
берет
бигмак
наливает
колу
насыпает
картошку
компонент
использует
модули
создать
необходимые
объекты
которые
понадобятся
создания
presenter
кассир
комплектует
заказ
пакет
поднос
выдает
клиенту
компонент
итоге
получает
модулей
требуемый
объект
presenter
отдает
activity
практика
теперь
простом
примере
посмотрим
создавать
модули
компоненты
помощью
activity
получать
требуемые
объекты
создайте
новый
проект
чтобы
использовать
даггер
добавьте
раздел
dependencies
файла
buildgradle
вашего
модуля
compile
annotationprocessor
если
работает
удалите
и
попробуйте
добавить
конец
файла
buildgradle
вашего
модуля
строки
add
plugin
buildscript
repositories
mavencentral
dependencies
classpath
apply
plugin
apply
plugin
comneenbedanktandroidapt
add
dagger
dependencies
dependencies
compile
apt
если
чтото
работает
воспользуйтесь
этим
в
качестве
объектов
которые
будем
запрашивать
даггера
используем
пару
классов
databasehelper
networkutils
public
class
databasehelper
public
class
networkutils
их
реализация
нам
важна
оставляем
пустыми
предположим
объекты
будут
нужны
нам
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
чтобы
получить
помощью
даггера
нам
нужно
создать
модули
компонент
создаем
модули
которые
будут
уметь
предоставлять
требуемые
объекты
именно
модулях
пишем
весь
код
созданию
объектов
это
обычные
классы
парой
аннотаций
public
class
networkmodule
networkutils
providenetworkutils
return
new
networkutils
public
class
storagemodule
databasehelper
providedatabasehelper
return
new
databasehelper
аннотацией
сообщаем
даггеру
класс
является
модулем
а
аннотация
указывает
метод
является
поставщиком
объекта
компонент
использовать
получить
объекттехнически
вполне
обойтись
одним
модулем
но
логичнее
разделить
объекты
модули
смыслу
области
применениямодули
готовы
создаем
компонент
для
нам
необходимо
создать
интерфейс
public
interface
appcomponent
данный
интерфейс
описывает
пустой
компонент
который
пока
уметь
при
компиляции
проекта
даггер
найдет
интерфейс
аннотации
сгенерирует
класс
daggerappcomponent
имя
класса
слово
dagger
имя
интерфейса
которые
реализует
интерфейс
это
класс
компонента
все
требуется
наполнить
интерфейс
методами
этим
дадим
понять
компоненту
какие
объекты
должен
уметь
нам
возвращать
а
сборе
проекта
даггер
реализует
сгенерированном
классе
компонента
компонент
возвращать
нам
объекты
двумя
способами
первый
это
обычные
getметоды
те
просто
вызываем
метод
который
вернет
нам
объект
второй
способ
интереснее
это
injectметоды
в
случае
передаем
компоненту
экземпляр
activity
компонент
заполняет
необходимые
поля
создавая
необходимые
объекты
рассмотрим
оба
способа
примерах
дополним
интерфейс
компонент
научился
создавать
объекты
public
interface
appcomponent
networkutils
getnetworkutils
databasehelper
getdatabasehelper
список
modules
это
модули
которых
компонент
сможет
искать
код
создания
объектов
методы
могут
любым
именем
главное
это
возвращаемые
типы
networkutils
databasehelper
они
дают
понять
компоненту
какие
именно
объекты
захотим
получить
при
компиляции
даггер
проверит
каком
модуле
объект
достать
нагенерит
реализации
двух
этих
методов
соответствующий
код
создания
этих
объектов
а
mainactivity
просто
вызовем
методы
компонента
получить
готовые
объекты
осталось
гдето
описать
создание
экземпляра
компонента
используем
application
класс
не
забудьте
добавить
манифест
public
class
app
extends
application
private
static
appcomponent
component
public
void
oncreate
superoncreate
component
daggerappcomponentcreate
public
static
appcomponent
getcomponent
return
component
в
методе
oncreate
создаем
компонент
на
месте
ваша
среда
разработки
скорее
ругаться
класс
daggerappcomponent
так
происходит
класса
daggerappcomponent
пока
существует
мы
описали
интерфейс
компонента
appcomponent
нам
скомпилировать
проект
даггер
создал
класскомпонент
скомпилируйте
проект
в
android
studio
это
сделать
меню
build
make
project
после
процесс
завершится
класс
daggerappcomponent
создан
недрах
папки
студия
знает
класс
должна
предлагать
добавить
import
коде
никаких
ошибок
теперь
mainactivity
можем
использовать
компонент
получить
готовые
объекты
databasehelper
networkutils
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
databasehelper
appgetcomponentgetdatabasehelper
networkutils
appgetcomponentgetnetworkutils
при
запуске
приложения
объекты
будут
созданы
даггером
если
крэшит
npe
убедитесь
добавили
app
класс
манифест
у
mainactivity
объекта
которые
получаем
компонента
но
штук
придется
интерфейсе
компонента
описать
getметодов
коде
mainactivity
написать
вызовов
этих
методов
у
даггера
удобное
решение
таких
случаев
мы
можем
научить
компонент
просто
возвращать
объекты
самому
наполнять
activity
требуемыми
объектами
те
даем
компоненту
экземпляр
mainactivity
смотрит
какие
объекты
нужны
создает
помещает
соответствующие
поля
перепишем
интерфейс
компонента
public
interface
appcomponent
void
injectsmainactivitymainactivity
mainactivity
вместо
пары
getметодов
описываем
injectметод
имя
любым
главное
это
тип
единственного
параметра
мы
указываем
mainactivity
тем
самым
говорим
компоненту
будем
вызывать
метод
передавать
туда
экземпляр
mainactivity
ожидаем
компонент
наполнит
экземпляр
требуемыми
объектами
при
компиляции
проекта
даггер
увидит
метод
интерфейсе
просмотрит
класс
mainactivity
наличие
помеченных
специальными
аннотациями
полей
определит
какие
объекты
нужно
создавать
в
итоге
классе
компонента
даггер
реализует
метод
injectsmainactivity
получал
объекты
своих
модулей
подставлял
соответствующие
переменные
переданного
экземпляра
mainactivity
перепишем
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
appgetcomponentinjectsmainactivitythis
аннотациями
помечаем
поля
которые
компонент
должен
заполнить
при
вызове
метода
injectsmainactivity
компонент
вытащит
модулей
объекты
databasehelper
networkutils
поместит
поля
mainactivity
этот
механизм
посмотреть
коде
класса
компонента
который
сгенерирован
даггером
метод
injectsmainactivity
public
void
injectsmainactivitymainactivity
mainactivity
mainactivitymembersinjectorinjectmembersmainactivity
если
пойти
дальше
посмотреть
внутрь
mainactivitymembersinjectorinjectmembers
увидим
следующее
public
void
injectmembersmainactivity
instance
instance
null
throw
new
inject
members
null
instancedatabasehelper
databasehelperproviderget
instancenetworkutils
networkutilsproviderget
здесь
просто
проверка
null
присвоение
объектов
поля
mainactivity
разумеется
getметоды
injectметоды
могут
использованы
вместе
одном
компоненте
я
описывал
отдельно
друг
друга
простоты
понимания
совокупность
объектов
которые
умеет
создавать
компонент
называется
граф
объектов
компонента
граф
зависимостей
компонента
те
примере
выше
граф
состоит
двух
объектов
databasehelper
networkutils
компонент
знает
создать
объекты
предоставить
в
некоторых
случаях
создании
одного
объекта
компоненту
потребоваться
объект
мы
говорили
самом
начале
урока
когда
создания
презентера
нам
понадобилось
создать
десяток
объектов
рассмотрим
пример
модуля
public
class
networkmodule
networkutils
providenetworkutilshttpclient
httpclient
return
new
networkutilshttpclient
httpclient
providehttpclient
return
new
httpclient
когда
компонента
попросим
объект
networkutils
компонент
придет
модуль
вызовет
метод
providenetworkutils
но
вход
этому
методу
требуется
объект
httpclient
компонент
ищет
модулей
умеет
создавать
объект
находит
модуле
он
вызывает
метод
providehttpclient
получает
объект
httpclient
использует
вызове
providenetworkutils
те
ваш
объект
требует
создания
другие
объекты
необходимо
модулях
описать
создание
этих
объектов
в
случае
компонент
создаст
цепочку
получит
искомый
объект
бывают
случаи
просто
создать
модулях
нужны
какието
объекты
извне
даггера
этот
случай
опишу
одном
следующих
уроков
к
плюсам
даггера
относят
какаято
ошибка
построении
зависимостей
узнаете
runtime
этапе
компиляции
давайте
проверим
создадим
пустой
класс
preferences
public
class
preferences
и
добавим
mainactivity
переменную
типа
аннотацией
inject
preferences
preferences
теперь
компонент
инджекте
должен
создать
объект
preferences
добавили
создание
объекта
модули
и
компонент
просто
знает
откуда
взять
пытаемся
скомпилировать
и
получаем
error
preferences
cannot
provided
without
constructor
method
компилятор
вполне
закономерно
жалуется
знает
откуда
компоненту
взять
объект
preferences
в
уроке
рассказал
самые
основы
даггера
особых
подробностей
сложностей
прочитав
сможете
понять
общий
принцип
работы
роли
компонента
модулей
в
следующих
уроках
расскажу
дополнительных
возможностях
которые
предоставляет
даггер
создании
объектов
мы
рассмотрим
пример
могут
организованы
компоненты
небольшом
приложении
а
также
изучим
возможность
компонента
создавать
объекты
отдельном
потоке
комментарии
очень
забавная
аналогия
макдональдсом
у
получалось
подключить
dagger
проекту
не
силён
англицком
вроде
нашёл
причину
проблемы
решение
причина
gradle
решение
добавляем
толькоdependencies
compile
annotationprocessor
а
это
используем
убираемclasspath
plugin
comneenbedanktandroidaptapt
комуто
благодарю
качественное
изложение
сформировалась
картина
происходящего
прошел
весь
курс
урок
диагонали
могу
уверенностью
сказать
это
круто
видно
человек
работает
этим
изучил
досконально
тему
пропустил
адаптировал
курса
особенно
спасибо
такие
мелочи
линки
доки
везде
проекты
гитхаб
повествование
простого
сложному
особенно
урок
просто
самый
жир
вобщем
души
большое
спасибо
дмитрий
могу
представить
это
труд
надеюсь
собираетесь
останавливаться
ибо
курсы
практикующего
это
золото
котлин
буду
ждать
новых
курсов
поглядываю
тестирование
нужно
сначала
закончить
rx
need
cheap
hosting
try
плюсам
даггера
относят
какаято
ошибка
построении
зависимостей
узнаете
runtime
этапе
компиляции
давайте
проверим
создадим
пустой
класс
минусам
странный
вопрос
почему
минусам
приложение
которое
компилируется
приложение
которое
падает
рантайме
большое
спасибо
автору
отличную
статью
даже
английском
сегменте
нашел
хорошую
статью
тему
а
понятно
просто
стартует
активити
oncreate
getcomponent
беру
указатель
окей
сразу
обьект
сетю
данныеесли
делаю
сетить
oncreate
немогу
нулевой
указатель
правильно
использовать
активити
inject
думал
это
спрингеа
appgetcomponentinjectsmainactivitythis
забыл
через
getметоды
всё
работает
причём
класса
app
inject
app
у
моего
daggergetbreakfast
компонета
метода
create
могу
выполнить
component
daggergetbreakfastcreate
в
чём
проблема
разобрался
всё
работает
прочитал
прочитал
вдумчиво
нарисовал
схему
бумаге
всё
четко
полкам
купил
курсы
надеюсь
дальше
всё
красиво
понятно
спасибо
вашу
работу
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
introduction
lessons
good
afternoon
introductory
lesson
code
anything
lesson
enlighten
reasons
decided
create
site
translated
taras
leskiv
started
android
development
examples
official
web
site
understand
half
things
gained
knowledge
read
theory
web
site
stage
acquaintance
android
ended
know
unfortunately
reason
think
reading
books
later
came
across
article
best
android
development
got
interested
found
next
started
reading
books
get
everything
much
first
examples
start
reading
books
scratch
lot
things
may
seem
vague
unclear
would
like
create
lessons
beginners
way
unknown
topics
left
behind
reader
try
explain
everything
detailed
possible
make
different
examples
clearness
new
lesson
include
use
new
concepts
objects
use
objects
previous
lessons
consolidation
knowledge
try
make
lesson
independent
isolated
possible
find
topic
need
browse
lots
unnecessary
stuff
trying
pick
examples
enlighten
topic
best
unlike
authors
going
teach
programming
realize
possible
know
many
lessons
mind
something
like
hundred
enough
learn
basics
one
hundred
learn
different
advanced
stuff
start
learning
likely
visit
sites
except
official
site
additional
knowledge
find
lot
useful
consistent
clearly
presented
information
understand
lessons
always
manual
must
neglect
ignore
stuff
enlighten
lesson
subject
give
superfluous
materials
please
consider
content
lessons
single
right
way
implementation
continue
reading
books
lessons
appear
improve
knowledge
finally
guess
become
advanced
developers
demand
market
switch
channel
would
interesting
next
lesson
install
configure
development
environment
android
applications
ps
development
done
java
also
require
knowledge
sql
xml
related
technologies
assumed
familiar
technologies
read
something
basic
stuff
java
google
periodically
releases
updates
android
development
environment
quite
possible
lesson
content
little
bit
deprecated
real
picture
differ
screenshots
difference
substantial
examples
work
write
startofandroid
gmailcom
update
lesson
difference
background
color
font
size
obviously
critical
influence
lesson
premise
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
intent
attributes
uri
data
launch
system
apps
lessons
lesson
explore
uri
data
intent
attribute
launch
system
apps
browser
dialer
map
know
intent
action
attribute
used
indicate
action
viewing
editing
example
common
action
often
applied
smthso
need
declare
object
action
intent
data
attribute
way
set
value
attribute
method
object
must
passed
method
uri
object
uses
string
disassembles
parts
remember
allowed
use
string
want
use
strings
declared
according
document
uri
methods
allow
us
retrieve
separate
parts
parsed
string
create
uri
string
pass
using
colon
name
value
returns
logs
take
string
http
address
example
uri
uri
look
methods
return
urigetscheme
httpurigetschemespecificpart
developerandroidcomurigethost
developerandroidcomurigetpath
urihtml
scheme
authority
host
path
others
concepts
taken
rfc
document
linked
following
link
find
full
description
understand
meaning
verify
returned
uri
take
look
example
ftp
uri
uri
real
code
written
one
string
spaces
layout
features
urigetscheme
ftpurigetschemespecificpart
googlecomurigetport
filesurigetuserinfo
bob
coordinates
uri
uri
urigetscheme
geourigetschemespecificpart
could
retrieve
scheme
schemespecificpart
phone
number
uri
uri
urigetscheme
similarly
two
parts
could
retrieve
contact
uri
uri
urigetscheme
contenturigetschemespecificpart
contactsurigetpath
scheme
equals
content
within
example
special
data
type
content
provider
allows
program
give
access
data
programs
read
edit
data
unveil
topic
later
create
data
type
inquire
standard
supported
uris
examples
show
uri
could
created
completely
different
strings
http
address
ftp
address
coordinates
phone
numbers
contacts
content
type
could
identified
scheme
also
scheme
could
adjusted
within
intent
filter
filter
intents
data
type
need
http
example
later
code
simple
example
declare
intent
action
data
send
wait
result
view
http
address
coordinates
map
open
dialer
need
google
maps
app
view
map
coordinates
app
standard
android
system
images
downloaded
sdk
manager
need
system
image
name
begins
create
avd
platform
google
apis
api
level
call
way
want
create
project
note
use
google
apis
project
name
build
target
google
apis
application
name
simpleintents
package
name
create
activity
mainactivity
manage
load
google
apis
create
new
project
usual
android
platform
google
maps
work
within
example
code
mainxml
three
buttons
screen
first
one
open
webpage
second
map
opening
third
dialer
lets
code
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidneturi
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
button
btnweb
button
btnmap
button
btncall
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnweb
button
findviewbyidridbtnweb
btnmap
button
findviewbyidridbtnmap
btncall
button
findviewbyidridbtncall
btnwebsetonclicklistenerthis
btnmapsetonclicklistenerthis
btncallsetonclicklistenerthis
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtnweb
intent
new
startactivityintent
break
case
ridbtnmap
intent
new
intent
startactivityintent
break
case
ridbtncall
intent
new
startactivityintent
break
followed
three
different
ways
create
intent
attributes
used
constructor
btnweb
creates
intent
action
data
variables
use
standard
action
indicates
want
view
something
pass
uri
created
web
link
data
variable
try
describe
words
code
get
something
like
intent
indicates
want
view
content
looking
activity
case
btnmap
used
constructor
creates
intent
determine
action
data
attributes
within
next
rows
action
use
uri
created
coordinates
data
intent
indicates
want
see
coordinates
map
use
constructor
btncall
needs
action
set
data
attribute
determined
later
action
case
opens
dialer
dial
number
determined
data
launch
call
set
uri
created
phone
number
data
three
ways
lead
us
result
get
intent
determined
action
data
attributes
decide
one
use
depending
situation
need
internet
connection
pc
app
use
open
link
show
map
add
users
permission
element
within
manifest
choose
androidpermissioninternet
name
allow
internet
connection
app
case
works
even
without
permission
get
save
launch
app
click
web
button
standard
browser
launched
showing
link
content
return
main
screen
click
map
map
shows
place
according
determined
coordinates
displayed
return
main
screen
click
call
standard
dialer
displayed
see
determined
within
data
number
already
dialed
need
click
callbutton
likely
may
questions
answer
suggest
make
experiments
within
app
use
prefix
system
warn
suitable
activity
map
activity
adjusted
work
schema
geo
think
use
tel
prefix
call
activity
similarly
work
use
geo
range
coordinates
use
range
coordinates
example
like
geoab
map
activity
launched
warn
load
ie
data
suitable
schema
incorrect
use
wright
coordinates
action
instead
turns
want
edit
place
map
defined
coordinates
system
warn
us
appropriate
activity
google
app
waiting
intent
action
show
us
place
map
agree
edit
place
necessary
understand
system
apps
designed
specific
actions
specific
data
try
make
call
http
link
find
phone
number
map
system
find
appropriate
activity
next
lesson
code
simple
browser
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
войти
поиск
имя
логин
пароль
повтор
пароля
адрес
электронной
почты
подтверждение
адреса
электронной
почты
captcha
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
меню
группы
порядок
menuinflater
xmlменю
поиск
полный
список
в
уроке
создаем
пункты
меню
c
id
группируем
сортируем
пункты
меню
на
прошлом
уроке
рассмотрели
простейший
способ
создания
меню
методом
вход
подавали
текст
рассмотрим
другую
реализацию
метода
у
метода
параметра
вход
groupid
идентификатор
группы
частью
которой
является
пункт
меню
itemid
id
пункта
меню
order
задания
последовательности
показа
пунктов
меню
title
текст
который
отображен
чтоб
показать
используются
параметры
создадим
приложение
на
экране
textview
checkbox
textview
отображать
пункт
меню
выбран
checkbox
определять
показывать
обычное
меню
расширенное
это
реализовано
помощью
групп
меню
сразу
уточню
понятия
это
андроидпонятия
просто
мои
названия
те
запущено
приложение
пользователь
жмет
кнопку
меню
видит
меню
если
включит
checkbox
отображаться
меню
котором
пунктов
создаем
проект
project
name
target
android
name
menuadvpackage
name
rustartandroiddevelopmenuadvcreate
activity
mainactivity
откроем
mainxml
присвоим
id
существующему
textview
сотрем
текст
создадим
checkbox
код
открываем
mainactivityjava
класс
mainactivity
заполняем
следующим
кодом
public
class
mainactivity
extends
activity
элементы
экрана
textview
tv
checkbox
chb
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
находим
элементы
tv
textview
findviewbyidridtextview
chb
checkbox
findviewbyidridchbextmenu
создание
меню
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
добавляем
пункты
меню
return
superoncreateoptionsmenumenu
обновление
меню
public
boolean
onprepareoptionsmenumenu
menu
todo
autogenerated
method
stub
пункты
меню
id
группы
видны
checkbox
стоит
галка
chbischecked
return
superonprepareoptionsmenumenu
обработка
нажатий
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
stringbuilder
sb
new
stringbuilder
выведем
textview
информацию
нажатом
пункте
меню
groupid
stringvalueofitemgetgroupid
itemid
stringvalueofitemgetitemid
order
stringvalueofitemgetorder
title
itemgettitle
tvsettextsbtostring
return
superonoptionsitemselecteditem
не
забудьте
обновить
импорт
давайте
разбирать
написанное
мы
используем
следующие
методы
вызывается
первом
показе
меню
создает
меню
используется
здесь
добавляем
меню
пункты
вызывается
каждый
отображением
меню
здесь
вносим
изменения
созданное
меню
это
необходимо
вызывается
нажатии
пункта
меню
здесь
определяем
пункт
меню
нажат
в
методе
oncreateoptionsmenu
добавляем
пунктов
меню
обратим
внимание
параметры
метода
add
первый
параметр
id
группы
в
первых
трех
пунктах
равен
нулю
оставшихся
трех
те
пункты
меню
copy
paste
exit
объединены
группу
id
визуально
это
никак
проявляется
отличаются
цветом
чемлибо
id
группы
будем
использовать
реализации
onprepareoptionsmenu
второй
параметр
id
пункта
меню
в
обработчике
используется
определения
пункт
меню
нажат
будем
использовать
onoptionsitemselected
третий
параметр
определяет
позицию
пункта
меню
этот
параметр
используется
определения
порядка
пунктов
отображении
меню
используется
сортировка
возрастанию
те
меньшего
order
большему
четвертый
параметр
текст
который
отображаться
пункте
меню
тут
понятно
в
метод
onprepareoptionsmenu
передается
объект
menu
можем
работать
в
данном
примере
вызываем
этот
метод
позволяет
пункты
меню
на
вход
подается
параметра
id
группы
booleanзначение
в
качестве
id
группы
пишем
та
самая
группа
id
которой
находятся
пункты
copy
paste
exit
качестве
boolean
параметра
используем
состояние
checkbox
если
включен
пункты
меню
группы
id
будут
отображаться
выключен
будут
сохраним
запустим
приложение
меню
меню
в
зависимости
состояния
checkbox
меню
видно
пунктов
обратите
внимание
порядок
пунктов
они
отсортированы
параметру
order
возрастанию
если
order
нескольких
пунктов
совпадает
пункты
размещаются
порядке
создания
методе
oncreateoptionsmenu
при
нажатии
какойлибо
пункт
меню
срабатывает
метод
onoptionsitemselected
в
нем
выводим
textview
информацию
нажатом
пункте
можете
сверить
информацию
кодили
создании
пунктов
меню
все
параметры
должны
совпадать
порядок
удобства
сделал
методе
add
groupid
itemid
order
title
попробуйте
добавить
несколько
пунктов
меню
стало
шести
и
обратите
внимание
отобразятся
для
упрощения
кода
использовал
напрямую
цифры
id
групп
id
пунктов
меню
а
вообще
рекомендуется
использовать
константы
дальнейшем
буду
использовать
есть
удобный
предпочтительный
способ
создания
меню
использованием
xmlфайлов
аналогично
layoutфайлам
создании
экрана
чтобы
получить
меню
которые
создавали
программно
уроке
создать
папке
файл
mymenuxml
если
папке
res
папки
меню
создайте
правой
кнопкой
res
выбирайте
new
android
resource
directory
resource
type
выбирайте
menu
жмите
ok
item
это
пункт
меню
group
группа
в
атрибутах
id
используем
ту
схему
id
экранных
компонентов
те
пишем
eclipse
создаст
id
rjava
атрибут
orderincategory
это
порядок
пунктов
title
текст
в
методе
oncreateoptionsmenu
нам
вручную
кодить
создание
каждого
пункта
просто
свяжем
menu
который
нам
дается
вход
наш
xmlфайл
public
boolean
oncreateoptionsmenumenu
menu
getmenuinflaterinflatermenumymenu
menu
return
superoncreateoptionsmenumenu
с
помощью
метода
getmenuinflater
получаем
вызываем
метод
inflate
на
вход
передаем
наш
файл
mymenuxml
папки
объект
menu
menuinflater
берет
объект
menu
наполняет
пунктами
согласно
файлу
mymenuxml
если
захотите
скрыть
группу
выполняете
метод
setgroupvisible
передаете
туда
качестве
id
группы
подробно
атрибуты
xmlфайла
меню
посмотреть
я
рекомендую
опробовать
потестить
оба
способа
созданию
меню
программное
создание
гибче
xml
сокращает
код
на
следующем
уроке
создадим
контекстное
меню
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
создание
простого
меню
поиск
полный
список
в
уроке
создаем
пункты
меню
что
такое
меню
думаю
смысла
рассказывать
оно
отображается
нажатии
кнопки
menu
давайте
создадим
свое
кнопки
меню
обычно
современных
устройствах
меню
переехало
actionbar
подробнее
прочитать
некоторые
скриншоты
устарели
код
общий
смысл
актуальны
создаем
проект
project
name
target
android
name
menusimplepackage
name
rustartandroiddevelopmenusimplecreate
activity
mainactivity
откроем
mainactivityjava
за
создание
меню
отвечает
метод
на
вход
подается
объект
типа
menu
который
будем
добавлять
свои
пункты
добавьте
activity
метод
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
return
superoncreateoptionsmenumenu
пункты
меню
добавляются
методом
на
вход
методу
подается
текст
пункта
меню
добавим
пункта
метод
oncreateoptionsmenu
должен
вернуть
результат
типа
boolean
true
меню
показывать
false
показывать
те
накодить
проверку
какоголибо
условия
итогам
проверки
показывать
меню
передавая
false
пока
нам
это
нужно
поэтому
поручаем
выбор
методу
суперкласса
умолчанию
возвращает
true
сохраним
запустим
приложение
нажмем
кнопку
меню
эмуляторе
появилось
пункта
меню
нажатие
чему
приводит
тк
реализован
обработчик
обработчиком
является
activity
метод
зовется
на
вход
передается
пункт
меню
который
нажат
menuitem
определить
какое
именно
меню
нажато
методу
давайте
выводить
всплывающее
сообщение
текстом
нажатого
пункта
меню
на
выходе
метода
возвращать
boolean
и
снова
предоставляем
это
суперклассу
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
toastmaketextthis
itemgettitle
return
superonoptionsitemselecteditem
полный
код
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
return
superoncreateoptionsmenumenu
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
toastmaketextthis
itemgettitle
return
superonoptionsitemselecteditem
определять
нажатый
пункт
меню
тексту
это
самый
лучший
вариант
далее
будем
делать
это
id
но
немного
другому
создавать
меню
на
следующем
уроке
создаем
пункты
меню
id
группируем
сортируем
пункты
меню
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
extras
передаем
данные
помощью
intent
поиск
полный
список
в
уроке
передаем
данные
помощью
intent
на
прошлых
уроках
узнали
такое
intent
пользоваться
из
одного
activity
просто
вызывали
другое
передавая
action
теперь
научимся
передавать
данные
сделаем
простейшее
приложение
на
первом
экране
будем
вводить
наше
имя
фамилию
второй
экран
данные
отображать
передавать
данные
будем
внутри
intent
создадим
проект
project
name
build
target
android
application
name
intentextras
package
name
create
activity
mainactivity
открываем
mainxml
рисуем
экран
полями
кнопкой
отправки
в
edittext
будем
вводить
имя
фамилию
кнопка
submit
вызывать
экран
передавать
данные
пишем
код
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
etfname
edittext
etlname
button
btnsubmit
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
etfname
edittext
findviewbyidridetfname
etlname
edittext
findviewbyidridetlname
btnsubmit
button
findviewbyidridbtnsubmit
btnsubmitsetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intentthis
viewactivityclass
etfnamegettexttostring
etlnamegettexttostring
startactivityintent
определяем
поля
ввода
кнопку
кнопке
присваиваем
обработчик
activity
рассмотрим
реализацию
метода
onclick
мы
создаем
intent
использованием
класса
action
если
помните
такого
способа
начинали
знакомство
intent
напомню
это
означает
система
просмотрит
манифест
файл
нашего
приложения
найдет
activity
таким
классом
отобразит
viewactivity
пока
создан
поэтому
код
подчеркнут
красным
это
мешает
нам
сохранить
файл
чуть
позже
создадим
это
activity
ошибка
исчезнет
итак
intent
создан
смотрим
код
дальше
используется
метод
он
имеет
множество
вариаций
аналогичен
методу
put
map
те
добавляет
объекту
пару
первый
параметр
это
ключимя
второй
значение
мы
поместили
intent
объекта
именами
fname
lname
fname
содержит
значение
поля
etfname
lname
значение
поля
etlname
остается
отправить
укомплектованный
intent
помощью
метода
startactivity
теперь
создадим
второе
activity
назовем
viewactivity
создаем
layoutфайл
viewxml
здесь
просто
textview
который
отображать
пришедшие
данные
создаем
класс
viewactivity
и
пишем
код
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidwidgettextview
public
class
viewactivity
extends
activity
textview
tvview
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutview
tvview
textview
findviewbyidridtvview
intent
intent
getintent
string
fname
string
lname
name
fname
lname
находим
textview
затем
получаем
intent
извлекаем
stringобъекты
именами
fname
lname
это
те
самые
значения
которые
помещали
коде
mainactivityjava
формируем
строку
вывода
textview
использованием
полученных
данных
не
забудьте
прописать
viewactivity
манифесте
на
никаких
intent
filter
нужно
тк
точно
знаем
имя
класса
activity
используем
явный
вызов
все
сохраним
запустим
видим
экран
заполняете
поля
пожелаете
я
напишу
john
поле
first
name
smith
поле
last
name
жмем
submit
viewactivity
отобразилось
считало
данные
intent
вывело
экран
поместить
intent
данные
типа
string
в
intent
посмотреть
многообразие
типов
которые
умеет
принимать
вход
метод
putextra
на
следующем
уроке
вызываем
activity
возвратом
результата
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
onupgrade
обновляем
бд
sqlite
поиск
полный
список
в
уроке
меняем
версию
обновляем
структуру
бд
onupgrade
с
развитием
приложения
возникнуть
необходимость
изменения
структуры
бд
которую
оно
использует
на
одном
прошлых
уроков
упоминал
используется
метод
onupgrade
класса
sqliteopenhelper
этот
метод
вызывается
существующая
версия
бд
отличается
той
которой
пытаемся
подключиться
версию
обычно
указывали
вызове
конструктора
суперкласса
sqliteopenhelper
конструкторе
dbhelper
попробуем
воспользоваться
методом
onupgrade
посмотреть
происходит
переход
новую
версию
бд
для
напишем
небольшое
приложение
аналогичное
одному
приложений
прошлых
уроков
сотрудников
должности
первая
версия
бд
содержать
таблицу
people
именем
сотрудника
должностью
но
такая
таблица
корректна
если
изменится
название
должности
придется
обновлять
соответствующие
записи
people
поэтому
решаем
изменить
бд
организовать
данные
немного
подругому
во
второй
версии
добавим
таблицу
position
названием
должности
зарплатой
и
таблице
people
вместо
названия
должности
пропишем
соответствующий
id
position
создадим
проект
project
name
target
android
name
sqliteonupgradedbpackage
name
activity
mainactivity
экран
снова
используем
будем
выводить
лог
открываем
mainactivityjava
кодим
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
final
string
имя
бд
final
int
версия
бд
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
dbhelper
dbh
new
dbhelperthis
sqlitedatabase
db
dbhgetwritabledatabase
staff
db
dbgetversion
writestaffdb
dbhclose
запрос
данных
вывод
лог
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
вывод
лог
данных
курсора
void
logcursorcursor
c
string
title
c
null
cmovetofirst
title
cgetcount
stringbuilder
sb
new
stringbuilder
string
cn
cgetcolumnnames
sbappendcn
cgetstringcgetcolumnindexcn
sbtostring
cmovetonext
else
title
cursor
класс
работы
бд
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
contentvalues
cv
new
contentvalues
создаем
таблицу
людей
table
people
integer
primary
key
text
position
заполняем
int
cvclear
null
cv
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
код
несложен
я
сгруппировал
операции
выводу
лог
данных
cursor
метод
logcursor
метод
writestaff
выбирает
данные
таблицы
people
вызывает
метод
вывода
данных
лог
в
методе
activity
oncreate
создаем
объект
dbhelper
подключаемся
бд
выводим
лог
версию
бд
вызываем
writestaff
отключаемся
в
dbhelper
обычно
в
конструкторе
вызываем
конструктор
суперкласса
обратите
внимание
будем
подключаться
базе
версии
в
методе
oncreate
создаем
таблицу
заполняем
все
сохраним
запустим
приложение
смотрим
лог
oncreate
database
staff
db
table
people
rows
id
name
иван
position
программер
id
name
марья
position
бухгалтер
id
name
петр
position
программер
id
name
антон
position
программер
id
name
даша
position
бухгалтер
id
name
борис
position
директор
id
name
костя
position
программер
id
name
игорь
position
охранник
бд
создалась
версия
данные
таблицы
вывелись
лог
приложение
работает
ок
но
внезапно
понимаем
проектировании
структуры
бд
допущена
ошибка
записывать
название
должности
поле
таблицы
people
неправильно
к
тому
добавляются
данные
зарплатам
надо
создать
таблицу
должностей
position
использовать
id
таблице
people
тем
самым
структура
нашей
бд
меняется
присваиваем
версию
но
наше
приложение
установлено
пользователей
оно
создало
бд
версии
бд
данные
мы
можем
просто
удалить
существующие
таблицы
создать
новые
тк
возможно
пользователь
хранит
свои
данные
нам
написать
скрипты
обновления
потери
данных
план
обновления
создаем
заполняем
данными
таблицу
position
добавляем
таблицу
people
столбец
posid
хранения
id
position
заполняем
peopleposid
данными
position
зависимости
значения
peopleposition
удаляем
столбец
peopleposition
давайте
менять
mainactivityjava
наше
приложение
ориентировано
бд
версии
укажем
это
изменив
значение
константы
final
int
версия
бд
метод
writestaff
перепишем
таким
образом
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
c
null
logcursorc
cclose
string
sqlquery
plname
name
psname
position
salary
salary
people
pl
join
position
ps
plposid
psid
c
dbrawquerysqlquery
null
logcursorc
cclose
будем
выводить
лог
данные
таблиц
people
position
объединения
реализуем
метод
обновления
onupgrade
dbhelper
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
onupgrade
database
oldversion
newversion
version
oldversion
newversion
contentvalues
cv
new
contentvalues
данные
таблицы
должностей
dbbegintransaction
try
создаем
таблицу
должностей
table
position
integer
primary
text
salary
заполняем
int
cvclear
null
cv
table
people
add
column
posid
int
cvclear
cv
new
temporary
table
integer
name
text
position
text
posid
select
id
name
position
posid
table
table
people
integer
primary
key
text
posid
people
select
id
name
posid
table
dbsettransactionsuccessful
finally
dbendtransaction
все
соответствии
планом
обновления
который
приводил
выше
есть
пара
нюансов
вопервых
используем
бдтранзакцию
те
нам
бд
накатились
наши
обновления
а
случае
ошибки
процессе
обновления
изменения
должны
отменены
бд
должна
остаться
прежней
тут
транзакции
очень
выручают
вовторых
sqlite
просто
удалить
столбец
приходится
создавать
временную
таблицу
перекидывать
туда
данные
удалять
оригинал
создавать
снова
нужной
структурой
скидывать
данные
временной
таблицы
удалять
временную
таблицу
подробнее
почитать
наше
приложение
обновилось
и
запуске
оно
попытается
подключиться
бд
версии
увидит
существующая
версия
вызовет
метод
onupgrade
дав
нам
возможность
внести
необходимые
изменения
структуру
бд
но
это
произойдет
случае
обновления
приложения
а
пользователь
поставит
наше
новое
приложение
свежий
смартфон
первый
в
случае
приложение
также
попытается
подключиться
бд
версии
но
тк
приложение
установлено
бд
существует
приложение
создаст
бд
присвоит
версию
номер
тк
оно
умеет
работать
именно
версией
при
создании
вызван
метод
oncreate
dbhelper
значит
нем
должны
прописать
код
который
создавать
нам
бд
версии
те
обновленную
таблицу
people
новую
таблицу
position
пишем
oncreate
dbhelper
public
void
oncreatesqlitedatabase
db
oncreate
database
данные
таблицы
должностей
contentvalues
cv
new
contentvalues
создаем
таблицу
должностей
table
position
integer
primary
text
salary
заполняем
int
cvclear
null
cv
создаем
таблицу
людей
table
people
integer
primary
key
text
posid
заполняем
int
cvclear
null
cv
создание
заполнение
данными
двух
таблиц
все
понятно
теперь
сохранить
запустить
приложение
смотрим
лог
onupgrade
database
version
staff
db
table
people
rows
id
name
иван
posid
id
name
марья
posid
id
name
петр
posid
id
name
антон
posid
id
name
даша
posid
id
name
борис
posid
id
name
костя
posid
id
name
игорь
posid
table
position
rows
id
name
директор
salary
id
name
программер
salary
id
name
бухгалтер
salary
id
name
охранник
salary
inner
join
rows
name
иван
position
программер
salary
name
марья
position
бухгалтер
salary
name
петр
position
программер
salary
name
антон
position
программер
salary
name
даша
position
бухгалтер
salary
name
борис
position
директор
salary
name
костя
position
программер
salary
name
игорь
position
охранник
salary
видим
вызывался
onupgrade
обновил
нам
бд
версии
далее
выводим
данные
убедиться
обновление
прошло
корректно
можно
также
убедиться
новый
oncreate
dbhelper
корректно
отработает
для
удалить
файл
бд
запустить
приложение
приложение
найдет
бд
создаст
сразу
новом
формате
версией
сценарий
выдуманный
чему
придраться
поспорить
смысл
смысл
увидели
происходит
обновление
бд
приложение
запросило
новую
версию
поначалу
возможно
покажется
запутанным
механизм
создания
обновления
но
сложного
реально
с
опытом
придет
полное
понимание
еще
хочу
отметить
объекта
cursor
метод
close
который
освобождает
занимаемые
ресурсы
не
забывайте
думаю
смело
сказать
работу
sqlite
android
изучили
достаточно
основательно
и
дальнейших
уроках
сможем
свободно
использовать
знания
полный
код
mainactivityjava
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
final
string
имя
бд
final
int
версия
бд
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
dbhelper
dbh
new
dbhelperthis
sqlitedatabase
db
dbhgetwritabledatabase
staff
db
dbgetversion
writestaffdb
dbhclose
запрос
данных
вывод
лог
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
c
null
logcursorc
cclose
string
sqlquery
plname
name
psname
position
salary
salary
people
pl
join
position
ps
plposid
psid
c
dbrawquerysqlquery
null
logcursorc
cclose
вывод
лог
данных
курсора
void
logcursorcursor
c
string
title
c
null
cmovetofirst
title
cgetcount
stringbuilder
sb
new
stringbuilder
string
cn
cgetcolumnnames
sbappendcn
cgetstringcgetcolumnindexcn
sbtostring
cmovetonext
else
title
cursor
класс
работы
бд
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
данные
таблицы
должностей
contentvalues
cv
new
contentvalues
создаем
таблицу
должностей
table
position
integer
primary
text
salary
заполняем
int
cvclear
null
cv
создаем
таблицу
людей
table
people
integer
primary
key
text
posid
заполняем
int
cvclear
null
cv
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
onupgrade
database
oldversion
newversion
version
oldversion
newversion
contentvalues
cv
new
contentvalues
данные
таблицы
должностей
dbbegintransaction
try
создаем
таблицу
должностей
table
position
integer
primary
text
salary
заполняем
int
cvclear
null
cv
table
people
add
column
posid
int
cvclear
cv
new
temporary
table
integer
name
text
position
text
posid
select
id
name
position
posid
table
table
people
integer
primary
key
text
posid
people
select
id
name
posid
table
dbsettransactionsuccessful
finally
dbendtransaction
на
следующем
уроке
разбираем
использовать
layoutinflater
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
intent
filter
практика
поиск
полный
список
в
уроке
вызываем
activity
используя
неявный
вызов
intent
filter
последние
уроки
получились
перегруженными
теорией
эту
теорию
необходимо
понять
проблем
практикой
эти
темы
являются
основой
task
lifecycle
intent
если
чтолибо
осталось
непонятно
можете
снова
открыть
перечитать
материал
а
далее
будем
реализовывать
примеры
которые
будут
теорию
подтверждать
станет
понятнее
на
прошлых
уроках
научились
вызывать
activity
помощью
intent
явного
указания
класса
также
знаем
способ
вызова
activity
неявный
он
основан
activity
вызывается
имени
функционалу
те
хотим
выполнить
определенные
действия
создаем
настраиваем
соответствующий
intent
отправляем
искать
те
activity
которые
могли
справиться
нашей
задачей
давайте
посмотрим
это
реализуется
практике
мы
создадим
приложение
которое
отображать
нам
текущее
время
дату
сделаем
это
помощью
трех
activity
первое
содержать
две
кнопки
show
time
show
date
второе
отображать
время
третье
отображать
дату
нажатие
кнопку
show
time
вызывать
второе
activity
нажатие
кнопку
show
date
третье
activity
но
реализуем
это
прямое
указание
классов
activity
intent
intent
filter
создадим
проект
project
name
target
android
name
intentfilterpackage
name
activity
mainactivity
открываем
mainxml
рисуем
две
кнопки
пишем
реализацию
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
button
btntime
button
findviewbyidridbtntime
button
btndate
button
findviewbyidridbtndate
btntimesetonclicklistenerthis
btndatesetonclicklistenerthis
public
void
onclickview
v
intent
intent
switchvgetid
case
ridbtntime
intent
new
startactivityintent
break
case
ridbtndate
intent
new
startactivityintent
break
в
коде
определили
кнопки
присвоили
activity
обработчик
нажатий
в
методе
oncilck
определяем
кнопка
нажата
создаем
intent
для
создания
intent
используем
конструктор
те
создании
заполняем
атрибут
объекта
intent
который
называется
action
это
обычная
строковая
константа
action
обычно
указывает
действие
которое
хотим
произвести
например
следующие
системные
actionконстанты
просмотр
редактирование
выбор
списка
сделать
звонок
если
действие
производится
чемлибо
пару
action
идет
intentатрибут
data
в
нем
можем
указать
какойлибо
объект
пользователь
адресной
книге
координаты
карте
номер
телефона
тп
те
action
указывает
делать
data
делать
про
data
поговорим
следующих
уроках
пока
будем
использовать
action
выше
перечислил
некоторые
системные
actionконстанты
можем
использовать
свой
action
как
видите
кода
придумал
использую
такие
actionrustartandroidintentactionshowtimerustartandroidintentactionshowdate
первый
означать
хочу
вызвать
activity
которое
покажет
текущее
время
второй
activity
датой
здесь
четко
понимать
следующее
action
это
просто
текст
и
мог
таким
успехом
придумать
action
но
текст
showtime
отражает
хочу
сделать
нагляднее
понятнее
а
префикс
rustartandroidintentaction
использую
коллизий
в
системе
приложение
которое
использует
action
showtime
хочу
пересекаться
поэтому
action
это
rustartandroidintentactionshowtime
итак
создали
intent
action
запустили
систему
искать
activity
чтобы
activity
подошла
intent
filter
содержал
атрибут
action
значением
action
intent
значит
нам
осталось
создать
две
activity
настроить
intent
filter
реализовать
отображение
времени
даты
activity
создается
обычно
создаем
класс
activitytime
суперклассом
androidappactivity
прописываем
манифесте
activity
после
прописали
манифесте
создать
intent
filter
для
выделяем
activitytime
жмем
add
выбираем
intent
filter
жмем
ок
далее
intent
filter
аналогично
создаем
action
поле
name
прописываем
rustartandroidintentactionshowtime
также
intent
filter
создать
category
поле
name
выбрать
списка
androidintentcategorydefault
пока
будем
разбираться
детально
нужна
но
вызов
startactivityintent
найдет
activity
создадим
layout
нового
activity
назовем
timexml
пишем
код
activitytimejava
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitytime
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayouttime
simpledateformat
sdf
new
string
time
sdfformatnew
datesystemcurrenttimemillis
textview
tvtime
textview
findviewbyidridtvtime
tvtimesettexttime
тут
просто
вычисляем
текущее
время
показываем
textview
все
сохраним
запустим
приложение
жмем
кнопку
show
time
отобразилось
время
те
intent
action
rustartandroidintentactionshowtime
нашел
отобразил
activity
которого
action
также
равен
rustartandroidintentactionshowtime
intent
filter
вернемся
назад
кнопка
back
нажмем
кнопку
show
date
приложение
выдаст
ошибку
тк
оно
смогло
найти
activity
которое
соответствовало
intent
action
rustartandroidintentactionshowdate
создали
showtime
давайте
создадим
такое
activity
назовем
activitydate
действия
те
самые
создании
activitytime
создание
класса
создание
activity
манифесте
создание
intent
filter
c
action
rustartandroidintentactionshowdate
category
androidintentcategorydefault
layoutфайл
назовем
datexml
код
activitydatejava
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitydate
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutdate
simpledateformat
sdf
new
string
date
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvdate
tvdatesettextdate
все
сохраняем
запускаем
приложение
жмем
show
date
видим
дату
это
значит
intent
action
rustartandroidintentactionshowdate
нашел
отобразил
activitydate
подходящее
intent
filter
чтобы
закрепить
тему
проделаем
коечто
если
помните
рассказывал
intent
filter
говорил
intent
найти
несколько
подходящих
activity
в
случае
пользователю
предоставляется
выбор
какое
activity
использовать
давайте
сами
спровоцируем
случай
мы
сделаем
одно
activity
которое
реагировать
intent
action
rustartandroidintentactionshowdate
и
отображать
текущую
дату
аналогично
activitydate
но
формат
отображения
даты
немного
давайте
создадим
такое
activity
назовем
activitydateex
действия
те
самые
создании
activitydate
создание
класса
создание
activity
манифесте
создание
intent
filter
action
rustartandroidintentactionshowdate
category
androidintentcategorydefault
новый
layoutфайл
создавать
будем
используем
существующий
datexml
в
принципе
activity
могли
использовать
layout
тк
совершенно
одинаковы
textview
код
activitydateexjava
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidosbundle
import
androidwidgettextview
public
class
activitydateex
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutdate
simpledateformat
sdf
new
mmm
string
date
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvdate
tvdatesettextdate
как
видим
отличие
activitydate
формате
даты
сохраним
запустим
жмем
show
date
видим
выбор
intent
нашел
activity
показал
каждого
название
родительского
приложения
package
в
нашем
случае
оба
activity
нашего
приложения
поэтому
текст
одинаков
разберешь
какое
какое
давайте
пофиксим
это
прописав
нормальные
имена
нажмите
back
закрыть
диалог
выбора
идем
манифест
activity
пропишем
label
date
basic
activitydatedate
extended
activitydateex
сохраняем
запускаем
жмем
show
date
видим
выбор
так
значительно
жмем
date
extended
видим
дату
расширенном
формате
activitydateex
итак
создавали
посылали
intent
action
этот
intent
находил
activity
подходящим
intent
filter
отображал
если
находил
несколько
давал
выбор
примеры
отлично
показывают
механизм
если
запутались
создавать
привожу
скрин
проекта
содержимое
манифеста
содержимое
манифеста
вкладка
androidmanifestxml
на
следующем
уроке
читаем
action
intent
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
task
что
это
такое
формируется
поиск
полный
список
в
уроке
немного
теории
task
фиксируем
activity
состоянии
paused
в
уроке
узнаем
помещается
activity
пока
видно
и
откуда
оно
достается
нажатии
кнопки
назад
в
написано
достаточно
понятно
я
сделаю
краткий
перевод
основной
части
хелпа
использую
схемы
мы
знаем
приложение
содержать
несколько
activity
и
activity
умеет
вызывать
activity
других
приложений
помощью
intent
intent
filter
если
хотите
отправить
письмо
вашего
приложения
вызываете
activity
почтовой
программы
передаете
данные
письмо
уходит
возвращаетесь
ваше
приложение
создается
ощущение
это
происходило
рамках
одного
приложения
такая
бесшовность
достигается
счет
оба
activity
ваше
почтовое
одном
task
прежде
продолжу
объяснять
хочу
сразу
привести
аналогию
тему
легче
понять
в
скобках
буду
давать
понятияаналоги
android
механизм
организации
activity
android
очень
схож
реализации
навигацией
браузере
вы
находитесь
одной
вкладкеtask
открываете
страницы
activity
переходя
ссылкам
intent
в
любой
момент
можете
вернуться
предыдущую
страницу
нажав
кнопку
назад
но
кнопка
вперед
отсутствует
тк
страница
которой
нажата
кнопка
назад
стирается
памяти
и
снова
нажимать
ссылку
хотим
попасть
если
открыть
чтото
новое
создаете
новую
вкладку
открываете
страницы
переходите
ссылкам
возвращаетесь
назад
в
итоге
несколько
вкладок
большинство
заднем
фоне
одна
активная
которой
работаете
переднем
в
итоге
список
аналогий
браузера
android
таков
браузер
androidвкладка
историей
посещений
taskстраница
activityссылка
intent
теперь
понятен
текст
task
task
группа
нескольких
activity
помощью
которых
пользователь
выполняет
определенную
операцию
обычно
стартовая
позиция
создания
task
это
экран
домой
home
находясь
home
вызываете
какоелибо
приложение
списка
приложений
ярлык
создается
task
и
activity
приложения
которое
отмечено
main
манифестфайле
помещается
task
корневое
task
выходит
передний
фон
если
вызове
приложения
система
обнаружила
фоне
существует
task
соответствующий
этому
приложению
выведет
передний
план
создавать
когда
вызывает
помещается
верх
топ
task
получает
фокус
остается
task
находится
состоянии
stopped
видно
оно
фокусе
далее
пользователь
жмет
back
находясь
удаляется
task
уничтожается
а
оказывается
верху
task
получает
фокус
в
каком
порядке
открывались
добавлялись
task
activity
таком
порядке
содержатся
task
они
никак
специально
сортируются
упорядочиваются
внутри
набор
activity
task
называют
back
stack
я
буду
называть
просто
стэк
схема
офицсайта
демонстрирует
пример
в
верхней
части
видит
пользователь
в
нижней
содержимое
task
видно
вызове
новых
activity
добавляются
верх
стэка
а
нажата
кнопка
назад
верхнее
activity
стэка
удаляется
отображается
предыдущее
activity
допустим
task
несколькими
activity
он
переднем
фоне
работаем
нажмем
кнопку
home
удалено
activity
сохранятся
taskе
task
просто
уйдет
задний
фон
вызвать
оттуда
снова
вызвав
приложение
activity
которого
является
корневым
taskа
либо
удерживать
кнопку
home
увидим
список
taskов
которые
расположены
заднем
фоне
активном
taskе
несколько
нажимать
кнопку
назад
итоге
стэке
останется
activity
пустой
task
удален
пользователь
увидит
экран
home
там
куча
нюансов
сложностей
пока
остановимся
дебри
полезем
этих
знаний
вполне
хватит
ответить
вопросы
предыдущего
урока
почему
шаге
mainactivity
исчезло
экрана
осталось
висеть
памяти
уничтожено
ведь
шаге
уничтожено
activitytwo
оно
пропало
экрана
а
шаге
итоге
уничтожено
mainactivity
почему
шаг
стал
исключением
теперь
знаете
почему
потому
шаге
mainactivity
осталось
стэке
activitytwo
вставилось
верх
стэка
получило
фокус
ну
шаге
удалены
activity
верха
стэка
task
осталось
activity
увидели
экран
home
если
шаге
нажали
back
home
task
обоими
activity
ушел
задний
фон
уничтожено
теперь
давайте
откроем
проект
прошлого
урока
мы
хотели
поймать
состояние
paused
activity
это
состояние
означает
activity
фокусе
оно
видно
пусть
частично
мы
можем
добиться
присвоим
диалоговый
стиль
activitytwo
оно
отобразится
всплывающее
окно
частично
видно
mainactivity
оно
статусе
paused
давайте
реализуем
для
открываем
androidmanifestxml
вкладка
application
находим
activitytwo
справа
поле
theme
пишем
текст
все
сохраняем
запускаем
приложение
появилось
mainactivity
логи
mainactivity
oncreatemainactivity
onstartmainactivity
onresume
все
верно
вызываем
activitytwo
логи
mainactivity
onpauseactivitytwo
oncreateactivitytwo
onstartactivitytwo
onresume
видим
вызван
метод
onstop
mainactivity
значит
приложение
переведено
состояние
stopped
находится
режиме
paused
нажмем
back
логи
activitytwo
onpausemainactivity
onresumeactivitytwo
onstopactivitytwo
ondestroy
mainactivity
восстановилось
одним
лишь
вызовом
onresume
onstart
понадобился
тк
оно
состоянии
paused
stopped
мы
четко
увидели
разницу
этим
примером
прошлом
уроке
и
mainactivity
состоянии
paused
далее
нажать
back
home
знаете
произойдет
обоих
случаях
по
логам
убедиться
чтобы
вернуть
activitytwo
нормальный
режим
отображения
зайдите
снова
манифест
удалите
строку
поля
theme
кстати
вполне
достаточно
знаний
создать
приложение
кучей
activity
прописать
вызовы
поиграться
посмотреть
логи
тем
самым
закрепите
темы
lifecycle
task
на
следующем
уроке
вызываем
activity
используя
неявный
вызов
intent
filter
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
learning
use
layoutinflater
lessons
lesson
understand
use
layoutinflater
learning
sqlite
good
moment
begin
learning
list
would
useful
learn
layoutinflater
knowledge
useful
extended
lists
creation
also
recommend
update
knowledge
layoutparams
memory
class
create
view
element
layout
content
inflate
method
one
several
implementations
method
different
parameters
use
execution
result
view
consider
implementation
see
method
accepts
three
parameters
input
resource
layout
id
used
view
creation
example
rlayoutmainroot
parent
viewgroupelement
created
view
viewgroup
layoutparams
passed
created
view
attachtoroot
boolean
field
determines
created
view
bound
root
case
true
value
root
become
parent
created
view
ie
code
rootaddviewview
case
false
value
view
get
layoutparams
root
become
child
try
practice
create
project
project
name
build
target
android
application
name
layoutinflater
package
name
create
activity
mainactivity
open
mainxml
code
layout
layout
two
viewgroups
screen
linlayout
rellayout
inner
textview
relevant
text
create
one
layout
textxml
simple
textview
without
viewgroup
test
layoutinflater
open
mainactivityjava
code
package
import
androidappactivity
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgrouplayoutparams
import
androidwidgettextview
public
class
mainactivity
extends
activity
final
string
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
view
view
ltinflaterinflaterlayouttext
null
false
layoutparams
lp
viewgetlayoutparams
view
viewgetclasstostring
view
null
lp
null
view
textview
viewgettext
using
method
get
layoutinflater
use
get
view
element
textxml
get
layoutparams
view
created
take
look
parameters
used
call
inflate
method
passed
id
null
parent
element
parent
binding
parameter
value
false
save
launch
app
nothing
changed
screen
converted
layout
view
put
anywhere
holds
place
memory
look
logs
class
view
class
androidwidgettextviewlayoutparams
view
null
truetext
view
layout
textview
see
class
created
element
textview
alright
textxml
next
row
see
null
instead
layoutparams
happened
passed
null
inflate
method
parent
exactly
parent
view
get
layoutparams
third
row
shows
text
textxml
change
app
little
add
created
element
mainxml
linlayout
done
simply
addview
command
layoutparams
lp
viewgetlayoutparams
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
linlayoutaddviewview
view
viewgetclasstostring
add
selected
rows
determined
linlayout
added
element
created
layoutinflater
save
launch
app
see
element
added
screen
linlayout
try
specify
parent
root
calling
inflate
method
rewrite
oncreate
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
view
ltinflaterinflaterlayouttext
linlayout
false
layoutparams
layoutparams
textview
relativelayout
rellayout
relativelayout
findviewbyidridrellayout
view
ltinflaterinflaterlayouttext
rellayout
false
layoutparams
layoutparams
textview
determine
linlayout
rellayout
using
layoutinflater
create
two
viewelements
textxml
layout
specify
root
first
one
linlayout
rellayout
second
third
parameter
value
attachtoroot
stays
false
means
created
viewelement
get
layoutparams
rootelement
bind
save
launch
project
screen
add
new
elements
attachtoroot
false
look
logs
class
class
androidwidgettextviewclass
layoutparams
class
layout
textviewclass
class
androidwidgettextviewclass
layoutparams
class
layout
textview
logs
see
created
class
textview
class
differs
first
case
specified
linlayout
root
element
within
inflate
method
object
linearlayout
second
case
created
layoutparams
class
specified
rellayout
root
element
relativelayout
class
two
ways
add
screen
created
use
addview
method
pass
true
value
third
parameter
inflate
method
case
created
view
added
root
choose
second
way
refactor
code
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
layoutinflater
ltinflater
getlayoutinflater
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
view
ltinflaterinflaterlayouttext
linlayout
true
layoutparams
layoutparams
relativelayout
rellayout
relativelayout
findviewbyidridrellayout
view
ltinflaterinflaterlayouttext
rellayout
true
layoutparams
layoutparams
pass
true
value
third
parameter
within
inflate
method
delete
rows
displayed
textview
values
logs
soon
see
save
launch
app
see
textview
created
appeared
within
parents
specified
within
inflate
method
within
relativelayout
elements
overlapped
adjust
layout
moment
essential
look
logs
class
class
androidwidgetlinearlayoutclass
layoutparams
class
class
androidwidgetrelativelayoutclass
layoutparams
class
take
look
class
first
case
linearlayout
second
case
relativelayout
ie
inflate
method
returned
elements
specified
root
viewelements
created
layout
file
elements
created
layout
added
root
child
elements
similarly
addview
method
happened
passed
true
third
parameter
attachtoroot
inflate
method
respectively
layoutparams
linlayout
rellayout
linearlayout
parent
take
layoutparams
fix
topic
make
interesting
example
next
lesson
next
lesson
make
version
list
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
intent
intent
filter
context
теория
поиск
полный
список
в
уроке
разбираемся
коде
урока
теория
intent
intent
filter
немного
context
на
прошлом
уроке
создали
приложение
которое
содержит
activity
напомню
создания
activity
необходимо
создать
класс
суперклассом
androidappactivity
создать
activityзапись
манифесте
указать
созданный
класс
поле
name
надеюсь
прошлый
урок
вызвал
особых
трудностей
процедура
создания
activity
примерно
уложилась
голове
теперь
можем
обратить
внимание
код
вызова
activity
intent
intent
new
intentthis
activitytwoclass
startactivityintent
мы
использовали
объект
intent
о
нем
почитать
правда
инфа
достаточно
сложна
понимания
нуля
я
попробую
своими
словами
объяснить
в
нашем
случае
intent
это
объект
котором
прописываем
какое
activity
нам
необходимо
вызвать
после
передаем
intentобъект
методу
startactivity
который
находит
соответствующее
activity
показывает
при
создании
intent
использовали
конструктор
intent
context
packagecontext
class
cls
двумя
параметрами
первый
параметр
это
если
помните
программно
создавали
view
одном
прошлых
уроков
использовали
конструкторах
объект
context
activity
является
подклассом
context
поэтому
можем
использовать
вкратце
context
это
объект
который
предоставляет
доступ
базовым
функциям
приложения
таким
доступ
ресурсам
файловой
системе
вызов
activiy
тд
я
думаю
дальнейшем
рассмотрим
примеры
явно
увидим
context
передается
используется
второй
параметр
имя
класса
напомню
создании
записи
activity
манифестфайле
указываем
имя
класса
и
укажем
класс
intent
система
просмотрев
манифестфайл
обнаружит
соответствие
покажет
соответствующий
activity
в
легко
убедиться
мы
удалим
запись
activity
манифестфайла
попробуем
вызвать
откройте
проект
прошлого
урока
откройте
манифестфайл
вкладка
application
удалите
запись
activitytwo
помощью
кнопки
remove
сохраните
запустите
приложение
попробуйте
вызвать
activity
кнопкой
go
activity
two
приложение
выдаст
ошибку
если
посмотреть
логи
видим
следующий
текст
androidcontentactivitynotfoundexception
unable
find
explicit
activity
class
declared
activity
androidmanifestxml
логи
вкладка
logcat
eclipse
если
видно
идем
меню
window
show
view
папка
android
logcat
система
говорит
нам
нашла
такого
activity
класса
любезно
подсказывает
возможно
прописан
манифестфайле
снова
пропишите
activity
манифестфайле
сохраните
запускайте
теперь
должно
работать
вызов
activity
помощью
такого
intent
это
явный
вызов
те
помощью
класса
явно
указываем
какое
activity
хотели
увидеть
это
обычно
используется
внутри
одного
приложения
схематично
это
изобразить
здесь
создаем
intent
качестве
параметра
передаем
класс
далее
вызываем
метод
startactivity
созданным
intent
качестве
параметра
метод
проверяет
androidmanifest
наличие
activity
связанной
классом
находит
отображает
все
это
пределах
одного
приложения
существует
также
неявный
вызов
activity
он
отличается
создании
intent
используем
класс
заполняем
параметры
action
data
category
определенными
значениями
комбинация
этих
значений
определяют
цель
которую
хотим
достичь
например
отправка
письма
открытие
гиперссылки
редактирование
текста
просмотр
картинки
звонок
определенному
номеру
тд
в
очередь
activity
прописываем
intent
filter
это
набор
тех
параметров
action
data
category
значения
свои
зависят
умеет
делать
activity
и
параметры
нашего
intent
совпадают
условиями
фильтра
activity
вызывается
но
поиск
идет
всем
activity
приложений
системе
если
находится
несколько
система
предоставляет
выбор
именно
программой
хотите
воспользоваться
схематично
это
изобразить
в
создается
intent
заполняются
параметры
action
data
category
для
удобства
получившийся
набор
параметров
назовем
с
помощью
startactivity
intent
отправляется
поиски
подходящей
activity
которая
сможет
выполнить
нам
нужно
те
определено
помощью
в
системе
разные
приложения
каждом
несколько
activity
для
некоторых
activity
определен
intent
filter
наборы
тд
некоторых
метод
startactivity
сверяет
набор
параметров
intent
наборы
параметров
intent
filter
каждой
activity
если
наборы
совпадают
обоих
activity
считается
подходящей
если
итоге
нашлась
одна
activity
отображается
если
нашлось
несколько
подходящих
activity
пользователю
выводится
список
выбрать
какое
приложение
использовать
например
системе
установлено
несколько
музыкальных
плееров
запускаете
система
выведет
список
activity
которые
умеют
играть
музыку
попросит
выбрать
какое
использовать
а
те
activity
которые
умеют
редактить
текст
показывать
картинки
звонить
тп
будут
проигнорированы
если
activity
задан
intent
filter
схеме
intent
параметрами
никак
подойдет
оно
проигнорировано
если
проводить
аналогии
сравнить
intent
ключом
intent
filter
замком
которым
сидит
прекрасное
activity
мы
будем
постепенно
узнавать
нюансы
механизма
значения
которыми
заполняются
параметры
action
data
category
intent
intent
filter
сейчас
важно
понять
случае
неявного
вызова
одно
приложение
посылает
intent
другие
сверяют
параметры
своими
activity
intent
filter
intent
это
базовое
понятие
системы
android
нам
никуда
оно
применяется
activity
но
позднее
ну
хотел
написать
пару
вводных
слов
получилось
достаточно
подробное
объяснение
схемами
примерами
надеюсь
получилось
донести
смысл
технологии
intentов
в
дальнейшем
будем
практиковаться
закрепим
тему
на
следующем
уроке
activity
lifecycle
поведение
activity
создании
вызове
закрытии
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
список
listview
поиск
полный
список
в
уроке
используем
listview
построения
списка
перед
начать
говорить
компонент
listview
предлагаю
вспомнить
прошлый
урок
механизм
построения
списка
который
использовали
мы
перебирали
массив
данных
каждой
итерации
создавали
пункт
списка
заполняли
данными
помещали
список
при
создании
listview
создавать
пункты
адаптер
адаптеру
нужны
данные
layoutресурс
пункта
списка
далее
присваиваем
адаптер
списку
listview
список
построении
запрашивает
адаптера
пункты
адаптер
создает
используя
данные
layout
возвращает
списку
в
итоге
видим
готовый
список
есть
различные
типы
списков
адаптеров
мы
пока
рассмотрим
простейший
вариант
создадим
проект
project
name
target
android
name
simplelistpackage
name
activity
mainactivity
открываем
mainxml
добавим
экран
компонент
listview
вкладка
composite
listview
это
компонент
списка
теперь
создать
адаптер
открываем
mainactivityjava
пишем
package
import
androidappactivity
import
androidosbundle
import
androidwidgetarrayadapter
import
androidwidgetlistview
public
class
mainactivity
extends
activity
names
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
находим
список
listview
lvmain
listview
findviewbyidridlvmain
создаем
адаптер
adapter
new
names
присваиваем
адаптер
списку
lvmainsetadapteradapter
вы
поверите
это
весь
код
необходимый
создания
списка
в
качестве
данных
используем
массив
имен
в
oncreate
находим
список
создаем
адаптер
присваиваем
адаптер
списку
давайте
разберемся
создали
адаптер
мы
использовали
конструктор
передали
следующие
параметры
это
системный
layoutфайл
который
представляет
собой
textviewnames
массив
данных
которые
хотим
вывести
список
мы
можем
посмотреть
содержимое
использованного
для
вашем
проекте
найдите
пункт
android
раскройте
раскройте
androidjar
проматывайте
самый
низ
открывайте
reslayout
и
внутри
находим
используемый
нами
двойной
клик
смотрим
содержимое
обычный
textview
набором
параметров
когда
список
формировании
запрашивает
очередной
пункт
адаптер
берет
layoutресурс
прогоняет
layoutinflater
получает
view
преобразует
view
textview
присваивает
текст
массива
данных
отдает
списку
все
сохраним
запустим
видим
список
наших
данных
использование
системного
layoutресурса
нам
самим
layout
рисовать
однако
устраивает
выглядит
список
использованием
качестве
пункта
списка
можем
создать
свой
layoutресурс
создадим
layoutфайл
папке
нашего
проекта
textview
указанием
цвета
размера
шрифта
выравнивания
текста
отступов
изменим
существующий
код
укажем
адаптеру
наш
созданный
layoutресурс
создаем
адаптер
adapter
new
names
теперь
адаптер
использовать
создании
пунктов
списка
все
сохраним
запустим
видим
наш
зеленый
список
в
layoutресурсе
пункта
списка
вместо
textview
можете
использовать
какойнибудь
производный
класс
например
button
главное
объект
прошел
преобразование
textview
адаптер
присвоит
текст
методом
settext
отдаст
списку
на
одном
прошлых
уроков
говорил
context
контекст
используется
доступа
базовым
функциям
приложения
в
уроке
получилось
хорошее
подтверждение
этим
словам
arrаyadapter
использует
layoutinflater
конвертнуть
layoutресурс
view
но
получение
объекта
layoutinflater
это
одна
базовых
функций
недоступна
класса
arrаyadapter
поэтому
arrаyadapter
качестве
контекста
передаем
ссылку
activity
activity
имеет
доступ
базовым
функциям
восходящую
иерархию
классов
а
класс
arrayadapter
внутри
использует
переданный
контекст
вызвать
layoutinflater
без
контекста
смог
это
сделать
на
следующем
уроке
используем
список
listview
одиночного
множественного
выбора
элементов
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
android
actionbar
размещение
элементов
поиск
полный
список
в
уроке
размещаем
элементы
actionbar
еще
одно
нововведение
третьего
андроида
это
панель
верхней
части
приложения
в
уроке
попробуем
размещать
свои
элементы
иконками
посмотрим
ними
взаимодействовать
тут
нам
знакомо
тк
используется
механизм
который
раньше
строил
меню
те
методе
получаем
вход
объект
menu
программно
помощью
xml
наполняем
элементами
для
элементов
будем
указывать
id
текст
иконку
режим
показа
создадим
проект
project
name
build
target
android
application
name
actionbaritems
package
name
create
activity
mainactivity
в
stringsxml
добавим
строки
в
файл
напишем
следующий
текст
с
id
title
icon
думаю
понятно
это
идентификатор
текст
иконка
элемента
иконки
системные
выбранные
случайно
нам
интересен
атрибут
showasaction
это
режим
показа
элемента
он
принимать
значения
never
показывать
элемент
ifroom
показывать
место
always
показывать
к
этим
значениям
добавлено
одно
withtext
актуально
элементов
указанной
иконкой
в
случае
элемента
показана
иконка
текст
title
кодим
mainactivityjava
package
import
androidappactivity
import
androidosbundle
import
androidviewmenu
public
class
mainactivity
extends
activity
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
public
boolean
oncreateoptionsmenumenu
menu
getmenuinflaterinflatermenumain
menu
return
true
думаю
комментарии
особо
нужны
все
знакомое
заполненный
нами
ранее
xmlфайл
используется
создания
элементов
menu
все
сохраняем
запускаем
приложение
отобразился
для
указывали
иконку
поэтому
видим
текст
а
showasaction
указали
always
те
система
пытаться
отобразить
элемент
хватает
места
actionbar
для
указали
иконку
видим
actionbar
в
showasaction
указали
ifroom
те
отображать
свободное
место
место
элемент
виден
жмем
эмуляторе
menu
видим
оставшихся
элемента
они
отобразились
actionbar
доступны
отобразился
тк
хватило
места
мы
указывали
showasaction
ifroom
те
отображать
для
место
нашлось
влез
отобразился
тк
указали
showasaction
never
кнопки
меню
вместо
actionbar
кнопка
overflow
точки
используйте
увидеть
скрытые
пункты
меню
давайте
увеличим
место
actionbar
посмотрим
изменится
для
просто
повернем
экран
горизонтальную
ориентацию
для
изменилось
а
появилось
местечко
вылез
если
отображена
иконка
видим
текст
это
сказывается
withtext
атрибуте
showasaction
виден
несмотря
куча
места
свободного
причина
never
атрибуте
showasaction
чтоб
добраться
жмем
menu
если
запустить
это
приложение
планшете
увидим
интерфейс
actionbar
справа
появляется
кнопка
нажатие
которую
аналогично
нажатию
menu
судя
всему
эта
кнопка
видна
тех
устройствах
которых
кнопки
menu
если
элемента
показана
иконка
долгим
нажатием
добиться
показа
текста
попробуем
на
avd
это
работает
на
планшете
почемуто
для
коде
прописать
getactionbarhide
либо
выбрать
activity
тему
содержащую
текст
noactionbar
там
работе
меню
метод
все
аналогично
в
левой
части
actionbar
находится
кнопка
home
по
умолчанию
используется
иконка
приложения
activity
мы
можем
поставить
сюда
иконку
трогая
текущие
для
используется
атрибут
androidlogo
activity
application
в
третьем
андроиде
кнопка
home
кликабельна
умолчанию
в
четвертом
явно
задействовать
методом
поймать
нажатие
кнопки
home
также
onoptionsitemselected
она
имеет
id
androidridhome
насколько
понял
хелпу
назначение
кнопки
перейти
коренное
activity
программы
те
действительно
кнопка
домой
также
хелп
говорит
одной
логической
возможности
использования
кнопка
вверх
те
корневое
activity
логический
уровень
вверх
например
чтения
письма
переходим
списку
писем
а
пользователь
знал
попадет
домой
вверх
предлагается
вешать
кнопку
стрелочку
методом
в
итоге
выглядит
это
примерно
на
кнопке
появилась
стрелка
надо
понимать
эта
стрелка
это
просто
изображение
пользователя
знал
какое
поведение
ожидать
нажатия
а
кодить
весь
процесс
перехода
вверх
самим
как
процесс
перехода
домой
напоследок
несколько
полезных
методов
actionbar
установить
свой
заголовок
установить
свой
подзаголовок
заголовок
подзаголовок
кнопку
home
на
следующем
уроке
используем
навигацию
actionbar
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
changing
layoutparams
running
application
lessons
lesson
change
layoutparameters
already
existing
screen
components
translated
taras
leskiv
know
create
screen
components
configure
location
using
layoutparams
lesson
find
change
layoutparameters
already
existing
screen
components
change
weight
components
draw
seekbar
two
buttons
configure
space
occupied
buttons
using
weight
parameter
create
project
project
name
build
target
android
application
name
package
name
create
activity
mainactivity
open
mainxml
create
following
screen
using
seekbar
component
looks
like
scrollbar
allows
specify
value
range
values
component
max
progress
components
max
value
seekbar
returns
scrolled
maximum
progress
current
value
bar
make
maximum
value
current
value
half
buttons
width
content
weight
share
space
linearlayout
stretched
equally
thing
left
write
code
make
everything
work
open
mainactivityjava
describe
find
components
get
access
layoutparams
public
class
mainactivity
extends
activity
seekbar
sbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
use
method
get
layoutparams
component
method
returns
basic
viewgrouplayoutparams
need
linearlayoutlayoutparams
casting
result
layoutparams
components
working
example
influence
use
need
listener
seekbar
react
changes
make
activity
need
add
implements
onseekbarchangelistener
class
declaration
public
class
mainactivity
extends
activity
implements
onseekbarchangelistener
also
add
listener
methods
activity
must
implement
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
public
void
onstarttrackingtouchseekbar
seekbar
public
void
onstoptrackingtouchseekbar
seekbar
listener
contains
three
methods
clear
name
triggers
start
dragging
bar
triggers
every
time
value
changed
triggers
release
bar
implementing
onprogresschanged
method
changes
visible
bar
dragged
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
int
leftvalue
progress
int
rightvalue
seekbargetmax
progress
configure
weight
leftvalue
rightvalue
write
value
variables
buttons
text
leftvalue
variable
current
value
seekbar
left
bar
rightvalue
variable
value
right
maximum
value
minus
current
value
use
values
weight
correspondingly
bar
left
smaller
leftvalue
bigger
rightvalue
means
smaller
width
greater
width
viceversa
also
make
obvious
write
variable
values
text
buttons
forget
assign
listener
activity
viewcomponents
whose
events
need
process
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
sbweightsetonseekbarchangelistenerthis
button
save
everything
run
application
change
button
sizes
dragging
bar
guess
looks
tellingly
lines
code
small
nuance
write
code
component
change
need
add
code
case
button
read
layout
redraw
method
already
invoked
settext
invoke
explicitly
know
quite
lot
following
lessons
try
write
first
sensible
application
calculator
complete
lesson
code
public
class
mainactivity
extends
activity
implements
onseekbarchangelistener
seekbar
sbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
sbweightsetonseekbarchangelistenerthis
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
int
leftvalue
progress
int
rightvalue
seekbargetmax
progress
configure
weight
leftvalue
rightvalue
write
value
variables
buttons
text
public
void
onstarttrackingtouchseekbar
seekbar
public
void
onstoptrackingtouchseekbar
seekbar
next
lesson
write
calculator
application
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
подробнее
onactivityresult
зачем
нужны
requestcode
resultcode
поиск
полный
список
в
уроке
разбираемся
нужны
requestcode
resultcode
onactivityresult
на
прошлом
уроке
поверхностно
рассмотрели
вызвать
activity
сделать
вернула
результат
рассмотрим
немного
подробней
механизм
создадим
приложение
которое
вызывать
разных
activity
получать
результат
как
помним
результат
приходит
метод
и
requestcode
используется
отличать
друг
друга
пришедшие
результаты
а
resultcode
позволяет
определить
успешно
прошел
вызов
создадим
проект
project
name
build
target
android
application
name
activityresult
package
name
create
activity
mainactivity
нарисуем
экран
mainxml
на
экране
textview
текстом
и
две
кнопки
выбора
цвета
шрифта
выравнивания
текста
textview
нажатие
кнопку
вызывать
activity
выбора
получать
обратно
результат
давайте
начнем
кодить
mainactivityjava
package
import
androidappactivity
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvtext
button
btncolor
button
btnalign
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvtext
textview
findviewbyidridtvtext
btncolor
button
findviewbyidridbtncolor
btnalign
button
findviewbyidridbtnalign
btncolorsetonclicklistenerthis
btnalignsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
определили
экранные
элементы
прописали
обработчик
кнопкам
пока
остановимся
создадим
других
activity
начнем
activity
выбора
цвета
создадим
layoutфайл
colorxml
создаем
класс
coloractivity
coloractivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidgraphicscolor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
coloractivity
extends
activity
implements
onclicklistener
button
btnred
button
btngreen
button
btnblue
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutcolor
btnred
button
findviewbyidridbtnred
btngreen
button
findviewbyidridbtngreen
btnblue
button
findviewbyidridbtnblue
btnredsetonclicklistenerthis
btngreensetonclicklistenerthis
btnbluesetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
switch
vgetid
case
ridbtnred
colorred
break
case
ridbtngreen
colorgreen
break
case
ridbtnblue
colorblue
break
intent
finish
как
обычно
определяем
элементы
присваиваем
обработчик
кнопкам
реализуем
onclick
в
onclick
создаем
intent
затем
определяем
кнопка
каким
цветом
нажата
помещаем
intent
объект
именем
color
значением
цвета
ставим
статус
указываем
вернуть
объект
intent
качестве
результата
закрываем
activity
для
значения
цветов
используем
системные
константы
аналогично
создаем
activity
выбора
выравнивания
layoutфайл
alignxml
alignactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewgravity
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
alignactivity
extends
activity
implements
onclicklistener
button
btnleft
button
btncenter
button
btnright
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutalign
btnleft
button
findviewbyidridbtnleft
btncenter
button
findviewbyidridbtncenter
btnright
button
findviewbyidridbtnright
btnleftsetonclicklistenerthis
btncentersetonclicklistenerthis
btnrightsetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
switch
vgetid
case
ridbtnleft
gravityleft
break
case
ridbtncenter
gravitycenter
break
case
ridbtnright
gravityright
break
intent
finish
здесь
аналогично
coloractivity
только
работаем
цветами
выравниванием
не
забудьте
прописать
оба
activity
манифесте
теперь
можем
завершить
код
mainactivityjava
добавим
пару
своих
констант
класс
удобства
final
int
final
int
эти
константы
далее
будем
использовать
качестве
requestcode
допишем
метод
onclick
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtncolor
intent
new
intentthis
coloractivityclass
startactivityforresultintent
break
case
ridbtnalign
intent
new
intentthis
alignactivityclass
startactivityforresultintent
break
мы
определяем
кнопка
нажата
посылаем
intent
ожиданием
возврата
результата
два
вызова
отличаются
классом
вызываемого
activity
параметром
requestcode
методе
startactivityforresult
при
вызове
coloractivity
используем
константу
вызове
alignactivity
эту
константу
обратно
получим
методе
обработки
результата
onactivityresult
сможем
определить
какого
именно
activity
пришел
результат
давайте
реализуем
метод
onactivityresult
mainactivityjava
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
запишем
лог
значения
requestcode
resultcode
requestcode
resultcode
resultcode
пришло
ок
resultcode
switch
requestcode
case
int
color
colorwhite
tvtextsettextcolorcolor
break
case
int
align
gravityleft
tvtextsetgravityalign
break
вернулось
ок
else
toastmaketextthis
для
наглядности
пишем
лог
значения
переменных
вспоминаем
coloractivity
alignactivity
методе
setresult
ставили
статус
отправке
результата
значит
onactivityresult
нам
ожидать
статус
обозначение
успешного
окончания
вызова
если
вызов
прошел
успешно
resultcode
смотрим
значение
requestcode
если
оно
равно
константе
вспоминаем
использовали
константу
методе
startactivityforresult
отправляли
запрос
выбор
цвета
значит
нам
пришел
результат
выбора
мы
берем
intent
data
извлекаем
значение
объекта
именем
color
присваиваем
это
значение
цвету
текста
textview
константа
colorwhite
методе
getintextra
означает
значение
умолчанию
те
intent
найдется
объекта
именем
color
метод
вернет
белый
white
цвет
аналогично
эту
константу
использовали
запроса
выбора
выравнивания
и
методе
onactivityresult
параметр
requestcode
константе
значит
пришел
ответ
запрос
выравнивания
и
считываем
это
значение
intent
присваиваем
атрибуту
gravity
textview
если
resultcode
равен
значит
чтото
пошло
выводим
экран
соответствующее
сообщение
этот
случай
наступить
например
экране
выбора
делать
выбор
нажать
кнопку
назад
давайте
сохраним
запустим
приложение
нажмем
color
выберем
например
red
цвет
изменился
смотрим
лог
requestcode
resultcode
requestcode
пришедший
метод
onactivityresult
равен
все
верно
это
значение
константы
которое
использовали
вызове
resultcode
это
значение
системной
константы
те
верно
пришел
ответ
запрос
цвета
статус
теперь
жмем
alignment
выбираем
right
получаем
выравнивание
вправо
смотрим
лог
requestcode
resultcode
requestcode
равно
константе
значит
пришел
ответ
запрос
выравнивания
resultcode
те
теперь
снова
жмем
color
вместо
выбрать
цвет
нажмем
кнопку
назад
отобразилось
наше
сообщение
ошибке
смотрим
логи
requestcode
resultcode
requestcode
верно
запрашивали
цвет
resultcode
это
значение
константы
значит
вызов
прошел
неудачно
ограничений
значение
статуса
методе
setresult
системные
общепринятые
константы
но
можете
свободно
использовать
свои
значения
необходимость
итак
подведем
итог
requestcode
это
некотором
роде
id
запроса
задается
методе
startactivityforresult
проверяется
onactivityresult
точно
знать
вызов
пришел
ответ
resultcode
статус
вызова
задается
методе
setresult
проверяется
onactivityresult
понять
насколько
успешно
прошел
вызов
если
вызове
чтото
пошло
вернется
системная
константа
полный
код
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidgraphicscolor
import
androidosbundle
import
androidutillog
import
androidviewgravity
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
final
int
final
int
textview
tvtext
button
btncolor
button
btnalign
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvtext
textview
findviewbyidridtvtext
btncolor
button
findviewbyidridbtncolor
btnalign
button
findviewbyidridbtnalign
btncolorsetonclicklistenerthis
btnalignsetonclicklistenerthis
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtncolor
intent
new
intentthis
coloractivityclass
startactivityforresultintent
break
case
ridbtnalign
intent
new
intentthis
alignactivityclass
startactivityforresultintent
break
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
запишем
лог
значения
requestcode
resultcode
requestcode
resultcode
resultcode
пришло
ок
resultcode
switch
requestcode
case
int
color
colorwhite
tvtextsettextcolorcolor
break
case
int
align
gravityleft
tvtextsetgravityalign
break
вернулось
ок
else
toastmaketextthis
на
следующем
уроке
узнаем
такое
uri
вызываем
системные
приложения
браузер
звонилка
карта
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
introduction
home
lesson
provide
detailed
information
dagger
discuss
notions
component
module
connect
dagger
project
look
couple
simple
examples
dagger
would
like
decrease
interobject
dependency
simplify
procedure
developing
tests
code
dependency
injection
exactly
want
dagger
hand
library
help
implement
pattern
mini
training
course
describe
use
dagger
library
version
refer
simply
dagger
advantages
dagger
opposed
libraries
follows
helps
generate
code
easy
understand
debug
checks
dependencies
compilation
stage
create
issues
proguard
used
tell
right
away
quite
challenging
topic
questions
like
would
happen
expected
unfortunately
cannot
discuss
possible
cases
strongly
recommend
create
examples
run
tests
different
things
work
different
circumstances
using
examples
experience
reallife
examples
significantly
helped
understand
theory
better
order
understand
might
need
dependency
injection
dagger
lets
consider
small
abstract
example
model
situation
create
one
object
entails
creation
several
objects
say
certain
mainactivity
application
according
mvp
pattern
presenter
mainactivity
order
presenter
work
would
need
certain
itemcontroller
datacontroller
means
create
two
objects
create
presenter
however
order
create
two
objects
would
need
apiservice
sharedpreferences
objects
cannot
apiservice
without
restadapter
restadapterbuilder
okhttpclient
cashe
standard
implementation
could
look
follows
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
file
cachedirectory
new
cashe
cashe
new
httpresponsecachecachedirectory
okhttpclient
httpclient
new
okhttpclient
httpclientsetcachecashe
restadapterbuilder
builder
new
restadapterbuilder
buildersetclientnew
okclienthttpclient
restadapter
restadapter
builderbuild
apiservice
apiservice
restadaptercreateapiserviceclass
itemcontroller
itemcontroller
new
itemcontrollerapiservice
sharedpreferences
preference
datacontroller
datacontroller
new
datacontrollerpreference
activitypresenter
new
mainactivitypresenterthis
itemcontroller
datacontroller
create
lot
objects
mainactivity
order
simply
get
one
presenter
example
really
care
objects
created
main
thing
much
code
would
need
written
mainactivity
us
get
desired
outcome
apply
dependency
injection
pattern
use
dagger
code
activity
would
look
like
public
class
mainactivity
extends
activity
mainactivitypresenter
activitypresenter
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
activitypresenter
appgetcomponentgetpresenter
course
code
creating
objects
go
anywhere
moved
activity
individual
classes
dagger
access
result
call
getpresenter
method
get
mainactivitypresenter
object
dagger
go
ahead
create
object
entire
hierarchy
objects
required
could
without
dagger
simply
moving
code
creating
objects
method
like
mainactivitypresentercreateinstance
different
presenter
partially
needs
objects
createinstance
method
presenter
would
duplicate
code
creating
certain
objects
use
dagger
code
creating
required
object
would
exist
one
place
one
instance
dagger
would
use
code
everywhere
need
create
object
theory
lets
look
dagger
works
inside
lets
consider
example
activity
presenter
activity
creates
presenter
object
purposes
regular
creation
algorithm
would
look
follows
activity
presenter
see
activity
creates
presenter
use
dagger
algorithm
would
looks
follows
activity
component
module
presenter
activity
accesses
component
component
uses
modules
create
presenter
return
activity
modules
components
two
key
notions
dagger
modules
simply
classes
put
code
used
create
objects
normally
module
comprises
objects
similar
purpose
example
itemmodule
would
contain
code
used
create
objects
associated
users
something
like
item
itemcontroller
networkmodule
includes
okhttpclient
apiservice
objects
storagemodule
consists
datacontroller
sharedpreferences
objects
component
hand
agent
activity
modules
activity
needs
certain
object
accesses
component
component
knows
module
used
create
object
requests
module
create
object
return
activity
note
component
use
modules
create
entire
hierarchy
objects
required
generate
desired
object
actually
compare
process
dagger
works
lunch
mcdonalds
use
dagger
algorithm
analogy
activity
component
module
presenter
mcdonalds
lunch
algorithm
would
look
follows
customer
cashier
production
line
order
big
lets
look
steps
algorithms
detail
mcdonalds
dagger
customer
decided
order
big
mac
fries
coke
places
order
cashier
activity
tells
component
would
need
presenter
cashier
goes
production
line
puts
order
together
takes
big
mac
pours
glass
coke
puts
fries
onto
tray
component
goes
modules
creates
objects
required
create
presenter
cashier
places
items
bag
hands
bag
customer
component
creates
required
object
presenter
provides
activity
real
life
examples
lets
consider
simple
reallife
example
create
modules
components
activity
would
use
modules
components
receive
required
objects
create
new
project
order
able
use
dagger
add
following
lines
end
buildgradle
file
module
add
plugin
buildscript
repositories
mavencentral
dependencies
classpath
apply
plugin
apply
plugin
comneenbedanktandroidapt
add
dagger
dependencies
dependencies
compile
apt
reason
something
working
right
download
use
following
two
classes
objects
request
dagger
databasehelper
networkutils
public
class
databasehelper
public
class
networkutils
care
implementation
right
leave
blank
lets
say
need
objects
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
order
get
using
dagger
need
create
modules
component
go
ahead
create
modules
would
know
provide
required
objects
precisely
modules
write
entire
code
used
create
objects
regular
classes
number
annotations
public
class
networkmodule
networkutils
providenetworkutils
return
new
networkutils
public
class
storagemodule
databasehelper
providedatabasehelper
return
new
databasehelper
use
annotation
tell
dagger
class
module
annotation
indicates
method
supply
object
component
use
get
object
technical
standpoint
could
pretty
much
manage
one
module
would
much
logical
break
object
modules
based
intended
application
purpose
modules
ready
lets
create
component
order
need
create
interface
public
interface
appcomponent
interface
describes
blank
component
know
nothing
project
compiled
dagger
find
interface
using
annotation
generate
daggerappcomponent
class
implements
interface
would
component
class
need
fill
interface
methods
let
component
know
objects
able
return
us
project
gets
compiled
dagger
implement
generated
component
class
component
return
objects
us
one
two
ways
first
way
regular
get
methods
means
simply
call
method
returns
us
object
second
way
interesting
involves
using
inject
methods
case
provide
component
instance
activity
component
fills
required
fields
creating
required
objects
lets
consider
two
options
using
examples
lets
complement
interface
component
would
know
create
objects
us
public
interface
appcomponent
networkutils
getnetworkutils
databasehelper
getdatabasehelper
modules
list
includes
modules
component
search
code
required
create
objects
methods
various
names
important
thing
types
returned
methods
networkutils
databasehelper
let
component
know
objects
want
return
us
time
compilation
dagger
check
object
taken
module
generate
respective
code
creating
objects
implementation
two
methods
simply
call
component
methods
mainactivity
order
get
finished
objects
thats
left
describe
creation
component
instance
somewhere
use
application
class
dont
forget
add
manifest
public
class
app
extends
application
private
static
appcomponent
component
public
void
oncreate
superoncreate
component
daggerappcomponentcreate
public
static
appcomponent
getcomponent
return
component
create
component
oncreate
method
point
development
framework
likely
get
upset
dagger
appcomponent
class
happens
dagger
appcomponent
class
exist
quite
yet
described
interface
appcomponent
class
need
compile
project
dagger
create
component
class
compile
project
using
android
studio
following
menu
build
make
project
process
complete
dagger
appcomponent
class
created
folder
studio
knows
class
offering
add
import
code
would
contain
errors
use
component
mainactivity
order
get
readytouse
databasehelper
networkutils
objects
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
databasehelper
appgetcomponentgetdatabasehelper
networkutils
appgetcomponentgetnetworkutils
run
application
dagger
create
objects
whole
thing
crashing
npe
make
sure
added
app
class
manifest
right
two
objects
mainactivity
receive
component
instead
objects
would
describe
get
methods
component
interface
write
calls
methods
mainactivity
code
luckily
us
dagger
offers
convenient
solution
cases
like
teach
component
return
objects
also
fill
activity
required
objects
means
would
give
component
instance
mainactivity
component
would
decide
objects
needed
create
place
respective
fields
lets
rewrite
component
interface
public
interface
appcomponent
void
injectsmainactivitymainactivity
mainactivity
describe
one
inject
method
instead
couple
get
methods
name
anything
want
main
thing
type
parameter
indicate
mainactivity
way
telling
component
call
method
provide
mainactivity
instance
expect
component
would
fill
instance
required
objects
project
gets
compiled
dagger
would
see
method
interface
go
mainactivity
class
search
fields
marked
special
annotations
determine
objects
would
need
create
result
dagger
implements
injectsmainactivity
method
component
class
order
component
receive
objects
modules
insert
respective
variables
mainactivity
instance
returned
lets
rewrite
mainactivity
public
class
mainactivity
extends
activity
databasehelper
databasehelper
networkutils
networkutils
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
appgetcomponentinjectsmainactivitythis
use
annotations
mark
fields
component
needs
fill
injectsmainactivity
called
component
take
databasehelper
networkutils
objects
modules
place
mainactivity
fields
see
mechanism
component
class
code
generated
dagger
injectsmainactivity
method
looks
follows
public
void
injectsmainactivitymainactivity
mainactivity
mainactivitymembersinjectorinjectmembersmainactivity
go
look
inside
mainactivitymembersinjectorinjectmembers
see
following
public
void
injectmembersmainactivity
instance
instance
null
throw
new
inject
members
null
instancedatabasehelper
databasehelperproviderget
instancenetworkutils
networkutilsproviderget
see
simply
null
check
assignment
objects
mainactivity
fields
goes
without
saying
get
methods
inject
methods
used
together
within
one
component
described
separately
clarity
purposes
total
objects
component
generate
referred
component
object
graph
component
dependency
graph
look
example
graph
consists
two
objects
databasehelper
networkutils
component
knows
create
objects
provide
cases
component
creates
one
object
might
require
another
object
already
talked
beginning
lesson
order
create
one
presenter
create
another
dozen
objects
lets
look
example
module
public
class
networkmodule
networkutils
providenetworkutilshttpclient
httpclient
return
new
networkutilshttpclient
httpclient
providehttpclient
return
new
httpclient
request
component
provide
networkutils
object
component
go
module
call
providenetworkutils
method
method
needs
httpclient
object
enter
component
looks
module
within
component
would
able
create
object
finds
required
object
within
module
calls
providehttpclient
method
gets
httpclient
object
uses
call
providenetworkutils
method
means
object
needs
objects
created
describe
creation
objects
modules
case
component
create
entire
chain
get
desired
object
cases
everything
easily
created
modules
objects
might
required
outside
dagger
describe
case
like
one
future
lessons
one
advantages
using
dagger
kind
error
building
dependencies
find
stage
compilation
rather
runtime
lets
check
create
another
blank
class
called
preferences
public
class
preferences
also
add
variable
type
inject
annotation
mainactivity
preferences
preferences
call
inject
method
component
must
create
preferences
object
added
description
object
created
modules
component
simply
know
get
object
lets
try
compile
project
get
errorerror
error
preferences
cannot
provided
without
constructor
method
compiler
quite
logically
complains
know
component
would
take
preferences
object
lesson
talked
basics
working
dagger
touched
upon
specific
details
difficulties
read
able
understand
general
principle
dagger
works
role
component
modules
next
lessons
talk
additional
features
creating
objects
offered
dagger
discuss
one
example
components
organized
small
application
also
explore
ability
component
create
objects
separate
thread
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
working
layout
elements
code
lessons
lesson
learn
refer
viewelements
screen
code
change
properties
translated
taras
leskiv
create
project
project
name
build
target
android
application
name
viewbyid
package
name
rustartandroiddevelopviewbyid
create
activity
mainactivity
refer
element
screen
code
need
id
specified
either
properties
layoutfile
choose
comfortable
strict
format
id
means
new
resource
added
rjava
class
already
open
mainxml
specify
id
textview
save
file
open
rjava
see
constant
mytext
appeared
id
class
refer
constant
write
ridmytext
constant
tethered
textview
element
use
refer
element
programmatically
need
method
returns
view
id
write
method
call
remind
writing
code
inside
oncreate
method
method
invoked
activity
created
clear
write
please
look
code
end
lesson
open
mainactivityjava
setcontentview
method
call
write
view
mytextview
findviewbyidridmytext
view
underlined
red
likely
class
added
section
press
ctrl
shift
automatically
update
imports
mytextview
type
view
textview
screen
type
superclass
textview
viewelements
fit
us
want
perform
operations
related
textview
view
textview
edit
code
become
like
textview
mytextview
textview
findviewbyidridmytext
mytextview
type
textview
returned
value
findviewbyid
method
cast
view
textview
invoke
textview
mytextview
object
take
method
instance
displayed
text
hello
world
mainactivity
change
programmatically
new
text
textview
text
save
run
application
ctrl
see
text
changed
add
button
screen
button
id
leave
default
text
save
ctrl
shift
save
id
appear
rjava
write
code
button
mybtn
button
findviewbyidridmybtn
note
case
object
name
matches
object
id
interfere
even
logical
way
found
button
change
text
run
application
button
text
changed
click
button
several
times
nothing
happen
specify
button
pressed
implement
next
lesson
make
button
disabled
mybtnsetenabledfalse
changed
enabled
property
click
button
save
run
make
sure
button
disabled
add
checkbox
id
tick
default
check
programmatically
using
setchecked
method
changes
checked
parameter
checkbox
mychb
checkbox
findviewbyidridmychb
mychbsetcheckedtrue
run
application
make
sure
code
works
see
complicated
using
findviewbyid
method
get
id
object
refers
viewelement
screen
button
textview
checkbox
invoke
methods
objects
settext
setenabled
setchecked
need
end
come
code
package
rustartandroiddevelopviewbyid
import
androidappactivity
import
androidosbundle
import
androidwidgetbutton
import
androidwidgetcheckbox
import
androidwidgettextview
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
textview
mytextview
textview
findviewbyidridmytext
text
button
mybtn
button
findviewbyidridmybtn
mybtnsetenabledfalse
checkbox
mychb
checkbox
findviewbyidridmychb
mychbsetcheckedtrue
next
lesson
learn
process
button
clicks
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
viewcomponents
running
application
lessons
lesson
add
components
screen
application
running
translated
taras
leskiv
previous
lesson
creating
components
activityoncreate
method
creating
application
lesson
create
components
application
running
creating
buttons
displayed
obviously
specify
text
displayed
button
alignment
left
center
right
also
consider
deletion
created
components
create
project
project
name
target
android
name
name
activity
mainactivity
create
screen
help
us
creating
viewcomponents
open
mainxml
write
following
examine
screen
rggravity
radiogroup
three
radiobuttons
rbleft
rbcenter
rbright
use
component
select
alignment
created
componentetname
text
field
specify
text
displayed
created
componentbtncreate
button
launches
creation
processbtnclear
button
deletes
everything
createdllmain
vertical
linearlayout
components
created
screen
ready
code
implementation
open
mainactivityjava
start
defining
finding
required
components
way
buttons
using
need
listener
assign
activity
listener
need
add
implements
onclicklistener
create
empty
onclick
processing
method
public
class
mainactivity
extends
activity
implements
linearlayout
llmain
radiogroup
rggravity
edittext
etname
button
btncreate
button
btnclear
int
wrapcontent
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
llmain
linearlayout
findviewbyidridllmain
rggravity
radiogroup
findviewbyidridrggravity
etname
edittext
findviewbyidridetname
btncreate
button
findviewbyidridbtncreate
btncreatesetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
also
created
wrapcontent
variable
store
value
make
code
less
verbose
describe
process
creating
buttoncomponent
filling
onclick
method
public
void
onclickview
v
switch
vgetid
case
ridbtncreate
creating
layoutparams
width
height
defined
content
linearlayoutlayoutparams
lparams
new
linearlayoutlayoutparams
wrapcontent
wrapcontent
variable
store
alignment
left
default
int
btngravity
gravityleft
define
radiobutton
checked
fill
bntgravity
correspondingly
switch
rggravitygetcheckedradiobuttonid
case
ridrbleft
btngravity
gravityleft
break
case
ridrbcenter
btngravity
break
case
ridrbright
btngravity
gravityright
break
put
received
alignment
value
layoutparams
lparamsgravity
btngravity
create
button
change
text
add
linearlayout
button
btnnew
new
buttonthis
btnnewsettextetnamegettexttostring
llmainaddviewbtnnew
lparams
break
look
code
begin
check
whether
btncreate
clicked
creation
button
create
layoutparams
width
height
defined
content
using
variable
mentioned
wrapcontent
would
quite
verbose
otherwise
create
btngravity
variable
assign
alignment
value
left
default
define
radiobutton
checked
moment
use
getcheckedradiobuttonid
method
returns
id
checked
radiobutton
radiogroup
compare
three
ids
put
corresponding
value
btngravity
variable
assing
value
gravity
layoutparams
create
button
assign
text
etname
note
sufficient
write
gettext
return
text
also
call
tostring
method
end
add
created
button
linearlayout
save
everything
run
application
add
several
buttons
buttons
appear
specified
alignment
text
enter
text
keyboard
appears
bottom
blocks
view
make
disappear
press
back
button
emulator
esc
common
keyboard
keyboard
appears
japanese
hieroglyphs
open
context
menu
input
field
left
mouse
button
long
press
choose
input
method
choose
android
keyboard
list
thing
left
unimplemented
clear
button
intended
delete
created
content
need
fill
onclick
method
add
one
case
switch
statement
vgetid
case
ridbtnclear
llmainremoveallviews
toastmaketextthis
break
removeallviews
method
removes
child
viewcomponents
linearlayout
show
success
message
using
toast
save
run
check
add
buttons
click
clear
button
see
result
finally
quite
dynamic
application
change
complete
lesson
code
public
class
mainactivity
extends
activity
implements
onclicklistener
linearlayout
llmain
radiogroup
rggravity
edittext
etname
button
btncreate
button
btnclear
int
wrapcontent
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
llmain
linearlayout
findviewbyidridllmain
rggravity
radiogroup
findviewbyidridrggravity
etname
edittext
findviewbyidridetname
btncreate
button
findviewbyidridbtncreate
btncreatesetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtncreate
creating
layoutparams
width
height
defined
content
linearlayoutlayoutparams
lparams
new
linearlayoutlayoutparams
wrapcontent
wrapcontent
variable
store
alignment
left
default
int
btngravity
gravityleft
define
radiobutton
checked
fill
bntgravity
correspondingly
switch
rggravitygetcheckedradiobuttonid
case
ridrbleft
btngravity
gravityleft
break
case
ridrbcenter
btngravity
break
case
ridrbright
btngravity
gravityright
break
put
received
alignment
value
layoutparams
lparamsgravity
btngravity
create
button
change
text
add
linearlayout
button
btnnew
new
buttonthis
btnnewsettextetnamegettexttostring
llmainaddviewbtnnew
lparams
break
case
ridbtnclear
llmainremoveallviews
toastmaketextthis
break
next
lesson
change
layoutparameters
already
existing
screen
components
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
layout
parameters
viewelements
lessons
lesson
examine
screen
properties
explore
layout
parameters
height
width
margin
gravity
weight
translated
taras
leskiv
begin
theory
screens
screen
physical
properties
size
resolution
screen
size
distance
two
opposite
corners
screens
usually
measured
inches
resolution
number
points
horizontally
vertically
screen
able
display
measured
pixels
take
display
htc
desire
smartphone
example
screen
size
inches
resolution
pixels
number
pixels
one
inch
called
dpi
dots
per
inch
find
dpi
equal
case
remembering
basics
c
number
pixels
diagonal
c
number
pixels
fits
inches
b
sides
screen
c
dpi
one
inch
screen
fits
number
pixels
equal
get
back
lesson
subject
look
detail
following
parameters
view
elements
talked
little
width
height
previous
lesson
specify
absolute
values
use
constants
explore
possibilities
absolute
values
following
used
mu
dp
dip
densityindependent
pixels
abstract
unit
measure
allows
applications
look
alike
different
screens
resolutions
sp
scaleindependent
pixels
dp
used
font
sizes
viewelements
pt
inch
defined
physical
screen
size
mu
px
pixel
recommended
use
application
look
different
different
screens
mm
millimeter
defined
physical
size
screen
inch
defined
physical
size
screen
constants
means
element
occupy
available
parent
element
defined
content
create
project
project
name
build
target
android
application
name
layoutprop
package
name
rustartandroiddeveloplayoutprop
create
activity
mainactivity
open
mainxml
configure
root
linearlayout
horizontal
orientation
delete
textview
add
button
width
height
equal
displayed
screen
width
corresponds
text
width
change
text
save
look
screen
button
became
wider
width
defined
content
specify
width
dp
button
stretch
independently
content
make
width
equal
button
stretched
whole
parent
width
linearlayout
linearlayout
byturn
occupies
whole
screen
width
parent
contains
elements
want
occupy
whole
space
must
use
layout
weight
parameter
free
space
distributed
proportionally
element
weight
values
change
text
button
add
neighbour
linearlayout
second
button
text
set
width
start
dividing
want
space
parent
distributed
equally
specify
weight
case
buttons
equal
widths
note
simple
numbers
specified
units
measure
need
occupy
quarter
three
quarters
available
space
specify
weight
weight
number
elements
add
also
button
text
weight
width
xmlcode
resulted
screen
specify
weight
claim
free
space
width
defined
content
occupies
space
obvious
also
applied
height
parameter
using
weight
attribute
specify
value
height
width
case
content
element
would
ignored
result
correspond
weight
ratios
parameter
similar
alignment
word
excel
would
convenient
demonstrate
using
framelayout
describe
layout
previous
lesson
simple
elements
put
default
positioned
top
left
corner
lined
way
fits
great
demonstrating
alignment
settings
create
grlayoutxml
top
top
bottom
bottom
screen
clarity
text
button
displays
properties
everything
clear
simple
honestly
tried
understand
gravity
values
written
help
work
information
regarding
write
comment
margin
parameters
completely
similar
html
margin
margin
sides
sides
required
demonstrate
tablelayout
example
create
marginlayoutxml
draw
table
three
three
buttons
experiment
button
middle
margin
dp
margin
dp
appears
around
button
margin
left
dp
margin
top
dptop
left
margins
margin
right
dpmargin
bottom
dpright
bottom
margins
lesson
appears
quite
big
valuable
guess
last
lesson
design
modelling
makingup
start
coding
next
lesson
learn
refer
viewelements
code
change
properties
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
details
onactivityresult
lessons
lesson
understanding
usage
requestcode
resultcode
onactivityresult
last
lesson
fluently
took
look
way
call
activity
result
consider
detail
create
app
launch
two
different
activities
get
result
back
remember
result
comes
back
within
method
requestcode
used
differentiation
returned
results
resultcode
allows
determine
result
call
successful
create
new
project
project
name
build
target
android
application
name
activityresult
package
name
create
activity
mainactivity
code
main
screen
mainxml
textview
text
two
buttons
color
choosing
text
alignment
screen
clicking
button
launch
activity
choice
making
get
choice
result
back
begin
coding
within
mainactivityjava
package
import
androidappactivity
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvtext
button
btncolor
button
btnalign
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvtext
textview
findviewbyidridtvtext
btncolor
button
findviewbyidridbtncolor
btnalign
button
findviewbyidridbtnalign
btncolorsetonclicklistenerthis
btnalignsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
determine
views
set
listeners
buttons
finish
create
another
two
activities
begin
colorchoosing
activity
create
colorxml
layout
create
class
coloractivity
coloractivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidgraphicscolor
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
coloractivity
extends
activity
implements
onclicklistener
button
btnred
button
btngreen
button
btnblue
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutcolor
btnred
button
findviewbyidridbtnred
btngreen
button
findviewbyidridbtngreen
btnblue
button
findviewbyidridbtnblue
btnredsetonclicklistenerthis
btngreensetonclicklistenerthis
btnbluesetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
switch
vgetid
case
ridbtnred
colorred
break
case
ridbtngreen
colorgreen
break
case
ridbtnblue
colorblue
break
intent
finish
usual
determine
views
set
listeners
buttons
override
onclick
within
onclick
create
intent
identify
colorbutton
clicked
put
color
object
color
value
intent
set
status
set
intent
returned
result
call
finish
use
system
constants
color
values
create
activity
alline
choosing
way
alignxml
layout
alignactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewgravity
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
alignactivity
extends
activity
implements
onclicklistener
button
btnleft
button
btncenter
button
btnright
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutalign
btnleft
button
findviewbyidridbtnleft
btncenter
button
findviewbyidridbtncenter
btnright
button
findviewbyidridbtnright
btnleftsetonclicklistenerthis
btncentersetonclicklistenerthis
btnrightsetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
switch
vgetid
case
ridbtnleft
gravityleft
break
case
ridbtncenter
gravitycenter
break
case
ridbtnright
gravityright
break
intent
finish
similar
coloractivity
though
color
working
alignment
forget
declare
activities
manifest
finish
mainactivityjava
code
declare
pair
constant
variables
within
class
ease
use
final
int
final
int
use
requestcode
finish
onclick
method
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtncolor
intent
new
intentthis
coloractivityclass
startactivityforresultintent
break
case
ridbtnalign
intent
new
intentthis
alignactivityclass
startactivityforresultintent
break
identify
button
clicked
send
intent
waiting
result
calls
different
activity
classes
requestcode
variable
startactivityforresult
method
calling
coloractivity
use
constant
used
alignactivity
call
get
constants
back
within
onactivityresult
identify
activity
returned
result
implement
onactivityresult
within
mainactiivtyjava
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
put
log
requestcode
resultcode
values
requestcode
resultcode
resultcode
got
ok
resultcode
switch
requestcode
case
int
color
colorwhite
tvtextsettextcolorcolor
break
case
int
align
gravityleft
tvtextsetgravityalign
break
get
ok
else
toastmaketextthis
logging
variable
values
make
code
run
visual
remember
set
constant
argument
setresult
method
means
receive
variable
within
onactivityresult
result
successful
call
completion
call
successful
resultcode
must
check
requestcode
value
case
equal
constant
used
argument
startactivityforresult
method
within
request
color
value
means
got
chosen
value
extract
color
object
intent
set
textview
color
value
colorwhite
constant
argument
within
getintextra
method
default
value
case
intent
content
color
object
default
value
used
usage
similar
constant
used
within
align
request
case
onactivityresult
requestcode
variable
equal
constant
means
received
result
align
request
extract
result
intent
set
textview
gravity
attribute
resultcode
equal
means
something
went
wrong
display
appropriate
message
may
happen
case
clicking
back
button
instead
making
choice
save
launch
app
click
color
button
click
red
button
color
changed
look
logs
requestcode
resultcode
requestcode
passed
onactivityresult
equal
one
right
value
used
within
request
resultcode
system
constant
value
right
got
response
color
request
status
equal
click
alignment
button
choose
right
way
get
right
align
look
logs
requestcode
resultcode
requestcode
equals
means
got
response
align
request
resultcode
e
push
color
button
push
back
button
except
color
choice
button
error
toast
displayed
look
logs
requestcode
resultcode
requestcode
right
made
color
request
resultcode
constant
value
means
request
failed
constraints
status
value
setresult
method
system
constants
allowed
use
values
need
sum
requestcode
kind
request
id
must
set
startactivityforresult
method
checked
within
onactivityresult
know
query
processed
resultcode
request
status
must
set
setresult
method
checked
onactivityresult
find
call
successful
constant
returned
something
went
wrong
mainactivityjava
code
package
import
androidappactivity
import
androidcontentintent
import
androidgraphicscolor
import
androidosbundle
import
androidutillog
import
androidviewgravity
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
import
androidwidgettoast
public
class
mainactivity
extends
activity
implements
onclicklistener
final
int
final
int
textview
tvtext
button
btncolor
button
btnalign
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvtext
textview
findviewbyidridtvtext
btncolor
button
findviewbyidridbtncolor
btnalign
button
findviewbyidridbtnalign
btncolorsetonclicklistenerthis
btnalignsetonclicklistenerthis
public
void
onclickview
v
intent
intent
switch
vgetid
case
ridbtncolor
intent
new
intentthis
coloractivityclass
startactivityforresultintent
break
case
ridbtnalign
intent
new
intentthis
alignactivityclass
startactivityforresultintent
break
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
put
log
requestcode
resultcode
values
requestcode
resultcode
resultcode
got
ok
resultcode
switch
requestcode
case
int
color
colorwhite
tvtextsettextcolorcolor
break
case
int
align
gravityleft
tvtextsetgravityalign
break
get
ok
else
toastmaketextthis
next
lesson
find
uri
launch
system
apps
browser
dialer
map
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
listview
lessons
lesson
using
listview
create
list
begin
study
listview
suggest
recall
last
lesson
mechanism
list
building
used
went
array
data
created
list
item
within
every
iteration
filled
data
added
list
adapter
create
list
items
us
listview
creating
adapter
needs
data
layoutresource
list
item
passing
arguments
adapter
assign
adapter
listview
list
building
list
requests
items
adapter
adapter
creates
using
data
layout
returns
list
result
see
finished
list
different
types
lists
adapters
study
simple
variant
far
create
project
project
name
target
android
name
simplelistpackage
name
activity
mainactivity
open
mainxml
add
listview
layout
composite
tab
listview
list
component
need
create
adapter
open
mainactivityjava
code
package
import
androidappactivity
import
androidosbundle
import
androidwidgetarrayadapter
import
androidwidgetlistview
public
class
mainactivity
extends
activity
names
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
находим
список
listview
lvmain
listview
findviewbyidridlvmain
создаем
адаптер
adapter
new
names
присваиваем
адаптер
списку
lvmainsetadapteradapter
believe
code
need
list
creation
use
array
names
data
within
oncreate
method
determine
list
create
adapter
set
list
find
created
adapter
used
constructor
passed
next
parameters
itthis
b
system
layout
file
contains
textviewnames
data
array
want
display
look
content
find
android
project
expand
expand
androidjar
scroll
bottom
open
reslayout
inside
find
use
make
double
click
see
contents
simple
text
view
set
parameters
list
asks
next
item
building
adapter
takes
layoutresource
pass
layoutinflater
gets
view
converts
view
textview
set
text
data
data
array
returns
list
save
launch
see
list
data
using
system
layout
file
good
need
code
create
resource
case
resource
fit
us
create
layout
file
folder
textview
specified
color
text
size
alignment
padding
change
code
pass
layout
resource
created
adapter
создаем
адаптер
adapter
new
names
adapter
use
list
items
building
save
launch
app
see
list
colored
green
within
layout
resource
may
use
view
child
instead
textview
could
button
example
main
thing
object
undergo
conversion
textview
adapter
specify
text
settext
method
return
list
one
previous
lessons
told
context
used
get
access
basic
application
functionality
lesson
got
good
confirmation
words
arrаyadapter
uses
layoutinflater
convert
layoutresource
view
getting
layoutinflater
one
basic
functions
unavailable
arrаyadapter
class
pass
link
activity
context
arrаyadapter
activity
access
basic
functions
ascending
hierarchy
classes
arrayadapter
class
uses
context
passed
get
layoutinflater
without
context
next
lesson
using
listview
single
multiple
elements
selection
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
контекстное
меню
поиск
полный
список
в
уроке
создадим
контекстное
меню
контекстное
меню
вызывается
андроид
длительным
нажатием
какомлибо
экранном
компоненте
обычно
оно
используется
списках
экран
выводится
список
однородных
объектов
например
письма
почтящике
выполнить
действие
одним
этих
объектов
вызываем
контекстное
меню
но
тк
списки
проходили
сделаем
пример
попроще
будем
вызывать
контекстное
меню
textview
создадим
проект
project
name
target
android
name
contextmenupackage
name
rustartandroiddevelopcontextmenucreate
activity
mainactivity
откроем
mainxml
нарисуем
textview
для
первого
textview
сделаем
контекстное
меню
помощью
которого
будем
менять
цвет
текста
для
второго
будем
менять
размер
текста
принцип
создания
контекстного
меню
похож
создание
обычного
меню
но
отличия
метод
создания
вызывается
каждый
показом
меню
на
вход
передается
contextmenu
который
будем
добавлять
пункты
view
элемент
экрана
которого
вызвано
контекстное
меню
contextmenucontextmenuinfo
содержит
допинформацию
контекстное
меню
вызвано
элемента
списка
пока
это
используем
будем
изучать
списки
увидим
штука
полезная
метод
обработки
аналогичный
методу
onoptionsitemselected
обычного
меню
на
вход
передается
menuitem
пункт
меню
который
нажат
также
нам
понадобится
третий
метод
на
вход
передается
view
это
означает
view
необходимо
создавать
контекстное
меню
если
выполнить
метод
контекстное
меню
view
создаваться
давайте
кодить
открываем
mainactivityjava
опишем
найдем
textview
укажем
необходимо
создавать
контекстное
меню
textview
tvcolor
tvsize
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvcolor
textview
findviewbyidridtvcolor
tvsize
textview
findviewbyidridtvsize
tvcolor
tvsize
необходимо
создавать
контекстное
меню
registerforcontextmenutvcolor
registerforcontextmenutvsize
теперь
опишем
создание
контекстных
меню
используем
константы
хранения
id
пунктов
меню
final
int
final
int
final
int
final
int
final
int
final
int
и
создаем
public
void
oncreatecontextmenucontextmenu
menu
view
v
contextmenuinfo
menuinfo
todo
autogenerated
method
stub
switch
vgetid
case
ridtvcolor
break
case
ridtvsize
break
обратите
внимание
id
определяем
view
которого
вызвано
контекстное
меню
зависимости
создаем
определенное
меню
те
контекстное
меню
вызвано
tvcolor
создаем
меню
перечислением
цветов
tvsize
размерами
шрифта
в
качестве
id
пунктов
использовали
константы
группировку
сортировку
используем
поэтому
используем
нули
качестве
соответствующих
параметров
можно
сохранить
запустить
при
долгом
нажатии
textview
должны
появляться
контекстные
меню
но
нажатие
дает
тк
прописали
обработку
методе
oncontextitemselected
давайте
пропишем
public
boolean
oncontextitemselectedmenuitem
item
todo
autogenerated
method
stub
switch
itemgetitemid
пункты
меню
tvcolor
case
tvcolorsettextcolorcolorred
color
break
case
tvcolorsettextcolorcolorgreen
color
break
case
tvcolorsettextcolorcolorblue
color
break
пункты
меню
tvsize
case
size
break
case
size
break
case
size
break
return
superoncontextitemselecteditem
в
методе
определяем
id
пункт
меню
нажат
и
выполняем
соответствующие
действия
меняем
цвет
текста
tvcolor
размер
шрифта
tvsize
сохраняем
запускаем
проверяем
контекстные
меню
реагируют
нажатия
делают
требуется
для
расширения
кругозора
хотел
коечто
написать
теме
возможно
это
покажется
пока
сложноватым
непонятно
страшного
итак
мысли
вслух
мы
использовали
метод
registerforcontextmenu
view
view
включения
контекстного
меню
определенного
view
этот
метод
принадлежит
классу
activity
я
посмотрел
исходники
метода
написано
следующее
public
void
registerforcontextmenuview
view
viewsetoncreatecontextmenulistenerthis
вспоминаем
смотрим
хелп
методу
получается
view
качестве
обработчика
создания
контекстного
меню
использует
объект
в
данном
случае
код
activity
значит
это
activity
те
view
хочет
показать
контекстное
меню
оно
обращается
обработчику
activity
выполняет
свой
метод
oncreatecontextmenu
те
самый
принцип
обычном
нажатии
click
и
строка
mainactivityjava
registerforcontextmenutvcolor
абсолютно
равнозначна
строке
tvcolorsetoncreatecontextmenulistenerthis
вообще
можем
создать
свой
объект
реализующий
интерфейс
viewoncreatecontextmenulistener
использовать
вместо
activity
качестве
обработчика
создания
контекстного
меню
не
забывайте
контекстного
меню
также
можете
использовать
xmlспособ
который
рассмотрен
конце
прошлого
урока
попробуйте
сделать
урок
использованием
xmlменю
полный
код
урока
public
class
mainactivity
extends
activity
final
int
final
int
final
int
final
int
final
int
final
int
textview
tvcolor
tvsize
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvcolor
textview
findviewbyidridtvcolor
tvsize
textview
findviewbyidridtvsize
tvcolor
tvsize
необходимо
создавать
контекстное
меню
registerforcontextmenutvcolor
registerforcontextmenutvsize
public
void
oncreatecontextmenucontextmenu
menu
view
v
contextmenuinfo
menuinfo
todo
autogenerated
method
stub
switch
vgetid
case
ridtvcolor
break
case
ridtvsize
break
public
boolean
oncontextitemselectedmenuitem
item
todo
autogenerated
method
stub
switch
itemgetitemid
пункты
меню
tvcolor
case
tvcolorsettextcolorcolorred
color
break
case
tvcolorsettextcolorcolorgreen
color
break
case
tvcolorsettextcolorcolorblue
color
break
пункты
меню
tvsize
case
size
break
case
size
break
case
size
break
return
superoncontextitemselecteditem
на
следующем
уроке
рисуем
экран
программно
layoutфайл
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
полный
список
поиск
фильтр
заголовку
display
все
list
articles
category
уроки
июля
июля
августа
августа
августа
августа
августа
августа
августа
августа
августа
сентября
сентября
сентября
сентября
сентября
сентября
сентября
сентября
сентября
октября
октября
октября
октября
октября
октября
октября
октября
октября
ноября
ноября
ноября
ноября
ноября
ноября
ноября
ноября
декабря
декабря
декабря
декабря
декабря
декабря
декабря
декабря
декабря
января
января
января
января
января
января
февраля
февраля
февраля
февраля
февраля
февраля
февраля
февраля
марта
марта
марта
марта
марта
апреля
апреля
апреля
апреля
апреля
апреля
апреля
апреля
апреля
мая
мая
мая
мая
мая
мая
мая
мая
мая
июня
июня
июня
июня
июня
июня
июня
июня
июля
июля
июля
июля
июля
июля
июля
июля
июля
августа
августа
августа
августа
сентября
сентября
сентября
сентября
октября
октября
октября
ноября
ноября
ноября
декабря
декабря
января
января
февраля
февраля
февраля
марта
марта
марта
апреля
апреля
мая
июня
июня
июля
августа
сентября
октября
октября
ноября
ноября
декабря
декабря
января
января
февраля
февраля
февраля
февраля
марта
марта
марта
марта
апреля
апреля
июля
июля
июля
августа
августа
сентября
октября
октября
октября
октября
ноября
ноября
декабря
августа
августа
сентября
сентября
октября
октября
ноября
ноября
декабря
января
февраля
марта
апреля
июля
июля
июля
июля
ноября
ноября
ноября
ноября
ноября
ноября
декабря
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
логи
всплывающие
сообщения
поиск
полный
список
в
уроке
рассмотрим
логи
приложения
всплывающие
сообщения
создадим
проект
project
name
build
target
android
application
name
logandmess
package
name
rustartandroiddeveloplogandmess
create
activity
mainactivity
создадим
mainxml
экран
знакомый
нам
прошлым
урокам
обработчики
алгоритм
приложения
по
нажатию
кнопок
меняется
текст
обработчик
activity
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
присваиваем
обработчик
кнопкам
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
id
определяем
кнопку
вызвавшую
обработчик
switch
vgetid
case
ridbtnok
кнопка
ок
кнопка
break
case
ridbtncancel
кнопка
cancel
кнопка
break
сохраним
запустим
убедимся
работает
когда
тестируете
работу
приложения
можете
видеть
логи
работы
они
отображаются
окне
logcat
чтобы
отобразить
окно
откройте
меню
window
show
view
в
появившемся
окне
выберите
android
logcat
должна
появится
вкладка
logcat
рассмотрим
вкладку
подробней
имеют
разные
уровни
важности
error
warn
info
debug
verbose
убыванию
кнопки
v
w
e
кружках
это
фильтры
соответствуют
типам
логов
опробуйте
обратите
внимание
фильтр
показывает
логи
своего
уровня
уровней
высокой
важности
также
можете
создавать
редактировать
удалять
свои
фильтры
это
рассмотрим
дальше
давайте
смотреть
самим
писать
логи
делается
это
несложно
помощью
класса
методов
logv
logd
logi
logw
loge
названия
методов
соответствуют
уровню
логов
которые
запишут
изменим
код
mainactivityjava
возьмем
каменты
кода
добавим
debugлоги
помощью
метода
logd
метод
требует
вход
тэг
текст
сообщения
тэг
это
чтото
типа
метки
легче
куче
системных
логов
найти
именно
наше
сообщение
добавим
описание
тега
tag
запишем
тексты
каментов
лог
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
private
static
final
string
tag
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
logdtag
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
присваиваем
обработчик
кнопкам
logdtag
обработчик
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
id
определяем
кнопку
вызвавшую
обработчик
logdtag
id
определяем
кнопку
вызвавшую
switch
vgetid
case
ridbtnok
кнопка
ок
logdtag
кнопка
break
case
ridbtncancel
кнопка
cancel
logdtag
кнопка
break
eclipse
ругнется
знает
класс
log
обновите
импорт
спросит
выберите
androidutillog
запустим
приложение
понажимаем
кнопки
посмотрим
логи
видно
отлично
записалось
чтобы
сделать
просмотр
удобней
создадим
свой
фильтр
жмем
значок
имя
фильтра
произвольное
например
logs
log
tag
это
значение
константы
tag
которая
описана
нашем
коде
использовалась
методе
logd
те
pid
оставляем
пустым
это
id
процесса
уровень
поставим
debug
жмем
ok
появилась
новая
вкладка
logs
которой
отображаются
логи
соответствующие
созданному
фильтру
мы
помещали
лог
текст
разумеется
можете
писать
например
значения
интересующих
переменных
приведенные
типу
string
иногда
бывает
логи
отображаются
вкладке
logcat
хотя
avd
запущен
приложение
работает
проблем
в
таком
случае
должно
помочь
следующее
eclipse
идем
меню
window
open
perspective
ddms
откроется
немного
набор
окон
обычно
там
найдите
вкладку
devices
должно
видно
ваше
avdустройство
кликните
логи
должны
появиться
чтобы
вернуться
разработку
window
open
perspective
java
приложение
показывать
всплывающие
сообщения
помощью
класса
toast
давайте
подредактируем
метод
onclick
сделаем
всплывало
сообщение
кнопка
нажата
public
void
onclickview
v
id
определяем
кнопку
вызвавшую
обработчик
logdtag
id
определяем
кнопку
вызвавшую
switch
vgetid
case
ridbtnok
кнопка
ок
logdtag
кнопка
toastmaketextthis
кнопка
break
case
ridbtncancel
кнопка
cancel
logdtag
кнопка
toastmaketextthis
кнопка
break
разберем
синтаксис
вызова
статический
метод
создает
viewэлемент
параметры
метода
context
пока
будем
вдаваться
подробности
это
такое
используем
текущую
activity
те
text
текст
который
показать
duration
продолжительность
показа
toast
создан
отобразился
экране
вызывается
метод
show
сохраняем
запускаем
проверяем
если
андроидсмартфон
думаю
видели
подобные
сообщения
теперь
знаете
это
делается
на
следующем
уроке
создаем
пункты
меню
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
используем
layoutinflater
создания
списка
поиск
полный
список
в
уроке
делаем
свой
вариант
списка
на
прошлом
уроке
узнали
нужен
класс
layoutinflater
сделали
небольшой
пример
котором
подробно
рассмотрели
метод
inflate
параметры
для
закрепления
темы
сделаем
сложный
пример
мы
сделаем
свой
аналог
списка
для
начала
придумаем
данные
пусть
это
снова
штатное
расписание
именами
работников
должностями
зарплатой
те
каждый
пункт
нашего
списка
содержать
текстовых
редактируемых
поля
name
position
salary
а
пункты
разместим
виде
вертикального
списка
для
реализации
нам
понадобятся
layoutфайла
mainxml
основной
экран
activity
контейнер
пунктов
списка
itemxml
экран
framelayout
тремя
текстовыми
полями
нем
это
пункт
списка
приложение
параллельно
перебирать
массива
данных
создавать
каждой
тройки
viewэлемент
layoutфайла
itemxml
заполнять
данными
добавлять
вертикальный
linearlayout
mainxml
создадим
проект
project
name
target
android
name
layoutinflaterlistpackage
name
activity
mainactivity
экран
mainxml
scrollview
обеспечит
нам
прокрутку
списка
пункты
влезут
экран
а
нем
linearlayout
который
будем
добавлять
элементы
экран
itemxml
framelayout
textview
нем
кодим
реализацию
mainactivityjava
package
import
androidappactivity
import
androidgraphicscolor
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgrouplayoutparams
import
androidwidgetlinearlayout
import
androidwidgettextview
public
class
mainactivity
extends
activity
name
position
int
colors
new
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
layoutinflater
ltinflater
getlayoutinflater
int
namelength
view
item
ltinflaterinflaterlayoutitem
linlayout
false
textview
tvname
textview
itemfindviewbyidridtvname
textview
tvposition
textview
itemfindviewbyidridtvposition
textview
tvsalary
textview
itemfindviewbyidridtvsalary
itemgetlayoutparamswidth
linlayoutaddviewitem
не
нужно
кода
сделать
несложный
список
мы
запускаем
цикл
колву
элементов
массивах
данных
в
каждой
итерации
создаем
viewэлемент
item
layoutфайла
itemxml
в
нашем
случае
item
это
framelayout
который
содержит
textview
мы
находим
созданном
item
заполняем
данными
массивов
в
методе
inflate
указали
root
linlayout
получить
layoutparams
далее
использовать
настройки
ширины
также
наглядности
раскрашиваем
пункты
методом
обратите
внимание
третий
параметр
inflate
указали
false
те
стали
сразу
добавлять
создаваемый
viewэлемент
linlayout
делаем
это
конце
кода
методом
addview
этому
объяснение
если
указали
true
метод
добавил
item
linlayout
вернул
нам
linlayout
общий
пунктов
списка
через
linlayout
заполнять
textview
необходимым
нам
текстом
затруднительно
поэтому
получаем
пункт
item
framelayout
заполняем
textview
данными
помещаем
остальным
пунктам
linlayout
методом
addview
все
сохраним
запустим
список
удался
работает
прокрутка
урок
получился
короткий
полезный
на
всякий
случай
хочу
заметить
это
классический
androidсписок
называемый
list
но
пример
значительно
облегчит
понимание
списка
тк
принцип
схож
для
построения
list
также
должны
будем
предоставлять
массив
данных
layoutфайл
пунктов
этим
займемся
следующем
уроке
на
следующем
уроке
используем
listview
построения
списка
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
reading
action
intent
lessons
lesson
reading
action
intent
translated
taras
leskiv
previous
lesson
created
obvious
example
illustrates
action
intent
intent
filter
bound
together
lesson
continue
illustrating
topic
good
good
news
news
item
one
intent
filter
contain
several
actions
activity
notifies
us
perform
several
actions
example
viewing
image
also
editing
activity
approach
different
intents
different
actions
news
item
number
two
activity
invoked
using
intent
access
intent
read
attributes
activity
find
action
used
following
create
activity
configure
intent
filter
action
rustartandroidintentactionshowtime
action
rustartandroidintentactionshowdate
specify
activity
capable
displaying
time
date
later
create
intent
action
rustartandroidintentactionshowtime
action
rustartandroidintentactionshowdate
invoke
one
activity
activity
know
whether
display
date
time
reading
action
intent
define
show
action
okay
start
implementing
everything
clear
create
project
project
name
build
target
android
application
name
getintentaction
package
name
create
activity
mainactivity
open
mainxml
draw
two
buttons
screen
previous
lesson
mainactivityjava
code
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
button
btntime
button
findviewbyidridbtntime
button
btndate
button
findviewbyidridbtndate
btntimesetonclicklistenerthis
btndatesetonclicklistenerthis
public
void
onclickview
v
intent
intent
switchvgetid
case
ridbtntime
intent
new
startactivityintent
break
case
ridbtndate
intent
new
startactivityintent
break
code
also
completely
previous
lesson
define
buttons
assign
listener
activity
invoke
intent
button
click
create
activity
catch
intents
begin
create
layoutfile
infoxml
one
textview
screen
create
activity
name
info
infojava
code
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidwidgettextview
public
class
info
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutinfo
get
intent
launched
activity
intent
intent
getintent
get
action
string
action
intentgetaction
string
format
textinfo
fill
variables
dependning
action
format
textinfo
else
format
textinfo
depending
format
variable
value
get
date
time
datetime
variable
simpledateformat
sdf
new
simpledateformatformat
string
datetime
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvinfo
tvdatesettexttextinfo
datetime
receive
intent
using
method
action
depending
value
display
text
screen
forget
register
new
activity
manifest
create
intent
filter
two
actions
category
specify
label
info
intent
filter
info
contains
two
actions
means
intent
actions
comes
activity
invoked
save
everything
run
application
press
show
time
button
likely
see
following
system
gives
us
choice
intent
action
rustartandroidintentactionshowtime
found
two
activities
fit
one
info
one
created
everything
clear
question
second
item
name
intentfilter
comes
answer
activitytime
previous
lesson
named
intentfilter
specified
label
manifest
activity
previous
lesson
system
displays
application
name
default
system
displayed
choice
dialog
means
create
application
previous
lesson
created
new
avd
mistake
code
choose
info
see
implemented
activity
recognized
intent
action
rustartandroidintentactionshowtime
shown
time
time
text
choose
intentfilter
see
activity
previous
lesson
try
pressing
show
date
button
see
following
choice
снова
see
info
two
activities
previous
lesson
contain
action
rustartandroidintentactionshowdate
intent
filter
make
choice
choose
info
see
date
date
text
choose
date
basic
date
expanded
see
previous
lesson
simple
date
expanded
figured
one
activity
invoked
using
intent
different
actions
activity
read
action
perform
required
operations
also
made
sure
intent
looks
activities
applications
system
case
found
activity
application
developed
previous
lesson
next
lesson
passing
data
using
intent
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
читаем
action
intent
поиск
полный
список
в
уроке
читаем
action
intent
на
прошлом
уроке
сделали
наглядный
пример
показывающий
связаны
собой
action
intent
intent
filter
на
уроке
продолжим
тему
есть
две
новости
хорошая
хорошая
первая
новость
intent
filter
содержать
несколько
action
тем
самым
activity
дает
понять
способна
несколько
действий
например
просмотр
картинки
редактирование
получается
activity
подойти
разным
intent
разными
action
вторая
новость
activity
которое
вызвано
помощью
intent
имеет
доступ
этому
intent
прочесть
атрибуты
те
узнать
action
использовался
мы
сделаем
следующее
создадим
activity
настроим
intent
filter
action
rustartandroidintentactionshowtime
action
rustartandroidintentactionshowdate
тем
самым
обозначаем
это
activity
способно
время
показать
дату
далее
будем
создавать
intent
либо
action
rustartandroidintentactionshowtime
либо
rustartandroidintentactionshowdate
они
оба
будут
вызывать
одно
activity
а
activity
знало
показывать
дату
время
будем
читать
action
intent
нему
определять
в
общем
начнем
делать
станет
понятно
создадим
проект
project
name
build
target
android
application
name
getintentaction
package
name
create
activity
mainactivity
открываем
mainxml
рисуем
две
кнопки
экран
точно
прошлом
уроке
код
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
button
btntime
button
findviewbyidridbtntime
button
btndate
button
findviewbyidridbtndate
btntimesetonclicklistenerthis
btndatesetonclicklistenerthis
public
void
onclickview
v
intent
intent
switchvgetid
case
ridbtntime
intent
new
startactivityintent
break
case
ridbtndate
intent
new
startactivityintent
break
код
полностью
прошлого
урока
определяем
кнопки
присваиваем
обработчик
activity
вызываем
intent
нажатиям
теперь
сделаем
activity
которая
ловить
оба
этих
intent
для
начала
создадим
layoutфайл
infoxml
на
экране
textview
создаем
activity
назовем
просто
info
код
infojava
package
import
javasqldate
import
javatextsimpledateformat
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidwidgettextview
public
class
info
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutinfo
получаем
intent
который
вызывал
это
activity
intent
intent
getintent
читаем
action
string
action
intentgetaction
string
format
textinfo
зависимости
action
заполняем
переменные
format
textinfo
else
format
textinfo
зависимости
содержимого
переменной
format
получаем
дату
время
переменную
datetime
simpledateformat
sdf
new
simpledateformatformat
string
datetime
sdfformatnew
datesystemcurrenttimemillis
textview
tvdate
textview
findviewbyidridtvinfo
tvdatesettexttextinfo
datetime
мы
получаем
intent
помощью
метода
action
зависимости
значения
формируем
выводим
экран
текст
не
забываем
прописать
новое
activity
манифесте
создать
intent
filter
двумя
action
category
и
label
укажите
info
intent
filter
info
содержит
action
а
значит
придет
intent
c
любым
activity
вызвана
все
сохраним
запустим
жмем
кнопку
show
time
скорее
увидите
следующее
система
предлагает
нам
выбор
те
intent
action
rustartandroidintentactionshowtime
нашел
подходящих
activity
то
которое
info
создали
понятно
вопрос
откуда
второе
названием
intentfilter
ответ
это
activitytime
прошлого
урока
называется
оно
intentfilter
прошлом
уроке
прописали
манифесте
label
activity
система
умолчанию
отображает
название
приложения
если
система
отобразила
диалог
выбора
значит
либо
создавали
приложение
прошлого
урока
либо
пересоздали
avd
либо
гдето
очепятка
коде
выбираем
info
видим
кодили
activity
определило
intent
action
rustartandroidintentactionshowtime
показало
время
текстом
time
если
выбрать
intentfilter
увидим
activity
прошлого
урока
теперь
попробуем
нажать
кнопку
show
date
видим
выбор
снова
видим
наше
info
activity
прошлого
урока
они
содержат
action
rustartandroidintentactionshowdate
intent
filter
нам
выбирать
выберем
info
видим
дату
текстом
date
если
выбирать
date
basic
date
extended
увидим
делали
прошлом
уроке
обычную
дату
расширенную
мы
увидели
одно
activity
вызвано
помощью
intent
разными
action
activity
прочесть
action
выполнить
необходимые
действия
также
убедились
intent
ищет
activity
всем
приложениям
системе
в
нашел
activity
приложения
которое
делали
прошлом
уроке
на
следующем
уроке
передаем
данные
помощью
intent
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
opengl
шейдеры
поиск
полный
список
в
уроке
создаем
шейдеры
рисуем
треугольник
исходники
уроков
доступны
на
прошлом
уроке
создали
простейший
проект
котором
просто
закрасили
surface
зеленый
цвет
при
работали
верхнем
уровне
коснулись
основного
opengl
механизма
те
шейдеров
шейдеры
это
программы
написанные
языке
glsl
в
графике
изображение
строится
графических
примитивов
точек
линий
треугольников
чтобы
нарисовать
примитив
графический
процессор
должен
знать
координаты
вершин
цвет
заливки
каждой
точки
именно
информацию
предоставляют
шейдеры
и
соответственно
существует
типа
шейдеров
вершинные
которые
оперируют
вершинами
графических
примитивов
фрагментные
отвечают
цвет
каждой
точки
графических
примитивов
те
рисуем
например
треугольник
окончательные
координаты
вершин
будут
определены
вершинном
шейдере
этот
шейдер
вызван
каждой
вершины
а
цвет
каждой
точки
треугольника
определен
фрагментном
шейдере
этот
шейдер
вызван
каждой
точки
треугольника
от
требуется
создать
шейдеры
передать
данные
нашего
приложения
в
уроке
создадим
вершинный
фрагментный
шейдеры
нарисуем
помощью
треугольник
для
создания
приложения
взять
проект
прошлого
урока
создать
копию
в
папке
res
создадим
папку
raw
создадим
файл
attribute
void
main
это
вершинный
шейдер
синтаксис
похож
c
java
разберем
шейдере
метод
main
основной
метод
шейдера
который
вызван
системой
атрибут
типом
это
вектор
float
значений
этот
атрибут
хранить
трехмерные
координаты
вершины
графического
примитива
но
кроме
трех
координат
вершины
xyz
нам
дальнейшем
понадобится
одно
значение
поэтому
передачи
данных
вершинах
используется
данные
атрибут
будем
передавать
нашего
приложения
тк
собрались
рисовать
треугольник
будем
передавать
данные
трех
вершинах
и
каждой
выполнен
шейдер
будут
данные
текущей
вершине
переменная
это
специальная
переменная
которую
должны
поместить
данные
положении
вершины
те
эта
переменная
результат
работы
вершинного
шейдера
эти
данные
далее
будут
использованы
графическим
процессором
определения
положения
вершин
в
нашем
шейдере
просто
передаем
значение
те
шейдер
простой
никак
влияет
входные
данные
транслирует
дальше
с
вершинами
разобрались
теперь
создаем
файл
фрагментного
шейдера
precision
mediump
float
uniform
void
main
первая
строка
устанавливает
точность
вычислений
float
значений
всего
режима
lowp
mediump
highp
из
названий
понятна
точность
но
разумеется
выше
точность
ниже
производительность
для
работы
цветом
вполне
достаточно
точности
mediump
поэтому
используем
нашем
шейдере
в
вершинном
шейдере
точность
указывали
дефолту
используется
highp
тк
расчета
вершин
нужна
высокая
точность
метод
main
является
основным
аналогично
вершинном
шейдере
переменная
содержать
цвет
она
также
имеет
тип
это
вполне
подходит
компонента
цвета
rgba
значение
переменную
будем
задавать
нашем
приложении
слово
uniform
означает
это
значение
одинаково
фрагментов
точек
которые
будут
обработаны
этим
фрагментным
шейдером
переменная
это
специальная
переменная
шейдера
которую
должны
поместить
значение
цвета
текущего
фрагмента
напомню
каждой
точки
фрагмента
треугольника
система
вызовет
фрагментный
шейдер
шейдер
должен
вернуть
значение
цвета
которое
система
использует
рисования
точки
в
просто
помещаем
значение
те
фрагментный
шейдер
вершинный
очень
простой
транслирует
данные
дальше
всяких
изменений
шейдеры
готовы
теперь
наше
приложение
должно
сделать
кучу
вещей
шейдеры
заработали
прочитать
шейдеры
файлов
скомпилировать
создать
шейдеров
программу
найти
программе
входящие
параметры
передать
туда
данные
создаем
классы
fileutilsjava
import
androidcontentcontext
import
androidcontentresresources
import
javaiobufferedreader
import
javaioioexception
import
javaioinputstream
import
javaioinputstreamreader
public
class
fileutils
public
static
string
readtextfromrawcontext
context
int
resourceid
stringbuilder
stringbuilder
new
stringbuilder
try
bufferedreader
bufferedreader
null
try
inputstream
inputstream
contextgetresourcesopenrawresourceresourceid
bufferedreader
new
bufferedreadernew
inputstreamreaderinputstream
string
line
line
bufferedreaderreadline
null
stringbuilderappendline
finally
bufferedreader
null
bufferedreaderclose
catch
ioexception
ioex
ioexprintstacktrace
catch
resourcesnotfoundexception
nfex
nfexprintstacktrace
return
stringbuildertostring
в
классе
метод
readtextfromraw
который
id
прочтет
rawресурс
вернет
содержимое
виде
строки
те
читать
содержимое
файловшейдеров
возвращать
нам
это
содержимое
текстовом
виде
следующий
класс
shaderutilsjava
import
androidcontentcontext
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
public
class
shaderutils
public
static
int
createprogramint
vertexshaderid
int
fragmentshaderid
final
int
programid
glcreateprogram
programid
return
glattachshaderprogramid
vertexshaderid
glattachshaderprogramid
fragmentshaderid
gllinkprogramprogramid
final
linkstatus
new
glgetprogramivprogramid
linkstatus
gldeleteprogramprogramid
return
return
programid
static
int
createshadercontext
context
int
type
int
shaderrawid
string
shadertext
fileutilsreadtextfromrawcontext
shaderrawid
return
shaderutilscreateshadertype
shadertext
static
int
createshaderint
type
string
shadertext
final
int
shaderid
glcreateshadertype
shaderid
return
glshadersourceshaderid
shadertext
glcompileshadershaderid
final
compilestatus
new
glgetshaderivshaderid
compilestatus
gldeleteshadershaderid
return
return
shaderid
здесь
содержатся
методы
компиляции
шейдеров
созданию
программы
в
принципе
пока
вникать
работу
класса
мы
создаем
изменяться
протяжении
нескольких
уроков
здесь
вершин
координат
цветов
вычислений
мы
просто
вынесли
класс
логику
подготовке
шейдеров
использованию
нашем
приложении
так
пока
можете
просмотреть
поверхностно
начнем
методов
createshader
int
createshaderint
type
context
context
int
shaderrawid
принимает
вход
контекст
тип
шейдера
id
rawресурса
читает
содержимое
исходник
шейдера
строку
вызывает
вторую
версию
метода
int
createshaderint
type
string
shadertext
этот
метод
принимает
вход
тип
шейдера
содержимое
виде
строки
далее
вызывает
кучу
opengl
методов
созданию
компиляции
шейдера
glcreateshader
создает
пустой
объект
шейдера
возвращает
id
переменную
shaderid
на
вход
принимает
тип
шейдера
вершинный
фрагментный
вернет
какимто
причинам
шейдер
создать
удалось
glshadersource
берет
исходник
шейдера
строки
ассоциирует
шейдером
shaderid
glcompileshader
компилирует
шейдер
shaderid
glgetshaderiv
позволяет
получить
статус
компиляции
шейдера
shaderid
метод
поместит
статус
массив
compilestatus
элемент
индексом
если
компиляция
прошла
успешно
статус
равен
иначе
далее
проверяем
компиляция
удалась
те
удаляем
объект
шейдера
методом
gldeleteshader
возвращаем
если
ок
возвращаем
shaderid
те
шейдер
готов
id
метод
int
createprogramcontext
context
int
vertexshaderrawid
int
fragmentshaderrawid
создает
программу
программа
это
просто
пара
шейдеров
вершинный
фрагментный
эта
пара
шейдеров
должна
работать
связке
тк
первый
отвечает
вершины
второй
цвета
одиночке
даст
нам
итоговой
картинки
поэтому
объединяют
программу
метод
принимает
вход
id
вершинного
фрагментного
шейдеров
glcreateprogram
создает
пустую
программу
возвращает
id
переменную
programid
если
вместо
id
получаем
значит
чтото
пошло
возвращаем
вместо
id
программы
далее
методом
glattachshader
аттачим
шейдеры
программе
те
говорим
системе
шейдеры
vertexshaderid
fragmentshaderid
будут
частями
программы
programid
gllinkprogram
формирует
программу
приаттаченных
шейдеров
glgetprogramiv
позволяет
проверить
статус
формирования
программы
тут
аналогично
шейдерному
методу
glgetshaderiv
если
чтото
пошло
удаляем
программу
методом
gldeleteprogram
если
ок
возвращаем
programid
те
программа
готова
id
класс
openglrendererjava
на
прошлом
уроке
создавали
нем
будут
серьезные
изменения
поэтому
привожу
весь
код
import
androidcontentcontext
import
androidopenglglsurfaceviewrenderer
import
javaniobytebuffer
import
javaniobyteorder
import
javaniofloatbuffer
import
javaxmicroeditionkhronosegleglconfig
import
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
import
static
public
class
openglrenderer
implements
renderer
private
context
context
private
int
programid
private
floatbuffer
vertexdata
private
int
ucolorlocation
private
int
apositionlocation
public
openglrenderercontext
context
thiscontext
context
preparedata
public
void
eglconfig
int
vertexshaderid
shaderutilscreateshadercontext
int
fragmentshaderid
shaderutilscreateshadercontext
programid
shaderutilscreateprogramvertexshaderid
fragmentshaderid
gluseprogramprogramid
binddata
public
void
int
width
int
height
width
height
private
void
preparedata
vertices
vertexdata
bytebufferallocatedirectverticeslength
vertexdataputvertices
private
void
binddata
ucolorlocation
glgetuniformlocationprogramid
apositionlocation
glgetattriblocationprogramid
glvertexattribpointerapositionlocation
false
vertexdata
glenablevertexattribarrayapositionlocation
public
void
в
конструкторе
вызываем
метод
preparedata
котором
будут
подготовлены
данные
передачи
шейдеры
в
onsurfacecreated
ставим
черным
дефолтный
цвет
очистки
затем
методами
класса
shaderutils
создаем
шейдеры
получаем
id
vertexshaderid
вершинный
fragmentshaderid
фрагментный
создаем
программу
programid
методом
gluseprogram
сообщаем
системе
программу
использовать
построения
изображения
далее
методом
binddata
передаем
данные
шейдеры
метод
onsurfacechanged
изменений
задаем
область
рисования
поверхность
surfaceкомпонента
теперь
самое
интересное
метод
preparedata
в
методе
подготавливаем
данные
передачи
шейдеры
сначала
создаем
массив
элементов
я
коде
разделил
элементов
строки
наглядности
тк
самом
деле
это
координаты
трех
точек
эти
точки
вершины
треугольника
который
собираемся
нарисовать
почему
такие
маленькие
значения
особенно
сравнению
канвой
использовали
координаты
потому
opengl
область
рисования
те
экран
приведет
диапазону
ширине
высоте
и
учитываем
это
рисовании
треугольника
далее
нам
придется
сконвертить
массив
буфер
floatbuffer
тк
это
необходимо
передачи
данных
шейдеры
методом
allocatedirect
выделяем
память
буфер
тк
вершины
массиве
формате
float
размер
float
равен
байта
нам
необходимо
байт
памяти
колво
вершин
метод
order
задает
порядок
байтов
если
хочет
вникнуть
тему
но
пока
это
имеет
значения
укажем
byteordernativeorder
системный
дефолтный
порядок
метод
asfloatbuffer
возвращает
нам
созданный
буфер
байтов
floatbuffer
методом
put
передаем
данные
вершинах
массива
vertices
метод
binddata
здесь
будем
передавать
данные
шейдер
методом
glgetuniformlocation
переменную
ucolorlocation
получаем
положение
шейдере
нашей
uniform
переменной
см
код
фрагментного
шейдера
методом
передаем
ucolorlocation
float
значения
которые
являются
rgba
компонентами
синего
цвета
эти
данные
пойдут
шейдер
переменную
аналогично
методом
glgetattriblocation
переменную
apositionlocation
получаем
положение
attribute
переменной
см
код
вершинного
шейдера
методом
position
сообщаем
системе
данные
vertexdata
читать
начиная
элемента
индексом
те
самого
начала
методом
glvertexattribpointer
сообщаем
системе
шейдеру
своего
атрибута
необходимо
читать
данные
массива
vertexdata
а
параметры
метода
позволяют
подробно
задать
правила
чтения
рассмотрим
какие
параметры
идут
вход
этому
методу
void
glvertexattribpointer
int
indx
int
size
int
type
boolean
normalized
int
stride
buffer
ptr
int
indx
переменная
указывающая
положение
атрибута
шейдере
тут
понятно
используем
ранее
полученную
apositionlocation
которая
знает
сидит
int
size
указывает
системе
сколько
элементов
буфера
vertexdata
брать
заполнения
атрибута
int
type
передаем
тк
float
значения
boolean
normalized
флаг
нам
пока
неактуален
ставим
false
int
stride
используется
передаче
одного
атрибута
массиве
мы
пока
передаем
данные
одного
атрибута
поэтому
пока
ставим
но
последующих
уроках
используем
параметр
buffer
ptr
буффер
данными
те
vertexdata
остановимся
подробнее
параметре
size
если
помните
имеет
тип
те
состоит
float
значений
и
идее
хотим
нарисовать
точки
должны
послать
значений
вершинный
шейдер
вызвался
раза
атрибут
заполнен
значения
те
посылаем
например
массив
укажем
size
система
брать
каждые
значения
писать
атрибут
запускать
вершинный
шейдер
тк
будем
рисовать
вершины
это
укажем
позднее
шейдер
отработает
раза
значение
этих
запусках
будут
следующие
первый
запуск
запуск
запуск
но
посылаем
значений
например
сообщаем
системе
заполнения
атрибута
необходимо
брать
значения
те
система
брать
каждые
значения
писать
атрибут
запускать
вершинный
шейдер
в
итоге
шейдер
иметь
следующие
значения
первый
запуск
запуск
запуск
первые
элемента
атрибута
система
возьмет
массива
третий
четвертый
дали
поэтому
поставит
дефолтные
значения
дефолтные
значения
таковы
все
данные
шейдер
передали
и
напоследок
нам
необходимо
включить
атрибут
apositionlocation
методом
glenablevertexattribarray
в
методе
ondrawframe
очищаем
экран
дефолтным
цветом
методом
gldrawarrays
просим
систему
нарисовать
нам
треугольник
на
вход
этому
методу
идут
параметры
int
mode
указываем
тип
графических
примитивов
хотим
рисовать
в
нашем
случае
это
треугольник
int
first
указываем
брать
вершины
массива
вершин
начиная
элемента
индексом
те
первого
элемента
массива
int
count
колво
вершин
которое
необходимо
использовать
рисования
указываем
тк
треугольника
необходимы
вершины
и
массиве
передавали
данные
трех
вершин
код
класса
mainactivityjava
взять
прошлого
урока
поменять
строку
glsurfaceviewsetrenderernew
openglrendererthis
тк
добавили
context
конструктор
рендера
приложение
готово
все
это
накодили
просто
нарисовать
синий
треугольник
черном
запускаем
приложение
синий
треугольник
ок
очень
инфы
получилось
одного
урока
меньше
никак
разбить
если
чтото
непонятно
унывайте
это
норма
в
следующих
уроках
будем
рисовать
разные
графические
примитивы
добавим
передачу
цвета
используем
текстуры
вся
эта
система
передачи
данных
шейдеры
станет
гораздо
понятнее
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
single
multiple
choice
listview
lessons
lesson
using
listview
single
multiple
choice
sometimes
might
necessity
allow
user
select
one
several
elements
list
look
project
name
target
android
name
simplelistchoicepackage
name
activity
mainactivity
code
mainxml
checked
lvmain
list
btnchecked
button
clicking
display
chosen
list
items
logs
remember
res
files
use
find
res
file
project
add
string
array
names
result
get
file
contents
world
get
array
names
list
easier
correct
add
array
elements
inside
java
code
code
mainactivityjava
package
import
androidappactivity
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetarrayadapter
import
androidwidgetbutton
import
androidwidgetlistview
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
listview
lvmain
names
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
lvmain
listview
findviewbyidridlvmain
adjust
list
elements
choice
mode
create
adapter
using
array
resources
file
adapter
arrayadaptercreatefromresource
rarraynames
lvmainsetadapteradapter
button
btnchecked
button
findviewbyidridbtnchecked
btncheckedsetonclicklistenerthis
get
array
resources
file
names
getresourcesgetstringarrayrarraynames
public
void
onclickview
log
selected
element
set
listview
means
listview
remember
position
last
item
clicked
able
make
request
get
information
next
create
adapter
normal
constructor
using
createfromresource
method
input
parameters
almost
normal
constructor
instead
data
array
use
string
array
created
earlier
within
resources
use
layoutresource
created
use
next
find
btnchecked
button
set
activity
listener
end
import
array
names
resource
file
array
strings
within
onclick
method
display
name
array
logs
use
position
list
index
order
elements
array
list
save
project
launch
see
list
select
tany
name
click
get
checked
items
button
look
logs
checked
dasha
right
refactor
code
little
get
listview
multiple
choice
устанавливаем
режим
выбора
пунктов
списка
создаем
адаптер
используя
массив
файла
ресурсов
adapter
arrayadaptercreatefromresource
rarraynames
changed
list
save
selected
elements
also
changed
multiple
choice
would
allowed
list
refactor
onclick
method
next
way
public
void
onclickview
пишем
лог
выделенные
элементы
sparsebooleanarray
sbarray
lvmaingetcheckeditempositions
int
sbarraysize
int
key
sbarraykeyati
sbarraygetkey
get
positions
object
mapint
boolean
key
int
element
position
boolean
variable
means
element
chosen
sparsebooleanarray
contains
data
elements
chosen
unchosen
elements
go
contents
get
position
case
chosen
display
logs
name
array
according
position
click
get
checked
items
button
look
logs
checkedmariaantonkostja
chosen
elements
returned
see
difference
simple
list
list
choice
awability
different
choicemode
modes
different
layout
resources
list
items
way
see
need
context
adapter
creating
adapter
able
get
resources
without
adapter
getresources
method
uses
context
method
next
lesson
take
look
listview
events
click
onitemclick
method
selection
onitemselect
method
scrolling
onscroll
method
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
обработчики
событий
примере
button
поиск
полный
список
в
уроке
научимся
обрабатывать
нажатие
кнопки
узнаем
такое
обработчик
создадим
проект
project
name
target
android
name
onclickbuttonspackage
name
rustartandroiddeveloponclickbuttonscreate
activity
mainactivity
в
layoutфайл
mainxml
напишем
следующее
сохраним
у
textview
текстом
две
кнопки
ok
cancel
мы
сделаем
нажатию
кнопки
менялось
содержимое
textview
по
нажатию
кнопки
ok
будем
выводить
текст
нажата
кнопка
ок
нажатию
cancel
нажата
кнопка
cancel
открываем
mainactivityjava
описание
объектов
вынесем
пределы
метода
oncreate
это
сделано
могли
любого
метода
обращаться
в
oncreate
объекты
заполним
помощью
пройденного
нами
метода
findviewbyid
в
итоге
должен
получиться
код
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
обновляем
секцию
import
объекты
tvout
btnok
btncancel
соответствуют
viewэлементам
экрана
можем
ними
работать
нам
научить
кнопку
реагировать
нажатие
для
кнопки
метод
на
вход
подается
объект
именно
этому
объекту
кнопка
поручит
обрабатывать
нажатия
давайте
создадим
объект
код
продолжаем
писать
oncreate
onclicklistener
oclbtnok
new
onclicklistener
public
void
onclickview
v
todo
autogenerated
method
stub
eclipse
подчеркивает
onclicklistener
красной
линией
тк
пока
знает
необходимо
обновить
секцию
import
жмем
eclipse
показывает
нам
знает
интерфейса
именем
onclicklistener
предлагает
выбрать
нам
нужен
viewonclicklistener
тк
метод
кнопки
setonclicklistener
принимает
вход
именно
итак
создали
объект
oclbtnok
который
реализует
интерфейс
viewonclicklistener
объект
содержит
метод
onclick
это
нам
нужно
именно
метод
вызван
нажатии
кнопки
мы
решили
нажатию
будем
выводить
текст
нажата
кнопка
ок
textview
tvout
реализуем
это
в
методе
onclick
пишем
кнопка
обработчик
нажатия
готов
осталось
скормить
кнопке
помощью
метода
setonclicklistener
btnoksetonclicklisteneroclbtnok
в
итоге
должен
получится
код
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
создаем
обработчик
нажатия
onclicklistener
oclbtnok
new
onclicklistener
public
void
onclickview
v
меняем
текст
textview
tvout
кнопка
присвоим
обработчик
кнопке
ok
btnok
btnoksetonclicklisteneroclbtnok
все
сохраняем
запускаем
жмем
кнопку
ок
видим
что
текст
изменился
нажатие
cancel
пока
чему
приводит
тк
обработчик
создали
присвоили
давайте
сделаем
это
аналогично
кнопки
ok
сначала
создаем
обработчик
onclicklistener
oclbtncancel
new
onclicklistener
public
void
onclickview
v
меняем
текст
textview
tvout
кнопка
потом
присваиваем
кнопке
btncancelsetonclicklisteneroclbtncancel
сохраняем
запускаем
проверяем
обе
кнопки
умеют
обрабатывать
нажатия
давайте
проговорим
механизм
обработки
событий
примере
нажатия
кнопки
сама
кнопка
обрабатывать
нажатия
умеет
нужен
обработчик
также
называют
слушателем
listener
который
присваивается
помощью
метода
setonclicklistener
когда
кнопку
нажимают
обработчик
реагирует
выполняет
код
метода
onclick
это
изобразить
соответственно
реализации
необходимо
выполнить
следующие
шаги
создаем
обработчик
заполняем
метод
onclick
присваиваем
обработчик
кнопкеи
система
обработки
событий
готова
на
следующем
уроке
научимся
использовать
обработчик
нескольких
viewэлементов
научим
activity
выступать
качестве
обработчика
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
making
activity
return
result
startactivityforresult
method
lessons
lesson
getting
result
started
activity
sometimes
need
start
activity
make
action
return
results
starter
activity
example
sending
sms
push
button
android
show
activity
contact
list
adding
contact
need
returned
smscreation
activity
see
contact
list
activity
returns
contact
information
result
read
practise
create
app
two
activities
start
second
activity
first
enter
data
return
calling
activity
request
username
way
create
new
project
project
name
build
target
android
application
name
simpleactivityresult
package
name
create
activity
mainactivity
open
mainxml
code
screen
name
textview
show
username
button
starting
second
activity
code
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvname
button
btnname
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvname
textview
findviewbyidridtvname
btnname
button
findviewbyidridbtnname
btnnamesetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intentthis
nameactivityclass
startactivityforresultintent
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
data
null
string
name
name
name
define
views
set
onclicklistener
create
new
intent
second
activity
class
within
onclick
method
pay
attention
warning
create
activity
later
use
start
second
activity
mainactivity
start
nameactivity
difference
simple
startactivity
destroying
nameactivity
mainactivity
method
called
noticing
us
way
activity
started
startactivityforresult
destroyed
pass
intent
requestcode
parameters
startactivityforresult
requestcode
necessary
authentification
define
lesson
use
next
lesson
find
usage
detail
parameters
onactivityresultrequestcode
startactivityforresult
identify
returning
result
activity
itresultcode
return
code
indicates
whether
call
passed
successfully
notdata
intent
data
use
requestcode
resultcode
find
usage
next
lesson
get
name
variable
data
set
value
textview
get
name
variable
data
something
must
put
nameactivity
deal
code
namexml
enter
name
edittext
press
ok
button
create
nameactivity
add
manifest
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
nameactivity
extends
activity
implements
onclicklistener
edittext
etname
button
btnok
protected
void
oncreatebundle
savedinstancestate
todo
autogenerated
method
stub
superoncreatesavedinstancestate
setcontentviewrlayoutname
etname
edittext
findviewbyidridetname
btnok
button
findviewbyidridbtnok
btnoksetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
etnamegettexttostring
intent
finish
define
views
set
onclicklistener
create
new
intent
within
onclick
stuff
data
edittext
note
give
pass
intent
define
action
class
pass
undefinite
exactly
method
knows
pass
intent
activity
startactivityforresult
method
called
also
pass
constant
setresult
means
call
successfully
complete
constant
set
resultcode
onactivityresult
mainactivityjava
next
lesson
speak
detail
call
finish
nameactivity
result
pass
mainactivity
save
launch
project
first
see
mainactivity
layout
press
button
pass
nameactivity
enter
username
enter
username
press
button
back
mainactivity
layout
sum
created
new
intent
mainactivity
explicit
referring
nameactivity
class
launched
startactivityforresult
method
nameactivity
appeared
entered
username
clicked
button
intent
created
username
variable
inserted
setresult
method
knows
intent
must
returned
parent
activity
called
startactivityforresult
method
ie
mainactivity
mainactivity
method
onactivityresult
responsible
catching
results
launched
activities
within
unpacked
intent
set
data
got
textview
must
understand
pattern
next
lesson
make
extended
demonstrative
example
technology
usage
next
lesson
find
usage
requestcode
resultcode
onactivityresult
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
одиночный
множественный
выбор
listview
поиск
полный
список
в
уроке
используем
список
listview
одиночного
множественного
выбора
элементов
бывает
необходимость
предоставить
пользователю
возможность
выбрать
несколько
элементов
списка
давайте
посмотрим
это
реализовать
создадим
проект
project
name
target
android
name
simplelistchoicepackage
name
activity
mainactivity
нарисуем
экран
mainxml
checked
список
lvmain
кнопка
btnchecked
нажатию
которую
будем
выводить
лог
отмеченные
списке
элементы
предлагаю
вспомнить
файлы
ресурсов
можем
использовать
найдем
нашем
проекте
файл
ресурсами
добавим
туда
массив
строк
именами
в
итоге
получился
файл
таким
содержимым
world
из
списка
будем
получать
массив
имен
это
удобнее
правильнее
перечислять
элементы
массива
javaкоде
кодим
mainactivityjava
package
import
androidappactivity
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetarrayadapter
import
androidwidgetbutton
import
androidwidgetlistview
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
listview
lvmain
names
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
lvmain
listview
findviewbyidridlvmain
устанавливаем
режим
выбора
пунктов
списка
создаем
адаптер
используя
массив
файла
ресурсов
adapter
arrayadaptercreatefromresource
rarraynames
lvmainsetadapteradapter
button
btnchecked
button
findviewbyidridbtnchecked
btncheckedsetonclicklistenerthis
получаем
массив
файла
ресурсов
names
getresourcesgetstringarrayrarraynames
public
void
onclickview
пишем
лог
выделенный
элемент
мы
устанавливаем
списка
режим
выбора
это
значит
список
хранить
позицию
последнего
нажатого
пункта
можем
запросить
информацию
далее
создаем
адаптер
обычный
конструктор
использованием
метода
параметры
вход
те
обычном
конструкторе
вместо
массива
данных
указываем
массив
строк
ресурсах
который
создали
раньше
в
качестве
layoutресурса
пунктов
используем
системный
он
заточен
такое
использование
далее
находим
кнопку
btnchecked
присваиваем
activity
качестве
обработчика
и
конце
считываем
наш
массив
имен
файларесурса
массив
строк
в
обработчике
нажатия
кнопки
выводим
лог
имя
массива
в
качестве
индекса
используем
позицию
пункта
списке
последовательность
элементов
массиве
списке
совпадают
все
сохраняем
запускаем
видим
список
выделяем
какойнить
пункт
жмем
кнопку
get
checked
items
смотрим
лог
checked
даша
все
верно
теперь
изменим
код
программы
получим
список
множественным
выбором
устанавливаем
режим
выбора
пунктов
списка
создаем
адаптер
используя
массив
файла
ресурсов
adapter
arrayadaptercreatefromresource
rarraynames
мы
заменили
список
хранить
позиции
выделенных
элементов
также
заменили
пункты
списка
будут
позволять
множественный
выбор
метод
onclick
перепишем
следующим
образом
public
void
onclickview
пишем
лог
выделенные
элементы
sparsebooleanarray
sbarray
lvmaingetcheckeditempositions
int
sbarraysize
int
key
sbarraykeyati
sbarraygetkey
мы
получаем
позиции
выделенных
элементов
виде
объекта
он
представляет
собой
mapint
boolean
ключ
int
это
позиция
элемента
значение
boolean
это
выделен
пункт
списка
причем
sparsebooleanarray
хранит
инфу
пунктах
тех
которыми
проводили
действие
выделяли
снимали
выделение
мы
перебираем
содержимое
получаем
позицию
пункта
пункт
выделен
выводим
лог
имя
массива
соответствующее
позиции
пункта
все
сохраняем
запускаем
приложение
выделяем
несколько
элементов
жмем
кнопку
get
checked
items
смотрим
лог
checkedмарьяантонкостя
что
выделили
нам
список
вернул
как
видим
отличие
обычного
списка
списка
возможностью
выделения
пунктов
заключается
разных
режимах
choicemode
использовании
разных
layoutресурсов
пунктов
списка
кстати
снова
видим
нужен
context
создании
адаптера
без
адаптер
смог
добраться
файла
ресурсов
метода
getresources
адаптера
использует
указанный
контекст
который
содержит
метод
на
следующем
уроке
рассматриваем
события
listview
нажатие
onitemclick
выделение
onitemselect
прокрутка
onscroll
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
dagger
use
dependency
injection
pattern
projects
enables
dagger
library
partially
takes
care
patterns
implementation
therefore
simplifies
developers
effort
helps
bring
amount
written
code
sounds
tempting
doesnt
nothing
simple
seems
dagger
fact
difficult
use
training
courses
topic
understandable
clearly
outlined
decided
create
training
course
exploring
dagger
looked
materials
various
sources
single
one
provided
complete
information
moreover
wasted
lot
time
create
test
project
experiments
order
get
bottom
topic
realized
need
develop
training
course
broke
information
collected
four
lessons
also
supplied
reallife
examples
expected
spend
one
hour
one
lesson
lessons
developed
startandroidru
style
everything
easy
understand
broken
steps
available
lessons
moment
full
course
available
registration
payment
cost
course
questions
please
contact
startofandroid
gmailcom
lesson
additional
features
second
lesson
covers
additional
features
lazy
provider
named
qualifier
intoset
elementsintoset
intomap
inject
lesson
subcomponent
scope
third
lesson
find
subcomponent
set
object
lifecycle
using
scope
lesson
producedin
fourth
lesson
explore
asynchronous
dagger
mechanisms
productioncomponent
producermodule
produces
producer
also
look
process
error
processing
using
produced
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
меняем
layoutparams
рабочем
приложении
поиск
полный
список
в
уроке
изменяем
layoutпараметры
существующих
компонентов
экрана
мы
умеем
создавать
экранные
компоненты
настраивать
расположение
помощью
layoutparams
в
уроке
разберемся
изменять
layoutпараметры
существующих
компонентов
менять
будем
вес
weight
нарисуем
seekbar
регулятор
ползунок
две
кнопки
и
будем
регулировать
пространство
занимаемое
кнопками
используя
параметр
веса
создадим
проект
project
name
build
target
android
application
name
package
name
create
activity
mainactivity
открываем
mainxml
создаем
экран
мы
используем
компонент
seekbar
он
похож
полосу
прокрутки
позволяет
задавать
какоелибо
значение
диапазона
у
компонента
свойства
max
progress
max
это
какое
значение
выдает
seekbar
выкручен
максимум
progress
это
текущее
значение
ползунка
максимум
сделаем
текущее
значение
половине
кнопки
шириной
содержимому
вес
обоих
они
поровну
делят
пространство
linearlayout
котором
находятся
осталось
написать
нужный
код
заработало
открываем
mainactivityjava
опишем
найдем
компоненты
получим
доступ
layoutparams
public
class
mainactivity
extends
activity
seekbar
sbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
мы
используем
метод
получения
layoutparams
компонента
но
метод
возвращает
базовый
viewgrouplayoutparams
нам
нужен
linearlayoutlayoutparams
поэтому
делаем
преобразование
в
результате
являются
layoutparams
компонентов
те
работая
например
влияем
сейчас
это
используем
для
seekbar
нужен
обработчик
который
реагировать
изменения
это
поручим
activity
для
добавить
описанию
класса
implements
onseekbarchangelistener
public
class
mainactivity
extends
activity
implements
onseekbarchangelistener
а
также
добавить
методы
обработчика
которые
обязана
реализовывать
activity
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
public
void
onstarttrackingtouchseekbar
seekbar
public
void
onstoptrackingtouchseekbar
seekbar
обработчик
содержит
метода
из
названий
понятно
срабатывает
начинаем
тащить
ползунок
срабатывает
время
пока
значение
меняется
срабатывает
отпускаем
ползунок
мы
будем
использовать
метод
onprogresschanged
так
изменения
будут
видны
время
перетаскивания
ползунка
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
int
leftvalue
progress
int
rightvalue
seekbargetmax
progress
настраиваем
вес
leftvalue
rightvalue
текст
кнопок
пишем
значения
переменных
переменная
leftvalue
текущее
значение
seekbar
те
слева
ползунка
переменная
rightvalue
справа
ползунка
те
максимума
вычесть
текущее
значение
соответственно
значения
используем
вес
чем
ползунок
левее
меньше
leftvalue
rightvalue
значит
меньше
ширина
ширина
и
наоборот
также
наглядности
текст
кнопок
будем
записывать
значения
переменных
ну
забываем
обработчик
activity
присвоить
viewкомпоненту
события
которого
необходимо
обрабатывать
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
sbweightsetonseekbarchangelistenerthis
button
обратите
внимание
я
ввожу
новый
прием
подачи
кода
то
подчеркнуто
это
новый
код
обычный
шрифт
существующий
код
вам
найти
существующий
код
дописать
нему
новый
получился
фрагмент
все
сохраним
запустим
приложение
перетаскивая
ползунок
меняем
размеры
кнопок
выглядит
эффектно
считаю
и
кода
несколько
строк
есть
небольшой
нюанс
как
верно
заметили
каментах
просто
написать
код
компонент
изменится
необходимо
дописать
код
тогда
кнопка
прочтет
layout
перерисуется
этот
метод
вызывается
settext
поэтому
явно
вызываем
теперь
знаем
достаточно
следующих
уроках
попробуем
написать
первое
осмысленное
приложение
калькулятор
полный
код
урока
public
class
mainactivity
extends
activity
implements
onseekbarchangelistener
seekbar
sbweight
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
sbweight
seekbar
findviewbyidridsbweight
sbweightsetonseekbarchangelistenerthis
button
button
linearlayoutlayoutparams
linearlayoutlayoutparams
public
void
onprogresschangedseekbar
seekbar
int
progress
boolean
fromuser
int
leftvalue
progress
int
rightvalue
seekbargetmax
progress
настраиваем
вес
leftvalue
rightvalue
текст
кнопок
пишем
значения
переменных
public
void
onstarttrackingtouchseekbar
seekbar
public
void
onstoptrackingtouchseekbar
seekbar
на
следующем
уроке
пишем
приложение
калькулятор
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
создание
viewкомпонент
рабочем
приложении
поиск
полный
список
в
уроке
добавляем
компоненты
экран
прямо
приложения
на
прошлом
уроке
создавали
компоненты
методе
activityoncreate
те
создании
приложения
на
уроке
будем
создавать
работающем
приложении
создавать
будем
buttonы
тк
наглядней
отображаются
будем
указывать
текст
который
отображен
кнопке
выравнивание
слева
центру
справа
также
предусмотрим
возможность
удаления
созданных
элементов
создадим
проект
project
name
target
android
name
name
activity
mainactivity
создадим
экран
который
поможет
нам
создавать
viewкомпоненты
открываем
mainxml
пишем
следующее
рассмотрим
подробно
экран
rggravity
это
radiogroup
тремя
radiobutton
rbleft
rbcenter
rbright
этот
компонент
используем
выбора
выравнивания
создаваемого
компонентаetname
текстовое
поле
будем
указывать
текст
который
отображаться
созданном
компонентеbtncreate
кнопка
запускающая
процесс
созданияbtnclear
кнопка
стирающая
создалиllmain
вертикальный
linearlayout
котором
будут
создаваться
компоненты
экран
готов
давайте
кодить
реализацию
открываем
mainactivityjava
начнем
опишем
найдем
необходимые
нам
компоненты
кстати
пара
кнопок
которые
будем
использовать
значит
нужен
обработчик
в
качестве
обработчика
назначим
activity
те
необходимо
дописать
implements
onclicklistener
создадим
пустой
пока
метод
обработки
onclick
public
class
mainactivity
extends
activity
implements
linearlayout
llmain
radiogroup
rggravity
edittext
etname
button
btncreate
button
btnclear
int
wrapcontent
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
llmain
linearlayout
findviewbyidridllmain
rggravity
radiogroup
findviewbyidridrggravity
etname
edittext
findviewbyidridetname
btncreate
button
findviewbyidridbtncreate
btncreatesetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
я
также
создал
переменную
wrapcontent
буду
хранить
значение
делаю
это
снижения
громоздкости
кода
теперь
опишем
процесс
создания
buttonкомпонента
заполнив
метод
onclick
public
void
onclickview
v
switch
vgetid
case
ridbtncreate
создание
layoutparams
c
шириной
высотой
содержимому
linearlayoutlayoutparams
lparams
new
linearlayoutlayoutparams
wrapcontent
wrapcontent
переменная
хранения
значения
выравнивания
умолчанию
пусть
left
int
btngravity
gravityleft
определяем
radiobutton
соответственно
заполняем
btngravity
switch
rggravitygetcheckedradiobuttonid
case
ridrbleft
btngravity
gravityleft
break
case
ridrbcenter
btngravity
break
case
ridrbright
btngravity
gravityright
break
переносим
полученное
значение
выравнивания
layoutparams
lparamsgravity
btngravity
создаем
button
пишем
текст
добавляем
linearlayout
button
btnnew
new
buttonthis
btnnewsettextetnamegettexttostring
llmainaddviewbtnnew
lparams
break
разберем
написанное
для
начала
проверяем
нажата
кнопка
btncreate
те
кнопка
создания
затем
создаем
layoutparams
высотой
шириной
содержанию
здесь
использовал
переменную
которую
писал
выше
wrapcontent
иначе
получилось
довольно
громоздко
далее
создаем
переменную
btngravity
которую
умолчанию
запишем
значение
выравнивания
left
для
определения
radiobutton
выделен
данный
момент
используем
метод
getcheckedradiobuttonid
radiogroup
возвращает
id
чекнутого
radiobuttonа
мы
сравниваем
нашими
тремя
id
заносим
соответствующее
значение
переменную
btngravity
скидываем
это
значение
gravity
layoutparams
далее
создаем
кнопку
присваиваем
текст
etname
обратите
внимание
недостаточно
написать
gettext
тк
это
даст
текста
необходимо
вызвать
метод
tostring
ну
конце
добавляем
созданный
button
наш
linearlayout
сохраним
запустим
приложение
добавим
несколько
кнопок
кнопки
должны
появляться
указанным
выравниванием
текстом
когда
вводите
текст
снизу
появляется
клавиатура
закрывает
обзор
чтобы
исчезла
нажать
кнопку
back
назад
эмуляторе
esc
обычной
клавиатуре
если
клавиатура
появляется
японская
иероглифами
вызовите
контекстное
меню
поля
ввода
долгое
нажатие
левой
кнопкой
мыши
нажмите
input
method
выберите
списка
android
keyboard
осталось
нереализованной
кнопка
clear
которая
призвана
удалять
созданное
для
нам
необходимо
дополнить
метод
onclick
добавим
case
case
ridbtnclear
llmainremoveallviews
toastmaketextthis
break
метод
removeallviews
удаляет
дочерние
viewкомпоненты
нашего
linearlayout
с
помощью
toast
выводим
экран
сообщение
успехе
сохраним
запустим
проверим
добавляем
несколько
кнопок
жмем
кнопку
clear
наблюдаем
результат
в
итоге
получилось
очень
динамическое
приложение
которое
умеет
менять
само
на
форуме
задают
вопрос
получить
доступ
этим
созданным
компонентам
тут
пара
простых
вариантов
при
создании
можете
сами
присваивать
компонентам
id
это
делается
методом
вы
можете
сохранять
созданные
компоненты
свой
массив
список
либо
можете
воспользоваться
методом
вызов
метода
llmain
позволит
получить
дочерние
компоненты
индексу
получить
колво
дочерних
элементов
позволит
метод
полный
код
урока
public
class
mainactivity
extends
activity
implements
onclicklistener
linearlayout
llmain
radiogroup
rggravity
edittext
etname
button
btncreate
button
btnclear
int
wrapcontent
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
llmain
linearlayout
findviewbyidridllmain
rggravity
radiogroup
findviewbyidridrggravity
etname
edittext
findviewbyidridetname
btncreate
button
findviewbyidridbtncreate
btncreatesetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtncreate
создание
layoutparams
c
шириной
высотой
содержимому
linearlayoutlayoutparams
lparams
new
linearlayoutlayoutparams
wrapcontent
wrapcontent
переменная
хранения
значения
выравнивания
умолчанию
пусть
left
int
btngravity
gravityleft
определяем
radiobutton
соответственно
заполняем
btngravity
switch
rggravitygetcheckedradiobuttonid
case
ridrbleft
btngravity
gravityleft
break
case
ridrbcenter
btngravity
break
case
ridrbright
btngravity
gravityright
break
переносим
полученное
значение
выравнивания
layoutparams
lparamsgravity
btngravity
создаем
button
пишем
текст
добавляем
linearlayout
button
btnnew
new
buttonthis
btnnewsettextetnamegettexttostring
llmainaddviewbtnnew
lparams
break
case
ridbtnclear
llmainremoveallviews
toastmaketextthis
break
на
следующем
уроке
изменяем
layoutпараметры
существующих
компонентов
экрана
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
layout
programmatically
layoutparams
lessons
lesson
create
layout
programmatically
using
layoutfiles
translated
taras
leskiv
moment
creating
screens
using
layoutfiles
programmatically
create
project
project
name
build
target
android
application
name
dynamiclayout
package
name
rustartandroiddevelopdinamiclayout
create
activity
mainactivity
open
mainactivityjava
pay
attention
following
line
setcontentviewrlayoutmain
recall
line
specify
activity
use
layoutfile
mainxml
screen
different
implementation
method
takes
parameter
layoutfile
viewelement
makes
root
element
layoutfiles
root
element
usually
linearlayout
use
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
creating
linearlayout
linearlayout
linlayout
new
linearlayoutthis
specifying
vertical
orientation
linlayoutsetorientationlinearlayoutvertical
creating
layoutparams
layoutparams
linlayoutparam
new
set
linearlayout
root
element
screen
setcontentviewlinlayout
linlayoutparam
update
imports
eclipse
ask
exactly
layoutparams
want
use
explore
detail
recall
theory
screens
screen
viewgroup
view
elements
inside
viewgroup
classes
already
familiar
linearlayout
tablelayout
relativelayout
others
every
viewgroup
classes
base
class
layoutparams
viewgrouplayoutparams
two
attributes
height
width
subclass
inherits
two
attributes
four
bottommargin
leftmargin
rightmargin
topmargin
class
byturn
subclass
viewgroupmarginlayoutparams
inherits
already
attributes
adds
two
gravity
weight
linearlayout
object
inner
class
linearlayoutlayoutparams
layoutattributes
attributes
distributed
child
views
viewgroups
view
inside
linearlayout
one
set
layoutparameters
view
relativelayout
different
mutual
elements
viewgroups
parents
return
eclipse
still
awaits
choice
use
viewgrouplayoutparams
base
class
look
throught
code
create
linearlayout
specify
vertical
orientation
create
layoutparams
constructor
takes
two
parameters
width
height
set
method
invoked
linearlayout
layoutparams
passed
parameters
means
linearlayout
layoutattributes
layoutparams
root
element
run
application
see
nothing
linearlayout
transparent
start
adding
viewcomponents
linearlayout
layoutparams
lpview
new
textview
tv
new
textviewthis
tvsetlayoutparamslpview
linlayoutaddviewtv
button
btn
new
buttonthis
linlayoutaddviewbtn
lpview
create
layoutparams
object
width
height
attributes
assign
object
one
views
view
width
height
defined
content
create
textview
update
text
set
previously
created
layoutparams
object
add
linearlayout
using
method
button
create
update
text
use
another
implementation
method
simultaneously
adds
button
linearlayout
sets
button
specified
layoutparams
result
textview
instead
two
lines
code
use
one
note
two
view
objects
used
one
layoutparams
object
lpview
change
properties
objects
views
change
correspondingly
save
launch
application
see
components
appeared
screen
see
height
width
defined
content
lpview
object
basic
type
androidviewviewgrouplayoutparams
means
allow
configure
width
height
view
linearlayout
example
left
margin
aligning
right
edge
available
want
apply
need
use
linearlayoutlayoutparams
linearlayoutlayoutparams
leftmarginparams
new
linearlayoutlayoutparams
leftmarginparamsleftmargin
button
new
buttonthis
leftmarginparams
look
code
create
object
linearlayoutlayoutparams
type
using
constructor
common
layoutparams
specifying
width
height
specify
left
margin
margin
specified
pixels
algorithm
create
object
update
text
add
linearlayout
setting
layoutparams
analogically
add
component
alignment
linearlayoutlayoutparams
rightgravityparams
new
linearlayoutlayoutparams
rightgravityparamsgravity
gravityright
button
new
buttonthis
rightgravityparams
save
launch
margin
aligned
right
edge
likely
topic
absolutely
clear
first
following
two
lessons
revise
knowledge
practice
adding
elements
screen
configuring
complete
lesson
code
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
creating
linearlayout
linearlayout
linlayout
new
linearlayoutthis
specifying
vertical
orientation
linlayoutsetorientationlinearlayoutvertical
creating
layoutparams
layoutparams
linlayoutparam
new
set
linearlayout
root
element
screen
setcontentviewlinlayout
linlayoutparam
layoutparams
lpview
new
textview
tv
new
textviewthis
tvsetlayoutparamslpview
linlayoutaddviewtv
button
btn
new
buttonthis
linlayoutaddviewbtn
lpview
linearlayoutlayoutparams
leftmarginparams
new
linearlayoutlayoutparams
leftmarginparamsleftmargin
button
new
buttonthis
leftmarginparams
linearlayoutlayoutparams
rightgravityparams
new
linearlayoutlayoutparams
rightgravityparamsgravity
gravityright
button
new
buttonthis
rightgravityparams
next
lesson
add
components
screen
application
running
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
list
layoutinflater
lessons
lesson
making
list
option
last
lesson
found
usage
layoutinflater
class
made
little
example
within
studied
detail
inflate
method
parameters
consolidate
skills
make
complex
example
make
list
analogue
first
come
data
let
one
time
staffing
table
names
positions
salary
ie
every
list
item
contain
tree
textviews
name
position
salary
place
items
form
vertical
list
need
two
layout
files
implementationmainxml
mainactivity
layout
use
container
list
itemsitemxml
list
item
layout
application
parse
three
data
arrays
parallel
create
view
itemxml
array
item
fill
data
add
vertical
linearlayout
mainxml
create
project
project
name
target
android
name
layoutinflaterlistpackage
name
activity
mainactivity
mainxml
scrollview
let
us
scroll
list
case
fit
screen
add
items
linearlayout
itemxml
framelayout
three
textviews
code
mainactivityjava
package
import
androidappactivity
import
androidgraphicscolor
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgrouplayoutparams
import
androidwidgetlinearlayout
import
androidwidgettextview
public
class
mainactivity
extends
activity
name
position
int
colors
new
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
linearlayout
linlayout
linearlayout
findviewbyidridlinlayout
layoutinflater
ltinflater
getlayoutinflater
int
namelength
view
item
ltinflaterinflaterlayoutitem
linlayout
false
textview
tvname
textview
itemfindviewbyidridtvname
textview
tvposition
textview
itemfindviewbyidridtvposition
textview
tvsalary
textview
itemfindviewbyidridtvsalary
itemgetlayoutparamswidth
linlayoutaddviewitem
much
code
make
simple
list
start
loop
number
elements
data
arrays
create
view
item
itemxml
within
every
iteration
case
item
framelayout
contains
three
textviews
find
item
created
fill
data
arrays
specified
root
linlayout
inflate
method
get
layoutparams
use
width
adjustment
also
clarity
color
items
method
note
specified
third
parameter
inflate
false
ie
immediately
add
generated
viewelement
linlayout
end
code
addview
methodthis
explanation
case
specified
true
method
would
add
item
linlayout
return
linlayout
common
list
items
would
difficult
fill
textview
data
need
linlayout
get
item
fill
textview
data
put
items
linlayout
addview
method
save
launch
list
displayed
scrolling
works
lesson
turned
short
useful
case
want
note
yet
classic
androidlist
called
list
example
make
understanding
list
creation
much
easier
principle
similar
similarly
provide
data
array
item
layout
list
creation
next
lesson
next
lesson
building
list
using
listview
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
блог
поиск
блог
в
статье
рассмотрим
такое
instant
app
нужен
создать
такое
приложение
в
подробно
описал
процесс
поиска
работы
берлине
в
течение
процесса
сталкивался
вопросами
алгоритмическими
задачками
code
challenge
в
посте
распишу
свой
опыт
деле
в
прошлом
году
довелось
искать
работу
европейской
компании
позицию
senior
android
developer
я
хотел
поделиться
своим
опытом
подробно
описал
весь
процесс
разработчику
найти
работу
европе
примере
германии
в
статье
буду
собирать
интересные
полезные
решения
которые
реализованы
помощью
rxjava
это
будут
решения
моей
практики
различных
статей
книг
если
поделиться
какието
вопросы
пишите
наш
telegramm
операционная
система
android
устроена
таким
образом
выполнения
некоторых
операций
доступа
определенным
ресурсам
приложение
должно
иметь
разрешение
это
продолжаем
говорить
retrofit
посмотрим
можем
настроить
нем
достичь
своих
целей
retrofit
популярная
удобная
библиотека
которая
используется
приложению
необходимо
работать
сервером
в
статье
очень
простом
примере
рассмотрю
основы
работы
в
новой
версии
беты
constraintlayout
появились
circular
constraints
с
помощью
можем
настроить
view
одно
находилось
определенном
расстоянии
определенным
углом
другого
на
картинке
view
b
находится
углом
определенном
расстоянии
view
в
нашем
проскакивает
следующий
вопрос
как
правильно
обновлять
данные
списке
спрашивающий
обычно
подразумевает
варианта
передавать
новые
данные
адаптер
вызывать
метод
notifydatasetchanged
рефрешнуть
создавать
новый
адаптер
давать
новые
данные
передавать
адаптер
recyclerviewsetadapter
оба
этих
варианта
являются
правильными
хотя
технически
вполне
рабочие
не
давно
делал
gradle
использовать
переменные
версий
библиотек
в
посте
хотел
развить
тему
предложить
удобное
решение
мне
довелось
побывать
android
конференции
droidcon
berlin
в
посте
хотел
описать
свои
впечатления
рассказать
организовано
при
использовании
какойлибо
библиотеки
часто
приходится
добавлять
dependencies
несколько
частей
всем
прописывать
одну
ту
версию
самый
распространенный
пример
android
support
library
обычно
код
dependencies
выглядит
support
library
compile
compile
compile
gradle
позволяет
избавиться
копипасты
в
посте
описывается
несложный
пример
mvp
использования
запутывающих
интерфейсов
сложных
библиотек
страница
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
вызываем
activity
получаем
результат
метод
startactivityforresult
поиск
полный
список
в
уроке
вызываем
activity
возвратом
результата
бывает
необходимость
вызвать
activity
выполнить
нем
какоелибо
действие
вернуться
результатом
например
создании
sms
вы
жмете
кнопку
добавить
адресата
система
показывает
экран
списком
адресной
книги
выбираете
нужного
абонента
возвращаетесь
экран
создания
sms
те
вызвали
экран
выбора
абонента
вернул
вашему
экрану
результат
об
почитать
давайте
посмотрим
практике
создадим
приложение
двумя
экранами
с
первого
экрана
будем
вызывать
второй
экран
вводить
данные
нажимать
кнопку
возвращаться
первый
экран
введенными
данными
например
будем
таким
образом
запрашивать
имя
создадим
проект
project
name
build
target
android
application
name
simpleactivityresult
package
name
create
activity
mainactivity
открываем
mainxml
нарисуем
экран
name
на
экране
textview
который
отображать
имя
кнопка
которая
вызывать
экран
ввода
кодим
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgettextview
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvname
button
btnname
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvname
textview
findviewbyidridtvname
btnname
button
findviewbyidridbtnname
btnnamesetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intentthis
nameactivityclass
startactivityforresultintent
protected
void
onactivityresultint
requestcode
int
resultcode
intent
data
data
null
string
name
name
name
определяем
textview
кнопку
настраиваем
обработчик
в
методе
обработчика
onclick
создаем
intent
указываем
класс
второго
acivity
которое
создадим
позже
ошибку
обращайте
внимания
для
отправки
используем
отличие
обычного
startactivity
mainactivity
становится
родителем
nameactivity
и
nameactivity
закрывается
вызывается
метод
mainactivity
самым
давая
нам
знать
закрылось
activity
которое
вызывали
методом
startactivityforresult
в
startactivityforresult
качестве
параметров
передаем
intent
requestcode
requestcode
необходим
идентификации
в
уроке
укажем
будем
использовать
назначению
в
следующем
уроке
разберемся
подробнее
нужен
в
onactivityresult
видим
следующие
параметры
requestcode
идентификатор
startactivityforresult
по
нему
определяем
какого
activity
пришел
результат
resultcode
код
возврата
определяет
успешно
прошел
вызов
data
intent
котором
возвращаются
данные
requestcode
resultcode
пока
использовать
будем
подробнее
рассмотрим
следующем
уроке
а
data
будем
получать
объект
имени
name
выводить
значение
textview
если
извлекаем
intent
объект
именем
name
значит
ктото
туда
положил
этим
займется
nameactivity
создадим
экран
namexml
в
поле
ввода
будем
вводить
имя
жать
кнопку
ok
создаем
класс
nameactivity
прописываем
манифесте
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
nameactivity
extends
activity
implements
onclicklistener
edittext
etname
button
btnok
protected
void
oncreatebundle
savedinstancestate
todo
autogenerated
method
stub
superoncreatesavedinstancestate
setcontentviewrlayoutname
etname
edittext
findviewbyidridetname
btnok
button
findviewbyidridbtnok
btnoksetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intent
etnamegettexttostring
intent
finish
определяем
поле
ввода
кнопку
прописываем
обработчик
в
методе
onclick
создаем
intent
помещаем
данные
поля
ввода
именем
name
обратите
внимание
никак
адресуем
intent
те
класс
action
указываем
и
получается
непонятно
пойдет
intent
но
метод
знает
адресовать
родительское
activity
котором
вызван
метод
startactivityforresult
также
setresult
передаем
константу
означающую
успешное
завершение
вызова
и
именно
передастся
параметр
resultcode
метода
onactivityresult
mainactivityjava
это
подробнее
разберем
следующем
уроке
далее
методом
finish
завершаем
работу
nameactivity
результат
ушел
mainactivity
все
сохраним
запустим
приложение
видим
первый
экран
жмем
кнопку
попасть
экран
ввода
имени
вводим
имя
жмем
ок
снова
первый
экран
отобразивший
полученные
данные
попробуем
подытожить
в
mainactivity
создали
intent
явным
указанием
класс
nameactivity
запустили
intent
помощью
метода
startactivityforresult
nameactivity
отобразилось
ввели
имя
нажали
кнопку
создался
intent
который
поместилось
введенное
нами
имя
метод
setresult
знает
intent
вернуть
activity
которое
выполнило
вызов
startactivityforresult
те
mainactivity
в
mainactivity
прием
результатов
вызванных
activity
отвечает
метод
onactivityresult
в
нем
распаковали
intent
отобразили
полученные
данные
textview
пока
необходимо
просто
понять
схему
вызова
возврата
на
следующем
уроке
сделаем
расширенный
показательный
пример
использования
технологии
на
следующем
уроке
разбираемся
нужны
requestcode
resultcode
onactivityresult
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
программное
создание
экрана
layoutparams
поиск
полный
список
в
уроке
рисуем
экран
программно
layoutфайл
до
создавали
экран
помощью
layoutфайлов
но
самое
можем
делать
программно
создадим
проект
project
name
build
target
android
application
name
dynamiclayout
package
name
rustartandroiddevelopdinamiclayout
create
activity
mainactivity
открываем
mainactivityjava
обратим
внимание
строку
setcontentviewrlayoutmain
напомню
строке
указываем
activity
качестве
экрана
использовать
layoutфайл
mainxml
есть
другая
реализация
метода
которая
вход
принимает
layoutфайл
viewэлемент
делает
корневым
в
layoutфайлах
корневой
элемент
обычно
linearlayout
используем
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
создание
linearlayout
linearlayout
linlayout
new
linearlayoutthis
установим
вертикальную
ориентацию
linlayoutsetorientationlinearlayoutvertical
создаем
layoutparams
layoutparams
linlayoutparam
new
устанавливаем
linlayout
корневой
элемент
экрана
setcontentviewlinlayout
linlayoutparam
обновим
импорт
eclipse
предложит
нам
выбрать
именно
layoutparams
будем
использовать
тут
остановиться
подробнее
вспомним
теорию
экраны
экран
viewgroup
вложенных
view
известные
нам
примеры
viewgroup
это
linearlayout
tablelayout
relativelayout
тд
каждая
этих
viewgroup
базовым
этих
layoutparams
является
viewgrouplayoutparams
имеет
атрибута
height
width
его
подкласс
наследует
этих
атрибута
имеет
свои
четыре
bottommargin
leftmargin
rightmargin
topmargin
класс
очередь
является
подклассом
viewgroupmarginlayoutparams
наследует
аттрибутов
добавляет
свои
gravity
weight
те
объект
linearlayout
имеет
вложенный
класс
linearlayoutlayoutparams
layoutаттрибутами
и
аттрибуты
распространяются
дочерние
view
viewgroup
те
view
находящаяся
linearlayout
имеет
набор
layoutпараметров
view
relativelayout
есть
общие
элементы
тк
родители
этих
viewgroup
одни
вернемся
eclipse
ждет
нашего
выбора
используем
базовый
класс
viewgrouplayoutparams
давайте
разберем
код
мы
создаем
linearlayout
ставим
вертикальную
ориентацию
далее
создаем
layoutparams
конструктор
вход
принимает
параметра
width
height
мы
оба
ставим
далее
вызывается
метод
на
вход
подается
linearlayout
layoutparams
это
означает
корневым
элементом
activity
linearlayout
layoutсвойствами
layoutparams
если
запустим
приложение
увидим
тк
linearlayout
прозрачен
давайте
добавлять
linearlayout
viewкомпоненты
layoutparams
lpview
new
textview
tv
new
textviewthis
tvsetlayoutparamslpview
linlayoutaddviewtv
button
btn
new
buttonthis
linlayoutaddviewbtn
lpview
мы
снова
создаем
объект
layoutparams
атрибутами
width
height
теперь
присвоим
объект
какомулибо
view
это
view
иметь
ширину
высоту
содержимому
далее
создаем
textview
настраиваем
текст
присваиваем
выше
созданный
layoutparams
добавляем
linearlayout
помощью
метода
с
button
аналогично
создаем
правим
текст
затем
используем
другую
реализацию
метода
которая
одновременно
добавляет
button
linearlayout
присваивает
button
указанный
layoutparams
результат
textview
вместо
двух
строк
кода
получилась
одна
обратите
внимание
двух
объектов
view
использовал
объект
layoutparams
lpview
оба
viewобъекта
считают
параметры
layoutparams
используют
сохраним
запустим
приложение
видим
компоненты
экране
появились
и
видно
высота
ширина
определена
содержимому
объект
lpview
имеет
базовый
тип
androidviewviewgrouplayoutparams
а
значит
позволит
настроить
ширину
высоту
но
view
linearlayout
доступны
например
отступ
слева
выравнивание
правому
краю
и
хотим
задействовать
значит
использовать
linearlayoutlayoutparams
linearlayoutlayoutparams
leftmarginparams
new
linearlayoutlayoutparams
leftmarginparamsleftmargin
button
new
buttonthis
leftmarginparams
смотрим
код
мы
создаем
объект
типа
linearlayoutlayoutparams
помощью
такого
конструктора
обычного
layoutparams
указывая
width
height
затем
указываем
отступ
слева
отступ
указывается
пикселах
далее
схема
та
создаем
объект
настраиваем
текст
добавляем
linearlayout
c
присвоением
layoutparams
аналогично
добавим
компонент
выравниванием
linearlayoutlayoutparams
rightgravityparams
new
linearlayoutlayoutparams
rightgravityparamsgravity
gravityright
button
new
buttonthis
rightgravityparams
сохраним
запустим
имеет
отступ
а
выравнена
правому
краю
вероятно
эта
тема
очень
понятна
первого
раза
поэтому
следующих
двух
уроках
закрепим
знания
попрактикуемся
добавлении
элементов
экран
настройке
полный
код
урока
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
создание
linearlayout
linearlayout
linlayout
new
linearlayoutthis
установим
вертикальную
ориентацию
linlayoutsetorientationlinearlayoutvertical
создаем
layoutparams
layoutparams
linlayoutparam
new
устанавливаем
linlayout
корневой
элемент
экрана
setcontentviewlinlayout
linlayoutparam
layoutparams
lpview
new
textview
tv
new
textviewthis
tvsetlayoutparamslpview
linlayoutaddviewtv
button
btn
new
buttonthis
linlayoutaddviewbtn
lpview
linearlayoutlayoutparams
leftmarginparams
new
linearlayoutlayoutparams
leftmarginparamsleftmargin
button
new
buttonthis
leftmarginparams
linearlayoutlayoutparams
rightgravityparams
new
linearlayoutlayoutparams
rightgravityparamsgravity
gravityright
button
new
buttonthis
rightgravityparams
на
следующем
уроке
добавляем
компоненты
экран
время
работы
приложения
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
реклама
поиск
информация
размещении
рекламы
сайте
startandroidru
соц
сетях
возможно
платное
размещение
рекламных
постов
телеграм
канале
не
путать
телеграм
группой
дополнительно
размещению
телеграм
канале
пост
продублирован
группе
вконтакте
странице
фейсбук
пост
должен
релевантным
допустимы
темы
android
kotlin
java
алгоритмы
ооп
solid
прочие
темы
области
программирования
полезные
темы
напрямую
относящиеся
программированию
также
возможны
например
английский
язык
google
play
console
тп
недопустимы
публикации
криптовалюты
блокчейн
коронавирус
азартные
игры
ставки
подобные
токсичные
темы
в
день
размещения
вашего
рекламного
поста
весь
следующий
день
никаких
других
постов
те
ваш
пост
провисит
топе
двое
суток
пост
остается
ленте
навсегда
удален
в
конце
поста
добавлен
тег
возможно
размещение
одного
рекламного
поста
неделю
поэтому
пишите
заранее
узнать
свободна
неделя
нужная
иногда
бывает
расписано
вперед
недель
если
нужны
какиелибо
статистические
данные
вашим
публикациям
пишите
поделюсь
всем
доступно
стоимость
публикаций
телеграм
канале
привязана
числу
подписчиков
канала
составляет
рублей
торг
уместен
небольшая
скидка
заказе
размещение
нескольких
постов
обсуждается
индивидуально
стоимость
другие
соц
сети
рублей
вк
рублей
фб
возможно
аналогичной
публикации
телеграм
канале
не
принимаю
участие
бесплатном
информационном
партнерстве
взаимопиарах
не
размещаю
сайте
рекламные
ссылки
статьи
баннеры
telegram
при
возникновении
какихлибо
вопросов
используйте
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
layout
elements
properties
lessons
look
screen
content
composed
android
applications
translated
taras
leskiv
compare
windows
application
consists
windows
called
activities
usually
one
activity
displayed
time
occupies
whole
screen
application
switches
activities
explore
mail
app
example
one
activity
displays
list
messages
second
one
displays
specific
message
third
one
mailbox
settings
working
mail
switch
activities
content
activity
composed
different
components
called
views
widely
used
views
buttons
text
input
fields
checkboxes
etc
displayed
approximately
like
note
view
usually
situated
viewgroup
common
example
viewgroup
layout
layouts
different
types
responsible
placing
child
elements
views
screen
table
row
column
read
detail
help
sure
already
confused
new
words
terms
review
practice
create
project
following
properties
project
name
targetapplication
namepackage
namecreate
activity
layoutfile
file
define
set
view
elements
want
see
screen
location
application
starts
activity
reads
file
displays
us
configured
open
look
view
set
contain
default
left
see
list
views
divided
groups
see
viewelements
use
application
may
different
appearance
configured
palette
menu
little
bit
top
glance
white
screen
see
screen
present
element
hello
world
text
find
view
click
text
outline
tab
right
notice
elements
defined
mainxml
appear
names
outline
ids
assigned
automatically
leave
later
learn
change
make
meaningful
elements
screen
change
inscriptions
click
textview
outline
tab
need
properties
tab
displays
selected
outline
screen
properties
usually
situated
outline
lets
change
text
property
elements
custom
text
changes
written
mainxml
lets
save
everything
launch
application
lesson
found
displayed
android
application
screen
learnt
form
layout
file
add
views
configure
properties
next
lesson
explore
layoutfile
point
view
xml
find
activity
aware
layoutfile
read
configure
read
another
file
find
layoutfile
used
screen
orientation
changes
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
android
actionbar
навигация
табы
выпадающий
список
поиск
полный
список
в
уроке
используем
навигацию
actionbar
на
прошлом
уроке
рассмотрели
добавление
элементов
actionbar
пользователю
элементы
удобно
использовать
совершения
какихлибо
операций
приложении
например
почтовой
программе
это
удаление
письма
пересылка
ответ
тд
теперь
рассмотрим
добавить
элементы
навигации
приложению
есть
типа
элементов
навигации
табы
выпадающий
список
создадим
простое
приложение
реализуем
нем
сначала
затем
второй
способ
создадим
проект
project
name
build
target
android
application
name
actionbaritems
package
name
create
activity
mainactivity
никакие
строки
добавляем
основной
layout
трогаем
кодим
mainactivityjava
package
import
androidappactionbar
import
androidappactionbartab
import
androidappactivity
import
androidappfragmenttransaction
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
implements
actionbartablistener
final
string
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
actionbar
bar
getactionbar
tab
tab
barnewtab
tabsettablistenerthis
baraddtabtab
tab
barnewtab
tabsettablistenerthis
baraddtabtab
public
void
ontabreselectedtab
tab
fragmenttransaction
ft
tab
tabgettext
public
void
ontabselectedtab
tab
fragmenttransaction
ft
tab
tabgettext
public
void
ontabunselectedtab
tab
fragmenttransaction
ft
tab
tabgettext
смотрим
нам
нужно
включить
табы
в
oncreate
получаем
доступ
actionbar
устанавливаем
режим
навигации
далее
идет
добавление
табов
тут
несложно
создаем
пишем
текст
присваиваем
обработчика
добавляем
actionbar
обработчиком
табов
сделали
mainactivity
оно
реализует
методы
интерфейса
выбран
выбранный
таб
таб
выбран
таб
выбран
в
методы
поместим
запись
лог
посмотрим
оно
работает
все
сохраняем
запускаем
приложение
видим
табы
сейчас
выбран
первый
таб
лог
сразу
сообщает
selected
tab
нажмем
второй
таб
смотрим
логи
unselected
tab
tab
первый
таб
развыбран
второй
выбран
еще
нажмем
второй
таб
reselected
tab
второй
таб
перевыбран
все
логично
понятно
я
перегружать
урок
стал
реализовывать
какиелибо
операции
навигации
приложении
а
вообще
подразумевается
методах
обработчика
кодим
операции
фрагментами
нам
любезно
предоставляют
объект
fragmenttransaction
этих
целей
при
хелп
предупреждает
этих
методах
нам
самим
вызывать
метод
commit
также
можем
добавлять
транзакцию
backstack
теперь
посмотрим
работает
навигация
выпадающим
списком
перепишем
mainactivityjava
package
import
androidappactionbar
import
androidappactivity
import
androidosbundle
import
androidutillog
import
androidwidgetarrayadapter
public
class
mainactivity
extends
activity
implements
actionbaronnavigationlistener
data
new
final
string
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
actionbar
bar
getactionbar
adapter
new
data
barsetlistnavigationcallbacksadapter
public
boolean
onnavigationitemselectedint
itemposition
long
itemid
position
itemposition
id
itemid
return
false
в
oncreate
получаем
actionbar
включаем
режим
навигации
для
выпадающего
списка
необходимо
создать
адаптер
реализующий
spinneradapter
пусть
это
arrayadapter
при
создании
используем
массив
трех
строк
далее
вызываем
метод
который
передаем
адаптер
обработчик
обработчиком
снова
является
activity
реализует
метод
интерфейса
этот
метод
дает
нам
позицию
id
выбранного
списка
элемента
выводим
лог
инфу
соответствующий
элемент
массива
в
манифесте
прописал
mainactivity
атрибут
темы
иначе
темный
текст
темном
фоне
все
сохраняем
запускаем
первый
элемент
сразу
выбран
в
логах
видим
selected
position
id
one
выберем
какойнить
элемент
списка
в
логах
selected
position
id
three
снова
логично
понятно
для
обоих
видов
навигации
можем
получить
текущий
выбранный
элемент
помощью
метода
а
навигации
табами
также
метод
возвращающий
текущий
выбранный
таб
разумеется
вместе
навигацией
можем
добавлять
actionbar
обычные
элементы
которые
рассмотрены
прошлом
уроке
при
места
недостаточно
actionbar
разделит
свои
элементы
две
полосы
начиная
четвертой
версии
андроид
использовать
атрибут
uioptions
activity
application
манифесте
если
присвоить
значение
splitactionbarwhennarrow
результат
нехватке
места
получится
элементы
ушли
вниз
правда
почемуто
перестает
работать
withtext
showasaction
на
следующем
уроке
работаем
listfragment
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
компоненты
экрана
свойства
поиск
полный
список
давайте
посмотрим
андроид
приложениях
формируется
видим
экране
урок
обновлен
если
проводить
аналогию
windows
приложение
состоит
окон
называемых
activity
в
конкретный
момент
времени
обычно
отображается
одно
activity
занимает
весь
экран
приложение
переключается
ними
в
качестве
примера
рассмотреть
почтовое
приложение
в
нем
одно
activity
список
писем
другое
просмотр
письма
третье
настройки
ящика
при
работе
перемещаетесь
содержимое
activity
формируется
различных
компонентов
называемых
view
самые
распространенные
view
это
кнопка
поле
ввода
чекбокс
тд
примерно
это
изобразить
необходимо
заметить
view
обычно
размещаются
viewgroup
самый
распространенный
пример
viewgroup
это
layout
layout
бывает
различных
типов
отвечает
будут
расположены
дочерние
view
экране
таблицей
строкой
столбцом
также
версии
android
появилась
новая
сущность
fragment
но
тему
фрагментов
рассмотрим
поздних
уроках
усложнять
материал
наверно
запутал
новыми
словами
терминами
давайте
посмотрим
это
практике
создадим
приложение
этому
уроку
для
запускайте
android
studio
открывайте
проект
android
lessons
который
создали
прошлом
уроке
скорее
проект
сразу
откроется
умолчанию
напомню
решили
создавать
проекте
модули
приложения
уроков
а
создавать
отдельный
проект
каждый
урок
создадим
модуль
в
меню
file
new
module
все
шаги
аналогичны
проделывали
прошлом
уроке
будут
другие
названия
приложения
модуля
name
basicviews
module
name
package
name
модуль
создан
виден
списке
модулей
слева
в
модуле
нам
интересен
файл
res
layout
это
layoutфайл
в
нем
определяем
набор
расположение
view
компонентов
которые
хотим
видеть
экране
при
запуске
приложения
activity
читает
файл
отображает
нам
настроили
скорее
открыт
редактирование
всякий
случай
давайте
откроем
двойным
кликом
посмотрим
выглядит
куча
кнопок
надписей
тп
я
отметил
важные
зоны
цифрами
пройдемся
desing
это
графическое
представление
экрана
оно
открыто
а
text
это
текстовое
представление
оно
выглядит
мало
понятно
мы
пока
будем
использовать
designпредставление
на
скриншоте
области
видите
экрана
обычный
белый
рядом
какойто
синий
это
экран
отображен
двух
разных
режимах
design
нем
видим
view
компоненты
обычно
выглядят
экране
blueprint
отображаются
контуры
view
компонентов
кнопки
области
позволяют
переключать
режимы
design
blueprint
design
blueprint
я
уроках
обычно
буду
использовать
design
режим
вы
можете
использовать
удобнее
здесь
можете
видеть
выглядит
экран
вашего
приложения
сюда
будем
добавлять
различные
компоненты
области
это
список
view
компонентов
которые
можете
добавлять
ваш
экран
кнопки
поля
ввода
чекбоксы
прогрессбары
прочее
здесь
представлена
иерархия
view
компонентов
вашего
экрана
сейчас
например
корневой
элемент
это
constraintlayout
а
вложен
textview
эта
область
пока
пуста
при
работе
каким
либо
view
компонентом
будут
отображаться
свойства
компонента
с
помощью
свойств
сможете
настраивать
внешний
вид
расположение
содержимое
view
компонента
чтобы
понимали
дальше
пойдет
речь
посмотрите
пожалуйста
урок
он
номером
написан
просто
понятно
в
нем
научитесь
добавлять
view
компоненты
экран
после
прочтения
возвращайтесь
сюда
продолжим
сейчас
экране
textview
давайте
добавим
несколько
компонентов
например
button
checkbox
настройте
какиенибудь
привязки
уехали
запуске
обратите
внимание
компоненты
появились
component
tree
значения
button
checkbox
это
id
которые
присвоены
компонентам
автоматически
пока
оставим
такими
позднее
научимся
менять
будем
делать
осмысленными
теперь
давайте
изменим
надписи
этих
компонентах
во
вкладке
component
tree
слеваснизу
жмем
textview
выделить
компонент
теперь
нам
нужна
вкладка
properties
справа
на
скриншоте
обозначена
область
здесь
можем
настроить
свойства
выделенного
component
tree
экране
view
компонента
найдем
вкладке
properties
свойство
text
сейчас
прописан
текст
hello
world
который
отображается
экране
давайте
поменяем
свой
текст
поставьте
курсор
это
поле
напишите
например
google
android
жать
поле
enter
советую
тк
студия
предлагает
автозаполнение
которое
подойти
поэтому
написали
свой
текст
просто
нажмите
мышкой
любом
месте
экрана
компонентами
текст
экране
изменился
был
hello
world
стал
google
android
аналогично
можете
изменить
тексты
кнопке
чекбоксе
просто
выделяйте
компоненты
экране
component
tree
properties
ищите
свойство
text
пишите
свой
текст
можно
русском
языке
все
настроили
экране
сохранится
файле
res
layout
теперь
давайте
запустим
приложение
для
выбрать
ваш
модуль
списке
доступных
нажать
правее
зеленый
треугольник
студия
спросит
запускать
эмулятор
выберите
эмулятор
жмите
ok
название
эмулятора
другим
ждем
пока
запускается
эмулятор
затем
любуемся
результатом
все
ваши
новые
тексты
должны
отобразится
экране
приложение
отображает
нам
mainactivity
оно
очередь
читает
файл
отображает
view
которые
нем
создавали
настраивали
на
следующем
уроке
рассмотрим
layoutфайл
другого
ракурса
xml
разберем
откуда
activity
знает
layoutфайл
читать
попробуем
настроить
чтение
другого
файла
узнаем
layoutфайл
используется
смене
ориентации
экрана
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
транзакции
sqlite
небольшой
faq
sqlite
поиск
полный
список
в
уроке
используем
транзакции
работе
бд
что
такое
бдтранзакция
думаю
объяснять
особо
она
используется
работе
данными
принципу
те
например
нужно
вставить
пачку
данных
но
вставить
вставилось
вставилось
и
процессе
половина
записей
прошла
другая
должна
возможность
откатить
изменения
напишем
простое
приложение
исследуем
возможности
sqlite
плане
создадим
проект
project
name
build
target
android
application
name
sqlitetransaction
package
name
create
activity
mainactivity
открываем
mainactivityjava
пишем
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
dbhelper
dbh
sqlitedatabase
db
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
oncreate
activity
dbh
new
dbhelperthis
myactions
void
myactions
db
dbhgetwritabledatabase
deletedb
insertdb
readdb
dbhclose
void
insertsqlitedatabase
db
string
table
string
value
table
table
value
value
contentvalues
cv
new
contentvalues
value
dbinserttable
null
cv
void
readsqlitedatabase
db
string
table
table
table
cursor
c
dbquerytable
null
null
null
null
null
null
c
null
count
cgetcount
cmovetofirst
cmovetonext
cclose
void
deletesqlitedatabase
db
string
table
table
table
dbdeletetable
null
null
класс
работы
бд
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
table
mytable
integer
primary
key
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
разбираем
код
я
создал
несколько
методов
сгруппировал
операции
insert
набор
операций
вставки
записи
read
чтение
записей
delete
удаление
записей
класс
dbhelper
управления
бд
интересовать
метод
myactions
сейчас
нем
подключаемся
бд
очищаем
таблицу
mytable
вставляем
строку
значением
выводим
лог
записи
таблицы
отключаемся
все
сохраним
запустим
приложение
смотрим
лог
oncreate
activity
oncreate
database
delete
table
mytable
insert
table
mytable
value
read
table
mytable
records
count
все
верно
запись
вставилась
отобразилась
теперь
попробуем
использовать
транзакцию
поправим
код
myactions
void
myactions
db
dbhgetwritabledatabase
deletedb
dbbegintransaction
insertdb
dbendtransaction
insertdb
readdb
dbhclose
мы
подключаемся
базе
чистим
таблицу
открываем
транзакцию
методом
вставляем
закрываем
транзакцию
методом
вставляем
выводим
содержимое
лог
отключаемся
все
сохраняем
запускаем
смотрим
лог
oncreate
activity
delete
table
mytable
insert
table
mytable
value
insert
table
mytable
value
read
table
mytable
records
count
по
логу
видно
вставляли
две
записи
прошла
вторая
та
которая
транзакции
записалась
это
произошло
явно
указали
транзакция
должна
успешно
закрыта
если
сделать
закрытии
транзакции
операции
отменятся
давайте
исправимся
снова
перепишем
myactions
void
myactions
db
dbhgetwritabledatabase
deletedb
dbbegintransaction
insertdb
dbsettransactionsuccessful
insertdb
dbendtransaction
insertdb
readdb
dbhclose
подключаемся
бд
чистим
таблицу
открываем
транзакцию
вставляем
подтверждаем
успешность
транзакции
методом
вставляем
закрываем
транзакцию
вставляем
выводим
содержимое
отключаемся
сохраняем
запускаем
смотрим
лог
oncreate
activity
delete
table
mytable
insert
table
mytable
value
insert
table
mytable
value
insert
table
mytable
value
read
table
mytable
records
count
вставились
записи
обратите
внимание
несмотря
вставляли
подтверждения
успешности
транзакции
запись
вставилась
вошла
транзакцию
но
проводить
операции
подтверждения
транзакции
рекомендуется
хелпом
транзакция
открытии
ставит
блокировку
базу
убедимся
попробуем
создать
новое
подключение
бд
время
транзакции
перепишем
myactions
void
myactions
try
db
dbhgetwritabledatabase
deletedb
dbbegintransaction
insertdb
dbhelper
new
dbhelperthis
sqlitedatabase
dbsettransactionsuccessful
dbendtransaction
readdb
dbhclose
catch
exception
ex
exgetclass
error
exgetmessage
подключаемся
базе
чистим
таблицу
открываем
транзакцию
вставляем
запись
создаем
новое
подключение
бд
читаем
содержимое
вторым
подключением
закрываем
второе
подключение
успешно
закрываем
транзакцию
читаем
содержимое
первым
подключением
закрываем
первое
подключение
все
сохраним
запустим
смотрим
лог
oncreate
activity
delete
table
mytable
insert
table
mytable
value
create
dbhelper
get
db
class
androiddatabasesqlitesqliteexception
error
database
locked
мы
видим
попытке
создать
второе
подключение
базе
произошла
ошибка
sqliteexception
база
заблокирована
открытой
транзакцией
если
закоментите
удалите
строки
управления
транзакцией
снова
выполните
код
пройдет
успешно
тк
никаких
блокировок
наверняка
некоторые
вопросы
теме
попробую
ответить
некоторые
метод
close
sqlitedatabase
sqliteopenhelper
какая
ними
разница
каким
пользоваться
закрытия
подключения
тут
понимать
момент
объект
sqliteopenhelper
предоставляет
одно
подключение
попробую
объяснить
механизм
у
объекта
sqliteopenhelper
внутренний
атрибут
mdatabase
типа
sqlitedatabase
когда
вызываем
метод
getwritabledatabase
объект
sqliteopenhelper
проверяет
mdatabase
null
закрыт
идет
качестве
return
иначе
sqliteopenhelper
выполняет
подключение
бд
записывает
новый
sqlitedatabaseобъект
mdatabase
возвращает
нам
те
метод
getwritabledatabase
либо
возвращает
существующее
подключение
бд
либо
создает
новое
случае
отсутствия
подключения
когда
выполняется
метод
close
sqliteopenhelper
происходит
вызов
close
mdatabase
выполняется
код
mdatabase
null
рассмотрим
примере
снова
меняем
метод
myactions
void
myactions
db
dbhgetwritabledatabase
sqlitedatabase
dbhgetwritabledatabase
open
dbisopen
open
open
dbisopen
open
сначала
получаем
db
при
dbh
проверяет
свой
внутренний
атрибут
mdatabase
тк
это
первая
попытка
подключения
mdatabase
пуст
поэтому
внутри
dbh
производится
подключение
mdatabase
записывается
свежесозданный
sqlitedatabase
возвращается
db
метода
getwritabledatabse
затем
dbh
получаем
dbh
снова
проверяет
свой
внутренний
mdatabse
видит
null
закрыт
возвращает
нам
наш
в
итоге
db
равны
ссылаются
объект
проверяем
это
помощью
метода
equals
далее
проверим
db
открыты
потом
закроем
проверим
открытость
оба
объекта
сохраняем
запускаем
смотрим
лог
oncreate
activity
db
true
db
open
true
open
true
db
open
false
open
false
видим
equals
вернул
true
затем
видно
db
открыты
а
закрытия
видим
закрыты
оба
объекта
все
оттого
оба
объекта
это
лишь
две
ссылки
объект
если
коде
вместо
поставить
dbhclose
эффект
dbh
вызовет
метод
close
mdatabase
обнулит
mdatabase
null
а
db
будут
ссылаться
закрытый
sqlitedatabase
я
думаю
правильнее
вызывать
close
sqliteopenhelper
sqlitedatabase
тк
гарантировано
закрывается
текущее
открытое
соединение
обнуляется
внутренняя
ссылка
объект
если
получить
второе
открытое
подключение
бд
создавать
новый
экземпляр
dbhelper
вызывать
getwritabledatabase
мы
делали
выше
примере
блокировкой
транзакции
в
разница
getwritabledatabase
getreadabledatabase
судя
хелпу
обычной
ситуации
оба
метода
возвращают
одно
и
оба
позволят
читать
менять
бд
в
случае
например
проблемы
отсутствия
свободного
места
устройстве
метод
getreadabledatabase
вернет
бд
чтения
getwritabledatabase
выдаст
ошибку
в
различных
источниках
работе
бд
качестве
наименования
поляидентификатора
таблице
используют
просто
id
почему
ответ
нашелся
доках
cursorадаптерам
цитата
cursor
must
include
column
named
class
те
планируете
использовать
cursorадаптеры
необходимо
таблица
содержала
поле
иначе
адаптер
работать
метод
открытия
транзакции
begintransaction
ставит
блокировку
режиме
exclusive
те
бд
блокируется
чтение
запись
других
подключений
в
sdk
android
версии
старше
появился
метод
begintransactionnonexclusive
который
ставит
блокировку
режиме
immediate
я
подозреваю
это
позволит
читать
данные
другим
подключениям
если
желание
подробнее
погрузиться
тему
и
кстати
рекомендуемая
форма
использования
транзакций
такая
dbbegintransaction
try
dbsettransactionsuccessful
finally
dbendtransaction
это
очень
важно
те
открыли
транзакцию
выполнили
какиелибо
действия
закрыли
транзакцию
операции
будут
считаться
неуспешными
изменения
будут
внесены
бд
поэтому
закрытие
транзакции
необходимо
выполнять
finally
нам
это
гарантирует
на
следующем
уроке
меняем
версию
обновляем
структуру
бд
onupgrade
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
simple
calculator
lessons
lesson
write
calculator
application
translated
taras
leskiv
try
develop
simplest
calculator
takes
two
numbers
applies
addition
subtraction
multiplication
division
operations
result
displayed
complete
expression
create
project
project
name
build
target
android
application
name
simplecalculator
package
name
rustartandroiddevelopsimplecalculator
create
activity
mainactivity
open
mainxml
draw
screen
two
input
fields
four
buttons
text
field
output
look
inputtype
attribute
edittext
defines
type
content
specified
numberdecimal
field
contain
numbers
dot
allow
letters
convenient
code
checkings
textview
gravity
attribute
specified
defines
text
textview
located
confuse
responsible
textview
location
viewgroup
need
read
field
contents
define
buttons
pressed
output
needed
result
open
mainactivityjava
write
code
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
edittext
button
btnadd
button
btnsub
button
btnmult
button
btndiv
textview
tvresult
string
oper
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
elements
edittext
edittext
btnadd
button
findviewbyidridbtnadd
btnsub
button
findviewbyidridbtnsub
btnmult
button
findviewbyidridbtnmult
btndiv
button
findviewbyidridbtndiv
tvresult
textview
findviewbyidridtvresult
set
listener
btnaddsetonclicklistenerthis
btnsubsetonclicklistenerthis
btnmultsetonclicklistenerthis
btndivsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
float
float
float
result
check
fields
empty
return
read
edittext
fill
variables
numbers
defines
button
clicked
performs
corresponding
operation
write
operation
oper
use
later
output
switch
vgetid
case
ridbtnadd
oper
result
break
case
ridbtnsub
oper
result
break
case
ridbtnmult
oper
result
break
case
ridbtndiv
oper
result
break
default
break
form
output
line
oper
result
guess
everything
clear
comments
read
values
define
button
perform
operation
output
text
field
activity
listener
clicked
buttons
save
everything
run
extend
functionality
making
menu
clearing
fields
exit
items
items
named
reset
quit
add
two
constants
ids
menu
items
public
class
mainactivity
extends
activity
implements
onclicklistener
final
int
final
int
edittext
add
highlighted
code
write
code
menu
creation
processing
menu
creation
public
boolean
oncreateoptionsmenumenu
menu
todo
autogenerated
method
stub
return
superoncreateoptionsmenumenu
process
menu
item
clicks
public
boolean
onoptionsitemselectedmenuitem
item
todo
autogenerated
method
stub
switch
itemgetitemid
case
clear
fields
break
case
exit
application
finish
break
return
superonoptionsitemselecteditem
save
everything
run
two
menu
items
appeared
reset
clears
fieldsquit
closes
application
homework
implement
division
zero
checking
output
message
using
toast
right
result
field
next
lesson
explore
animation
viewcomponents
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
android
fragments
взаимодействие
activity
поиск
полный
список
в
уроке
рассмотрим
взаимодействие
activity
фрагментами
после
размещения
фрагмента
хотелось
начать
взаимодействовать
те
размещать
viewкомпоненты
работать
ними
обращаться
фрагментам
activity
наоборот
попробуем
это
реализовать
для
чистоты
эксперимента
будем
работать
двумя
фрагментами
статическим
динамическим
создадим
проект
project
name
build
target
android
application
name
fragmentactivity
package
name
create
activity
mainactivity
в
stringsxml
добавим
строки
создаем
layout
классы
двух
фрагментов
package
import
androidappfragment
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewonclicklistener
import
androidviewviewgroup
import
androidwidgetbutton
public
class
extends
fragment
final
string
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
view
v
null
button
button
button
vfindviewbyidridbutton
buttonsetonclicklistenernew
onclicklistener
public
void
onclickview
v
click
return
v
у
фрагмента
привычного
метода
findviewbyid
поиска
компонентов
экрана
поэтому
вызываем
метод
view
которое
содержимым
фрагмента
в
методе
oncreateview
создаем
view
сразу
находим
нем
кнопку
ставим
обработчик
затем
отдаем
view
системе
package
import
androidappfragment
import
androidosbundle
import
androidutillog
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewonclicklistener
import
androidviewviewgroup
import
androidwidgetbutton
public
class
extends
fragment
final
string
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
view
v
null
button
button
button
vfindviewbyidridbutton
buttonsetonclicklistenernew
onclicklistener
public
void
onclickview
v
click
return
v
все
аналогично
настраиваем
основное
activity
mainxml
кнопка
компонент
fragment
который
помещен
контейнер
framelayout
который
поместим
обратите
внимание
атрибут
toolslayout
в
нем
указан
layoutфайл
можем
этапе
разработки
видеть
выглядеть
статический
фрагмент
приложение
запущено
для
нажать
правой
кнопкой
компоненте
fragment
пункт
fragment
layout
указать
нужный
layout
mainactivityjava
package
import
androidappactivity
import
androidappfragment
import
androidappfragmenttransaction
import
androidosbundle
public
class
mainactivity
extends
activity
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
fragment
new
fragmenttransaction
ft
getfragmentmanagerbegintransaction
ftcommit
здесь
просто
добавляем
контейнер
все
сохраняем
запускаем
приложение
жмем
кнопку
log
первом
фрагменте
смотрим
лог
button
click
жмем
log
втором
фрагменте
button
click
все
ок
компоненты
фрагментах
нашлись
обработчики
среагировали
нажатия
атрибут
onclick
который
привыкли
использовать
кнопки
прокатит
указанный
атрибуте
метод
вызван
activity
фрагменте
разберемся
получить
доступ
фрагменту
activity
для
fragmentmanager
метод
который
вход
принимает
id
компонента
fragment
фрагмент
статический
id
контейнера
динамический
у
mainxml
кнопка
btnfind
вызывающая
метод
onclick
нажатии
дорисуем
mainactivityjava
метод
onclick
public
void
onclickview
v
fragment
textview
fragment
fragment
textview
fragment
используем
метод
findfragmentbyid
в
первом
случае
вход
передаем
id
компонента
fragment
тк
размещен
именно
при
поиске
указываем
id
контейнера
который
фрагмент
помещен
в
результате
метод
findfragmentbyid
возвращает
нам
объект
fragment
далее
получаем
доступ
view
помощью
метода
находим
нем
textview
меняем
текст
все
сохраняем
запускаем
жмем
кнопку
find
тексты
фрагментах
обновились
тем
самым
activity
достучались
фрагментов
компонентов
на
всякий
случай
проговорю
одну
вещь
разряда
спасибо
кэп
если
посмотреть
код
mainactivity
заметить
работая
методе
oncreate
методе
onclick
работаем
текущим
фрагментом
это
оба
итоге
будут
ссылаться
объект
так
динамически
добавили
фрагмент
ссылка
искать
findfragmentbyid
теперь
попробуем
фрагмента
поработать
activity
для
фрагмент
имеет
метод
давайте
перепишем
обработчик
кнопки
первом
фрагменте
будем
менять
текст
кнопки
btnfind
package
import
androidappfragment
import
androidosbundle
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewonclicklistener
import
androidviewviewgroup
import
androidwidgetbutton
public
class
extends
fragment
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
view
v
null
button
button
button
vfindviewbyidridbutton
buttonsetonclicklistenernew
onclicklistener
public
void
onclickview
v
return
v
получаем
activity
методом
getactivity
ищем
нем
кнопку
меняем
текст
сохраняем
запускаем
жмем
кнопку
первом
фрагменте
работает
из
фрагмента
поменяли
компонент
activity
рассмотрим
который
описан
хелпе
фрагмент
генерирует
некое
событие
ставит
activity
обработчиком
например
activity
фрагмента
первый
список
заголовков
статей
второй
отображает
содержимое
статьи
выбранной
первом
мы
нажимаем
заголовок
статьи
первом
фрагменте
получаем
содержимое
втором
в
случае
цель
первого
фрагмента
передать
activity
информацию
выбран
заголовок
а
activity
дальше
сама
решает
делать
информацией
если
например
приложение
запущено
планшете
горизонтальной
ориентации
отобразить
содержимое
статьи
втором
фрагменте
если
приложение
запущено
смартфоне
экран
маловат
двух
фрагментов
запускать
отдельное
activity
вторым
фрагментом
отобразить
статью
фишка
первому
фрагменту
неинтересны
activity
фрагмент
обособленный
модуль
его
дело
проинформировать
выбрана
статья
такаято
ему
искать
второй
фрагмент
работать
это
дело
activity
тут
немного
отвлекусь
небольшое
лирическое
отступление
модульность
вообще
очень
важная
полезная
штука
и
использовать
универсальности
удобности
легкости
понимании
работы
своих
приложений
но
уникальных
рецептов
правильно
организовать
каждый
делает
посвоему
именно
этим
причинам
своих
уроках
даю
чисто
технические
вещи
отдельные
компоненты
рассказываю
организовывать
писать
целое
приложение
иначе
форум
ломился
сообщений
делаю
подругому
каждый
излагал
свое
видение
и
куча
споров
одна
сторона
говорит
крокодил
зеленый
другая
сторона
говорит
нифига
зеленый
длинный
вернемся
уроку
фрагмент
должен
сообщить
activity
выбрана
статья
для
вызывать
некий
метод
activity
и
нам
сообщает
хелп
лучший
способ
это
использовать
интерфейс
который
опишем
фрагменте
который
затем
реализован
activity
схема
известная
распространенная
давайте
реализуем
в
нашем
приложении
никаких
статей
поэтому
будем
просто
передавать
произвольную
строку
второго
фрагмента
activity
а
activity
отображать
строку
первом
фрагменте
перепишем
package
import
androidappactivity
import
androidappfragment
import
androidosbundle
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewonclicklistener
import
androidviewviewgroup
import
androidwidgetbutton
public
class
extends
fragment
public
interface
onsomeeventlistener
public
void
someeventstring
onsomeeventlistener
someeventlistener
public
void
onattachactivity
activity
superonattachactivity
try
someeventlistener
onsomeeventlistener
activity
catch
classcastexception
e
throw
new
classcastexceptionactivitytostring
must
implement
final
string
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
view
v
null
button
button
button
vfindviewbyidridbutton
buttonsetonclicklistenernew
onclicklistener
public
void
onclickview
v
text
return
v
описываем
интерфейс
onsomeeventlistener
в
нем
метод
someevent
который
вход
получает
строку
этот
интерфейс
реализовывать
activity
в
методе
onattach
вход
получаем
activity
которому
присоединен
фрагмент
мы
пытаемся
привести
это
activity
типу
интерфейса
onsomeeventlistener
вызывать
метод
someevent
передать
туда
строку
теперь
someeventlistener
ссылается
activity
далее
oncreateview
обработчике
кнопки
вызываем
метод
someevent
передаем
туда
текст
этот
метод
отработан
activity
теперь
меняем
activity
mainactivityjava
package
import
import
androidappactivity
import
androidappfragment
import
androidappfragmenttransaction
import
androidosbundle
import
androidwidgettextview
public
class
mainactivity
extends
activity
implements
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
fragment
new
fragmenttransaction
ft
getfragmentmanagerbegintransaction
ftcommit
public
void
someeventstring
fragment
fragment
дописываем
интерфейс
onsomeeventlistener
описанию
класса
oncreate
изменений
реализуем
метод
someevent
просто
ищем
первый
фрагмент
вставляем
туда
текст
все
сохраняем
запускаем
жмем
кнопку
втором
фрагменте
второй
фрагмент
передал
интерфейс
строку
activity
оно
нашло
первый
фрагмент
отобразило
строку
на
следующем
уроке
размещаем
элементы
actionbar
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
android
fragments
динамическая
работа
поиск
полный
список
в
уроке
динамически
работаем
фрагментами
размещать
статические
фрагменты
умеем
но
ясно
дело
гораздо
интереснее
работать
ними
динамически
система
позволяет
нам
добавлять
удалять
заменять
фрагменты
друг
другом
при
можем
сохранять
манипуляции
backstack
кнопкой
назад
отменять
в
общем
удобно
красиво
создадим
простое
приложение
двумя
фрагментами
которое
уметь
добавлять
первый
фрагмент
удалять
первый
фрагмент
заменять
первый
фрагмент
вторым
фрагментом
переключать
режим
сохранения
backstack
операций
фрагментами
создадим
проект
project
name
build
target
android
application
name
fragmentdynamic
package
name
create
activity
mainactivity
в
stringsxml
добавим
строки
back
создаем
фрагменты
как
помним
прошлого
урока
нам
нужны
будут
layoutфайлы
классы
наследующие
androidappfragment
package
import
androidappfragment
import
androidosbundle
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgroup
public
class
extends
fragment
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
return
null
package
import
androidappfragment
import
androidosbundle
import
androidviewlayoutinflater
import
androidviewview
import
androidviewviewgroup
public
class
extends
fragment
public
view
oncreateviewlayoutinflater
inflater
viewgroup
container
bundle
savedinstancestate
return
null
все
аналогично
прошлому
уроку
убрали
вызовы
кучи
lifecycle
методов
логами
рисуем
основное
activity
mainxml
три
кнопки
добавления
удаления
замены
фрагментов
чекбокс
включения
использования
backstack
и
framelayout
это
контейнер
котором
происходить
вся
работа
фрагментами
он
должен
типа
viewgroup
а
элементы
fragment
которые
использовали
прошлом
уроке
размещения
фрагментов
нам
нужны
динамической
работы
mainactivityjava
package
import
androidappactivity
import
androidappfragmenttransaction
import
androidosbundle
import
androidviewview
import
androidwidgetcheckbox
public
class
mainactivity
extends
activity
fragmenttransaction
ftrans
checkbox
chbstack
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
new
new
chbstack
checkboxfindviewbyidridchbstack
public
void
onclickview
v
ftrans
getfragmentmanagerbegintransaction
switch
vgetid
case
ridbtnadd
ftransaddridfrgmcont
break
case
ridbtnremove
break
case
ridbtnreplace
ftransreplaceridfrgmcont
default
break
chbstackischecked
ftransaddtobackstacknull
ftranscommit
в
oncreate
создаем
пару
фрагментов
находим
чекбокс
в
onclick
получаем
менеджер
фрагментов
помощью
метода
этот
объект
является
основным
работы
фрагментами
далее
фрагмент
нам
необходимо
использовать
транзакции
они
аналогичны
транзакциям
бд
открываем
транзакцию
производим
операции
бд
выполняем
commit
здесь
открываем
транзакцию
производим
операции
фрагментами
добавляем
удаляем
заменяем
выполняем
commit
итак
получили
fragmentmanager
открыли
транзакцию
методом
далее
определяем
кнопка
нажата
add
вызываем
метод
который
передаем
id
контейнера
самый
framelayout
mainxml
объект
фрагмента
в
итоге
контейнер
помещен
remove
вызываем
метод
который
передаем
объект
фрагмента
который
хотим
убрать
в
итоге
фрагмент
удалится
экрана
replace
вызываем
метод
который
передаем
id
контейнера
объект
фрагмента
в
итоге
контейнера
удалится
текущий
фрагмент
добавится
фрагмент
указанный
нами
далее
проверяем
чекбокс
если
включен
добавляем
транзакцию
backstack
для
используем
метод
на
вход
подать
строкутэг
я
передаю
null
ну
вызываем
транзакция
завершена
давайте
смотреть
получилось
все
сохраняем
запускаем
приложение
жмем
add
появился
первый
фрагмент
жмем
remove
фрагмент
удалился
еще
добавим
первый
фрагмент
жмем
add
и
жмем
replace
первый
фрагмент
заменился
вторым
жмем
кнопку
назад
приложение
закрылось
тк
операции
фрагментами
сохранялись
backstack
давайте
используем
возможность
снова
запускаем
приложение
включаем
чекбокс
add
back
stack
выполняем
те
операции
add
remove
add
replace
у
добавится
первый
фрагмент
удалится
первый
фрагмент
добавится
первый
фрагмент
заменится
вторым
в
итоге
снова
видим
второй
фрагмент
теперь
жмем
несколько
кнопку
назад
наблюдаем
выполняются
операции
обратные
делали
когда
транзакции
сохраненные
стеке
закончатся
кнопка
назад
закроет
приложение
те
достаточно
просто
понятно
скажу
пару
интересных
моментов
я
примере
выполнял
одну
операцию
каждой
транзакции
но
разумеется
когда
удаляем
фрагмент
добавляем
транзакцию
backstack
фрагмент
уничтожается
если
транзакция
добавляется
backstack
удалении
фрагмент
уничтожается
ondestroy
вызывается
останавливается
onstop
в
качестве
самостоятельной
работы
попробуйте
немного
изменить
приложение
добавлять
контейнер
сразу
фрагмента
возможно
результат
удивит
на
следующем
уроке
рассмотрим
взаимодействие
activity
фрагментами
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
storing
data
sqlite
lessons
lesson
storing
data
sqlite
last
lesson
took
look
simple
way
data
storing
preferences
way
limited
suitable
big
structured
data
storing
lesson
take
look
database
table
requests
like
common
database
first
need
enquire
way
app
interacts
database
connecting
database
within
app
set
name
version
following
situations
may
occur
database
exist
may
happen
case
application
installed
first
time
case
application
create
database
tables
interact
database
exists
version
obsolete
may
happen
case
application
updated
example
updated
program
needs
new
fields
existing
tables
even
new
tables
case
application
update
existing
tables
create
new
necessary
database
exists
version
actual
case
application
connect
database
interact
understand
say
application
means
developer
ie
responsibility
operations
described
create
class
extends
call
dbhelper
class
provide
methods
update
creation
database
cases
exist
obsolete
oncreate
method
called
case
database
exist
obsolete
onupgrade
called
try
connect
newer
version
database
existing
one
create
simple
contacts
directory
application
store
name
mail
info
enter
data
phone
screen
use
logs
data
displaying
list
often
used
know
want
make
application
heavy
main
thing
master
techniques
working
database
create
new
project
project
name
build
target
android
application
name
simplesqlite
package
name
create
activity
mainactivity
create
two
screens
data
entering
table
clearing
open
mainxml
code
two
views
data
entering
buttons
adding
loading
data
clearing
table
open
mainactivityjava
code
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
button
btnadd
btnread
btnclear
edittext
etname
etemail
dbhelper
dbhelper
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnadd
button
findviewbyidridbtnadd
btnaddsetonclicklistenerthis
btnread
button
findviewbyidridbtnread
btnreadsetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
etname
edittext
findviewbyidridetname
etemail
edittext
findviewbyidridetemail
create
object
database
creation
control
dbhelper
new
dbhelperthis
public
void
onclickview
v
create
object
data
contentvalues
cv
new
contentvalues
get
data
edittext
fields
string
name
etnamegettexttostring
string
email
etemailgettexttostring
connect
database
sqlitedatabase
db
dbhelpergetwritabledatabase
switch
vgetid
case
ridbtnadd
insert
mytable
create
data
insertion
form
pairs
column
name
value
name
email
insert
row
get
id
long
rowid
null
cv
inserted
id
rowid
break
case
ridbtnread
rows
mytable
make
request
data
mytable
get
cursor
cursor
c
null
null
null
null
null
null
put
cursor
first
row
false
returned
case
rows
cmovetofirst
determine
column
numbers
names
int
idcolindex
int
namecolindex
int
emailcolindex
get
values
according
column
numbers
put
log
cgetintidcolindex
name
cgetstringnamecolindex
email
cgetstringemailcolindex
moving
next
row
current
row
last
rows
get
false
leave
statement
cmovetonext
else
cclose
break
case
ridbtnclear
clear
mytable
delete
rows
int
clearcount
null
null
rows
count
clearcount
break
close
database
connection
dbhelperclose
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
superclass
constructor
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
create
table
columns
table
mytable
integer
primary
key
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
lots
new
words
code
find
within
oncreate
method
determine
objects
set
listeners
database
management
create
dbhelper
instance
dbhelper
class
dbhelper
described
later
take
look
onclick
method
within
process
buttons
clicking
class
used
determine
values
table
fields
create
cv
use
initialize
name
email
variables
values
edittext
views
using
method
connect
database
get
object
allow
us
work
db
use
methods
insert
query
delete
many
entering
parametres
use
simple
way
following
next
step
determine
button
clicked
btnadd
adding
data
put
field
name
value
pairs
cv
inserting
data
table
values
inserted
table
fields
appropriate
names
specified
fill
data
name
email
fields
id
filled
automatically
primary
key
autoincrement
call
method
pass
table
name
cv
object
includes
entered
values
second
argument
used
paste
empty
row
table
need
time
pass
null
insert
method
returns
id
pasted
row
save
rowid
display
logs
btnread
used
loading
existing
rows
mytable
method
used
loading
input
parameters
table
name
list
requested
fields
conditions
selection
grouping
sorting
need
table
rows
pass
table
name
parameters
null
method
return
considered
table
data
method
makes
first
row
active
checks
rows
something
selected
query
method
next
step
get
columns
order
number
within
cursor
names
method
numbers
use
data
loading
methods
display
data
logs
using
method
go
data
cursor
get
last
one
rows
table
would
display
appropriate
message
logs
rows
end
close
cursor
release
resources
method
use
btnclear
used
table
clearing
method
deletes
rows
pass
table
name
null
condition
removing
everything
deleted
case
method
returns
count
deleted
rows
close
database
connection
method
dbhelper
class
nested
mainactivity
declared
end
code
said
dbhelper
must
extend
sqliteopenhelper
class
within
constructor
call
super
constructor
pass
itcontextmydb
database
namenull
object
interaction
cursos
need
database
version
within
oncreate
method
use
sqlitedatabase
execsql
method
make
sql
request
creates
table
remind
method
called
table
exist
must
created
looking
request
see
created
table
named
mytable
id
name
email
fields
fill
onupgrade
method
use
one
database
version
gonna
change
save
launch
app
interact
database
look
logs
show
us
methods
called
happening
within
fill
edittext
fields
something
click
add
look
logs
oncreate
database
insert
mytable
row
inserted
id
see
dbhelper
oncreate
method
called
means
table
creation
script
executed
happened
first
application
launch
db
created
db
exists
possible
interact
next
see
paste
method
called
returned
id
equals
add
row
look
logs
insert
mytable
row
inserted
id
time
oncreate
called
db
already
exists
row
id
equals
pasted
look
content
click
read
button
look
logs
rows
mytable
id
name
john
smith
email
id
name
body
email
see
rows
inserted
clear
table
clicking
clear
button
look
logs
clear
mytable
deleted
rows
count
two
rows
deleted
alright
click
read
button
loot
table
content
rows
mytable
rows
rows
necessary
understand
within
topic
used
two
classes
interact
database
dbhelper
extends
sqliteopenhelper
called
super
constructor
within
constructor
passed
database
name
version
getwritabledatabase
method
connects
database
returns
sqlitedatabase
object
interaction
database
close
method
closes
connection
database
case
database
exist
version
obsolete
class
lets
us
implement
creation
update
within
oncreate
onupgrate
methods
sqlitedatabase
contains
methods
interaction
data
paste
update
delete
reading
database
file
found
file
explorer
previous
lesson
link
next
lesson
go
application
add
opportunity
delete
update
exact
rows
make
database
operations
process
main
thread
examples
make
lesson
difficult
real
application
code
use
individual
thread
interaction
database
app
slow
visually
make
tell
within
lessons
number
next
lesson
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
onupgrade
database
migrating
lessons
lesson
changing
database
version
updating
structure
onupdate
method
developing
app
may
occur
need
change
structure
database
uses
mentioned
one
previous
lessons
sqliteopenhelper
onupdate
method
used
method
called
existing
database
version
differs
one
trying
connect
usually
specified
database
version
constructor
calling
sqliteopenhelper
superclass
constructor
try
use
onupgrade
method
look
migration
newer
version
database
processing
code
little
app
similar
one
previous
lesson
positions
employees
first
version
database
contain
people
table
name
position
table
correct
enough
update
appropriate
rows
people
table
case
position
name
suddenly
change
decide
change
database
structure
organise
data
another
way
add
position
table
salary
position
columns
within
second
version
people
table
put
appropriate
id
position
table
instead
specifying
position
name
create
project
project
name
target
android
name
sqliteonupgradedbpackage
name
activity
mainactivity
use
ui
components
display
data
logs
open
mainactivityjava
code
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
final
string
db
name
final
int
db
version
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
dbhelper
dbh
new
dbhelperthis
sqlitedatabase
db
dbhgetwritabledatabase
staff
db
dbgetversion
writestaffdb
dbhclose
data
request
displaying
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
displaying
cursor
data
logs
void
logcursorcursor
c
string
title
c
null
cmovetofirst
title
cgetcount
stringbuilder
sb
new
stringbuilder
string
cn
cgetcolumnnames
sbappendcn
cgetstringcgetcolumnindexcn
sbtostring
cmovetonext
else
title
cursor
class
databasae
interaction
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
contentvalues
cv
new
contentvalues
creation
people
table
table
people
integer
primary
key
text
position
filling
int
cvclear
null
cv
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
code
simple
grouped
operations
data
displaying
log
cursor
within
logcursor
method
writestaff
method
selects
data
people
table
calls
method
displaying
data
logs
create
dbhelper
object
within
oncreate
method
connect
database
display
database
version
logs
call
writestaff
method
close
connection
everything
usual
dbhelper
call
super
class
method
within
constructor
note
connect
first
version
database
within
oncreate
method
create
table
fill
data
save
launch
app
look
logs
oncreate
database
staff
db
table
people
rowsid
name
ivan
position
developer
id
name
maria
position
accountant
id
name
petr
position
developer
id
name
anton
position
developer
id
name
dasha
position
accountant
id
name
boris
position
director
id
name
kostja
position
developer
id
name
igor
position
security
database
created
version
equals
data
displayed
logs
application
works
everything
fine
suddenly
understand
mistake
made
database
designing
right
write
name
people
table
addition
salary
data
added
create
position
table
use
ids
people
table
way
database
structure
change
specify
version
second
application
already
installed
usersit
already
created
first
version
database
filled
data
delete
existing
tables
create
new
ones
user
may
possibly
keep
data
need
write
scripts
database
updating
without
data
losses
plan
create
fill
data
position
table
add
posid
column
people
table
keeping
id
position
table
fill
peopleposid
data
position
depending
peopleposition
value
delete
peopleposition
column
change
mainactivityjava
code
application
oriented
database
version
specify
changing
field
value
final
int
db
version
rewrite
writestaff
method
way
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
c
null
logcursorc
cclose
string
sqlquery
plname
name
psname
position
salary
salary
people
pl
join
position
ps
plposid
psid
c
dbrawquerysqlquery
null
logcursorc
cclose
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
onupgrade
database
oldversion
newversion
version
oldversion
newversion
contentvalues
cv
new
contentvalues
position
table
data
dbbegintransaction
try
positions
table
creation
table
position
integer
primary
text
salary
filling
int
cvclear
null
cv
table
people
add
column
posid
int
cvclear
cv
new
temporary
table
integer
name
text
position
text
posid
select
id
name
position
posid
table
table
people
integer
primary
key
text
posid
people
select
id
name
posid
table
dbsettransactionsuccessful
finally
dbendtransaction
code
follows
updation
plan
mentioned
couple
notes
first
use
database
transaction
ie
need
updates
applied
database
updates
must
canceled
case
mistake
database
must
remain
transactions
useful
case
secondly
delete
column
sqlite
need
create
temporary
column
transfer
data
delete
original
table
create
new
structure
fill
data
temporary
table
delete
last
one
may
read
details
add
delete
columns
existing
table
sqlite
application
updated
try
connect
database
version
launch
see
existing
database
version
call
onupgrade
method
giving
us
opportunity
apply
necessary
changes
database
structure
happen
case
application
updating
happen
case
user
install
application
device
first
time
case
application
try
connect
database
version
since
application
installed
database
exist
application
create
database
specify
number
knows
work
exactly
version
creating
table
class
oncreate
method
called
means
within
method
must
add
code
create
database
version
ie
updated
people
table
new
position
table
code
oncreate
within
dbhelper
public
void
oncreatesqlitedatabase
db
oncreate
database
positions
table
data
contentvalues
cv
new
contentvalues
creating
positions
table
table
position
integer
primary
text
salary
filling
int
cvclear
null
cv
creating
people
table
table
people
integer
primary
key
text
posid
filling
int
cvclear
null
cv
creation
filling
data
everything
clear
save
launch
app
look
logs
onupgrade
database
version
staff
db
table
people
rowsid
name
ivan
posid
id
name
maria
posid
id
name
petr
posid
id
name
anton
posid
id
name
dasha
posid
id
name
boris
posid
id
name
kostja
posid
id
name
igor
posid
table
position
rowsid
name
director
salary
id
name
developer
salary
id
name
accountant
salary
id
name
security
salary
inner
join
rowsname
ivan
position
developer
salary
name
maria
position
accountant
salary
name
petr
position
developer
salary
name
anton
position
developer
salary
name
dasha
position
accountant
salary
name
boris
position
director
salary
name
kostja
position
developer
salary
name
igor
position
security
salary
see
onupgrade
method
called
updated
database
version
second
first
one
display
data
logs
get
sure
updating
correct
may
also
get
sure
new
dbhelper
oncreate
method
works
correctly
need
delete
database
file
launch
application
find
database
create
new
format
version
script
fictional
something
complain
argue
point
point
saw
way
database
updating
application
requested
new
version
first
time
may
way
creating
updating
seem
complicated
really
full
understanding
come
experience
also
want
note
cursor
object
close
method
frees
resources
method
holds
forget
think
safely
say
sufficiently
studied
work
sqlite
android
future
lessons
freely
use
knowledge
mainactivityjava
full
code
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
public
class
mainactivity
extends
activity
final
string
final
string
db
name
final
int
db
version
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
dbhelper
dbh
new
dbhelperthis
sqlitedatabase
db
dbhgetwritabledatabase
staff
db
dbgetversion
writestaffdb
dbhclose
data
query
displaying
private
void
writestaffsqlitedatabase
db
cursor
c
null
logcursorc
cclose
c
null
logcursorc
cclose
string
sqlquery
plname
name
psname
position
salary
salary
people
pl
join
position
ps
plposid
psid
c
dbrawquerysqlquery
null
logcursorc
cclose
displaying
data
cursor
void
logcursorcursor
c
string
title
c
null
cmovetofirst
title
cgetcount
stringbuilder
sb
new
stringbuilder
string
cn
cgetcolumnnames
sbappendcn
cgetstringcgetcolumnindexcn
sbtostring
cmovetonext
else
title
cursor
class
database
interaction
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
data
position
table
contentvalues
cv
new
contentvalues
positions
table
creating
table
position
integer
primary
text
salary
filling
int
cvclear
null
cv
people
table
creation
table
people
integer
primary
key
text
posid
filling
int
cvclear
null
cv
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
onupgrade
database
oldversion
newversion
version
oldversion
newversion
contentvalues
cv
new
contentvalues
data
positions
table
dbbegintransaction
try
positions
table
creating
table
position
integer
primary
text
salary
filling
int
cvclear
null
cv
table
people
add
column
posid
int
cvclear
cv
new
temporary
table
integer
name
text
position
text
posid
select
id
name
position
posid
table
table
people
integer
primary
key
text
posid
people
select
id
name
posid
table
dbsettransactionsuccessful
finally
dbendtransaction
next
lesson
find
usage
layoutinflater
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
context
menu
lessons
lesson
create
context
menu
translated
taras
leskiv
context
menu
android
invoked
long
pressing
screen
component
usually
used
lists
list
similar
objects
displayed
like
messages
mailbox
need
apply
action
one
objects
context
menu
invoked
object
study
lists
yet
make
simpler
example
invoke
context
menu
textview
create
project
project
name
target
android
name
contextmenupackage
name
rustartandroiddevelopcontextmenucreate
activity
mainactivity
open
mainxml
create
two
textview
objects
first
textview
make
context
menu
using
change
text
color
second
change
text
size
way
creating
context
menu
quite
similar
creating
simple
menu
differences
method
invoked
every
time
menu
displayed
passed
parameters
contextmenu
add
items
view
screen
element
context
menu
invoked
contextmenucontextmenuinfo
contains
additional
information
context
menu
invoked
list
element
use
learn
lists
see
useful
process
method
similar
onoptionsitemselected
simple
menu
menuitem
passed
parameter
menu
item
clicked
also
need
third
method
passed
view
parameter
means
context
menu
created
view
invoke
method
context
menu
view
created
lets
code
open
mainactivityjava
declare
find
textview
point
context
menu
must
created
textview
tvcolor
tvsize
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvcolor
textview
findviewbyidridtvcolor
tvsize
textview
findviewbyidridtvsize
context
menu
created
tvcolor
tvsize
registerforcontextmenutvcolor
registerforcontextmenutvsize
code
creation
context
menus
use
constants
storing
menu
item
ids
final
int
final
int
final
int
final
int
final
int
final
int
create
public
void
oncreatecontextmenucontextmenu
menu
view
v
contextmenuinfo
menuinfo
todo
autogenerated
method
stub
switch
vgetid
case
ridtvcolor
break
case
ridtvsize
break
pay
attention
define
view
context
menu
invoked
id
depending
id
create
specific
menu
context
menu
invoked
tvcolor
create
menu
colors
enumeration
tvsize
enumeration
font
sizes
use
constants
item
ids
apply
grouping
sorting
use
zeros
corresponding
parameters
save
everything
run
long
pressing
textview
context
menu
appear
clicking
items
nothing
written
processing
oncontextitemselected
method
fill
public
boolean
oncontextitemselectedmenuitem
item
todo
autogenerated
method
stub
switch
itemgetitemid
menu
items
tvcolor
case
tvcolorsettextcolorcolorred
color
break
case
tvcolorsettextcolorcolorgreen
color
break
case
tvcolorsettextcolorcolorblue
color
break
menu
items
tvsize
case
size
break
case
size
break
case
size
break
return
superoncontextitemselecteditem
method
define
id
menu
item
clicked
corresponding
actions
afterwards
change
text
color
tvcolor
font
size
tvsize
save
run
see
context
menus
react
clicks
required
broaden
horizons
would
like
write
something
else
topic
may
seem
complicated
fine
thoughts
used
registerforcontextmenuview
view
method
turning
context
menu
specific
view
method
belongs
activity
class
looked
source
code
method
following
written
public
void
registerforcontextmenuview
view
viewsetoncreatecontextmenulistenerthis
remember
lesson
listeners
look
help
method
looks
like
view
uses
object
listener
creating
context
menu
case
code
inside
activity
means
object
activity
means
view
wants
show
context
menu
refers
listener
activity
invokes
oncreatecontextmenu
method
similar
concept
simple
click
line
mainactivityjava
registerforcontextmenutvcolor
absolutely
equal
line
tvcolorsetoncreatecontextmenulistenerthis
also
create
object
implements
viewoncreatecontextmenulistener
use
instead
activity
listener
creating
context
menu
forget
also
use
xmlmethod
create
context
menu
reviewed
end
previous
lesson
try
complete
lesson
using
xmlmenu
time
complete
lesson
code
public
class
mainactivity
extends
activity
final
int
final
int
final
int
final
int
final
int
final
int
textview
tvcolor
tvsize
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
tvcolor
textview
findviewbyidridtvcolor
tvsize
textview
findviewbyidridtvsize
context
menu
created
tvcolor
tvsize
registerforcontextmenutvcolor
registerforcontextmenutvsize
public
void
oncreatecontextmenucontextmenu
menu
view
v
contextmenuinfo
menuinfo
todo
autogenerated
method
stub
switch
vgetid
case
ridtvcolor
break
case
ridtvsize
break
public
boolean
oncontextitemselectedmenuitem
item
todo
autogenerated
method
stub
switch
itemgetitemid
menu
items
tvcolor
case
tvcolorsettextcolorcolorred
color
break
case
tvcolorsettextcolorcolorgreen
color
break
case
tvcolorsettextcolorcolorblue
color
break
menu
items
tvsize
case
size
break
case
size
break
case
size
break
return
superoncontextitemselecteditem
next
lesson
draw
screen
programmatically
using
layoutfile
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
avd
first
application
android
project
structure
lessons
test
applications
need
android
virtual
device
avd
android
smartphone
emulator
eclipse
install
launch
applications
create
translated
taras
leskiv
launch
eclipse
go
windows
android
sdk
avd
manager
newer
versions
android
avd
manager
choose
virtual
devices
left
click
new
target
list
android
platforms
different
versions
presented
weve
downloaded
previous
lesson
last
step
choose
right
version
see
information
return
eclipse
choose
platform
api
level
list
give
corresponding
name
also
specify
size
sd
card
hvga
screen
mode
press
create
avd
close
avd
manager
finally
create
first
application
see
works
multiple
versions
wizard
creating
project
google
constantly
changes
look
one
suits
best
sorted
date
newest
first
eclipse
go
file
new
project
choose
project
type
android
android
application
project
click
next
window
creating
project
appears
fill
begin
project
name
name
project
displayed
list
projects
left
many
projects
propose
think
prefix
names
would
easier
return
older
projects
structured
nicely
conveniently
prefix
like
project
leave
three
numbers
lesson
number
one
project
number
add
logical
name
prefix
ourfirstproject
get
name
first
project
third
lesson
application
name
directly
name
application
displayed
device
application
list
specify
project
name
without
prefix
package
name
java
term
explained
details
shortly
prefix
classes
names
application
using
minimum
required
sdk
defines
minimum
android
version
within
application
launch
choose
creating
avd
compile
defines
abilities
android
version
application
use
specify
target
sdk
defines
maximum
android
version
tested
application
required
compatibility
modes
specify
also
specify
theme
choose
none
click
next
ticks
leave
create
activity
immediately
project
creation
activity
created
create
manually
create
project
workspace
project
created
saved
default
workspace
click
next
choose
blankactivity
click
next
make
sure
field
activity
name
mainactivity
specified
field
layout
name
enter
main
navigation
type
none
click
finish
project
created
eclipse
go
file
new
project
choose
project
type
android
android
application
project
click
next
window
creating
project
appears
fill
begin
project
name
name
project
displayed
list
projects
left
many
projects
propose
think
prefix
names
would
easier
return
older
projects
structured
nicely
conveniently
prefix
like
project
leave
three
numbers
lesson
number
one
project
number
add
logical
name
prefix
ourfirstproject
get
name
first
project
third
lesson
application
name
directly
name
application
displayed
device
application
list
specify
project
name
without
prefix
package
name
java
term
explained
details
shortly
prefix
classes
names
application
using
build
sdk
defines
abilities
android
version
application
use
choose
creating
avd
minimum
required
sdk
defines
minimum
android
version
within
application
launch
make
build
sdk
ticks
leave
create
project
workspace
project
created
default
workspace
click
next
window
activity
creation
opens
choose
blankactivity
click
next
make
sure
field
activity
name
mainactivity
specified
field
layout
name
enter
main
touch
fields
click
finish
project
created
eclipse
go
file
new
project
choose
project
type
android
android
application
project
click
next
window
creating
project
appears
newer
versions
window
splitted
three
fill
begin
project
name
name
project
displayed
list
projects
left
many
projects
propose
think
prefix
names
would
easier
return
older
projects
structured
nicely
conveniently
prefix
like
project
leave
three
numbers
lesson
number
one
project
number
add
logical
name
prefix
ourfirstproject
get
name
first
project
third
lesson
build
target
defines
abilities
android
version
application
use
choose
creating
avd
application
name
directly
name
application
displayed
device
application
list
specify
project
name
without
prefix
package
name
java
term
explained
details
shortly
prefix
classes
names
application
using
create
activity
name
activity
class
application
screen
specify
mainactivity
instance
leave
everything
else
click
finish
project
created
screenshots
may
differ
different
versions
much
left
project
appeared
expand
project
look
important
frequently
used
folders
files
src
written
source
code
situated
folder
gen
filed
generated
environment
application
requires
better
touch
anything
folder
edit
something
project
click
save
button
android
android
libraries
required
application
assets
res
folders
resource
files
different
type
androidmanifestxml
manifest
configuration
file
application
use
later
clear
needed
select
project
name
left
run
press
ctrl
choose
android
application
click
ok
emulator
launched
advise
touch
press
anything
laggy
unstable
thing
startup
time
approximately
one
minute
wait
following
strings
appear
eclipse
console
application
installed
emulator
running
unlock
emulator
screen
locked
observe
application
see
name
application
name
activity
created
launched
first
application
manage
launch
message
like
eclipse
console
disconnected
cancelling
rustartandroiddevelopourfirstprojectmainact
activity
close
emulator
try
manage
restart
eclipse
failed
reboot
work
even
delete
avd
create
new
one
finally
work
even
first
try
main
thing
running
application
ctrl
try
make
motions
computer
spotted
clear
tendency
switch
different
windows
emulator
starting
launches
faults
sit
wait
minute
everything
would
fine
turn
procedures
like
video
rendering
load
system
read
emulator
detail
next
lesson
add
different
elements
application
change
properties
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
layoutфайл
activity
xml
представление
смена
ориентации
экрана
поиск
полный
список
на
прошлом
уроке
выяснили
activity
читает
layoutфайл
отображает
нем
сконфигурировано
теперь
выясним
откуда
activity
знает
именно
layoutфайл
читать
урок
обновлен
создадим
приложение
урока
для
необходимо
создать
модуль
проекте
android
lessons
этот
проект
создали
прошлых
уроках
если
запомнили
создавать
модули
просмотреть
уроки
и
давайте
сразу
разберем
момент
последующие
уроки
написаны
давно
написаны
среду
разработки
eclipse
соответственно
уроки
содержат
информацию
создания
проекта
eclipse
но
eclipse
отличается
android
studio
организацией
и
разберемся
информацию
созданию
проекта
eclipse
использовать
создании
модулей
android
studio
инфа
создания
проекта
eclipse
выглядит
project
name
build
target
android
application
name
layoutfiles
package
name
rustartandroiddeveloplayoutfiles
create
activity
mainactivity
обычно
подобный
текст
начале
каждого
урока
а
создания
модуля
android
studio
нам
нужна
информация
таком
виде
name
layoutfiles
module
name
package
name
как
получить
старого
новое
рассмотрим
примере
урока
будем
брать
значения
eclipse
подставлять
android
studio
для
поля
name
берете
значение
application
name
какихлибо
изменений
те
layoutfiles
для
module
name
брать
значение
project
name
заглавные
буквы
сделать
маленькими
нижнее
подчеркивание
удалить
те
получаем
package
name
это
rustartandroid
плюc
полученный
module
name
те
используйте
схему
последующих
уроках
создания
модулей
также
информации
eclipse
поле
create
activity
его
будем
использовать
создании
модуля
указываем
имя
activity
поле
activity
name
сюда
подставить
значение
create
activity
обычно
это
mainactivity
запомните
инструкцию
применяйте
каждом
уроке
создавать
модули
возвращаемся
уроку
при
разработке
каждому
activity
сопоставляется
одноименный
javaкласс
наследник
класса
androidappactivity
при
запуске
приложения
система
должна
показать
activity
дальнейшем
работать
вызывать
методы
класса
и
этих
методах
накодим
зависит
поведение
activity
при
создании
модуля
указывали
создать
activity
именем
mainactivity
мы
попросили
создать
activity
среда
разработки
создала
нам
соответствующий
класс
дальнейшем
научимся
создавать
самостоятельно
давайте
посмотрим
класс
откроем
двойным
кликом
файл
смотрим
javaкод
нас
интересует
метод
oncreate
вызывается
приложение
создает
отображает
activity
остальные
методы
пока
обращаем
внимания
посмотрим
код
реализации
oncreate
первая
строка
superoncreatesavedinstancestate
это
вызов
метода
родительского
класса
выполняющий
необходимые
процедуры
трогаем
нас
очень
интересует
следующая
строка
метод
устанавливает
содержимое
activity
layoutфайла
но
качестве
аргумента
указываем
путь
layoutфайлу
константу
которая
является
id
файла
эта
константа
генерируется
автоматически
файле
rjava
который
пока
трогать
будем
в
классе
будут
храниться
сгенерированные
id
ресурсов
проекта
папки
могли
обращаться
имена
этих
idконстант
совпадают
именами
файлов
ресурсов
расширений
файл
создан
средой
разработки
вместе
activity
его
название
запрашивалось
экране
название
activity
скрин
выше
в
последующих
уроках
файл
называется
обычно
mainxml
откроем
двойным
кликом
посмотрим
запустим
приложение
посмотрим
оно
нам
покажет
все
верно
activity
отобразил
прописано
попробуем
отобразить
содержимое
другого
файла
создадим
layoutфайл
например
myscreenxml
для
выделим
папку
нашем
модуле
нажмем
правую
кнопку
мыши
в
появившемся
меню
выбираем
new
layout
resource
file
для
любителей
горячих
клавиш
удобный
путь
выделенной
папке
нажать
enter
пункте
layout
resource
file
откроется
визард
вводим
имя
файла
myscreen
остальное
пока
меняем
жмем
ok
в
папке
layout
должен
появиться
новый
файл
myscreenxml
этот
новый
layoutфайл
должен
сразу
открыться
редактирование
добавим
экран
элемент
plain
textview
списка
слева
properties
изменим
текст
new
layout
file
myscreen
activity
обязательно
сохраняем
при
создании
нового
layoutфайла
myscreen
среда
добавила
rjava
новую
константу
файла
rlayoutmyscreen
и
коде
сможем
константу
указать
новый
layoutфайл
настроим
activity
использовало
новый
файл
myscreenxml
который
изначально
откроем
mainactivityjava
поменяем
аргумент
метода
setcontentview
замените
rlayoutmyscreen
id
нового
layoutфайла
должно
получиться
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmyscreen
сохраняем
код
запускаем
приложение
теперь
нам
предложат
подтвердить
хотим
запустить
приложение
включенном
эмуляторе
чтобы
каждом
запуске
это
спрашивал
включите
галку
use
device
future
launches
жмите
ok
приложение
запустилось
видим
оно
отображает
содержимое
myscreenxml
тк
явно
это
указали
методе
setcontentview
который
выполняется
создании
oncreate
activity
layoutфайл
виде
xml
открыв
android
studio
layout
файл
myscreen
видите
визуальное
представление
те
некий
предпросмотр
это
выглядеть
экране
снизу
можете
видеть
две
вкладки
design
text
откройте
вкладку
text
мы
видим
достаточно
читабельное
xmlописание
view
нашего
layoutфайла
названия
xmlэлементов
это
классы
viewэлементов
xmlатрибуты
это
параметры
viewэлементов
те
те
параметры
меняем
вкладку
properties
также
можете
вносить
изменения
прямо
сюда
изменения
будут
отображаться
вкладке
design
например
изменим
текст
textview
вместо
new
layout
file
myscreen
activity
напишем
текст
new
text
сохраняем
открываем
design
наблюдаем
изменения
обычно
авторы
учебников
дают
содержание
layoutфайлов
именно
xml
виде
это
удобно
можете
просто
скопировать
фрагмент
использовать
вручную
добавлять
viewэлементы
бегать
properties
настраивать
руками
я
буду
делать
своих
проектах
layoutфайл
смене
ориентации
экрана
по
умолчанию
настраиваем
layoutфайл
вертикальную
ориентацию
экрана
но
повернем
смартфон
включится
горизонтальная
ориентация
давайте
смотреть
изменим
myscreenxml
добавим
вертикальный
ряд
кнопок
изменим
надпись
xmlкод
можете
скопировать
заменить
содержимое
вашего
layout
файла
myscreen
вкладке
text
ориентация
обратите
внимание
добавил
вертикальный
linearlayout
поместил
кнопки
подробнее
обсудим
это
следующем
уроке
сохраним
файл
запустим
приложение
в
вертикальной
ориентации
ок
нажмем
эмуляторе
ориентация
сменилась
горизонтальную
наши
кнопки
влезают
экран
те
нам
необходим
layoutфайл
который
заточен
горизонтальную
ориентацию
нашем
случае
вывел
кнопки
горизонтально
но
дать
знать
activity
вертикальной
ориентации
должна
использовать
layoutфайл
горизонтальной
об
подумали
создатели
андроид
у
возможность
создать
layoutфайл
который
использоваться
приложением
устройство
находится
горизонтальной
ориентации
создание
такого
файла
отличается
создания
обычного
layoutфайла
становимся
папку
создаем
новый
layout
resource
file
название
файла
указываем
самое
myscreen
осталось
добавить
спецификатор
который
даст
приложению
понять
layoutфайл
юзать
горизонтальной
ориентации
для
списке
спецификаторов
слева
снизу
находим
orientation
и
жмем
кнопку
стрелкой
вправо
тем
самым
включили
использование
спецификатора
ориентации
нам
указать
интересует
горизонтальная
ориентация
landscape
выберите
это
значение
выпадающего
списка
обратите
внимание
изменилось
значение
поля
directory
name
настройкой
спецификатора
указали
наш
новый
layoutфайл
создан
папке
обычно
те
спецификатор
land
указывает
layoutфайлы
папки
будут
использованы
горизонтальной
ориентации
устройства
жмем
ok
посмотрим
структуру
модуля
видим
файла
myscreen
обычный
land
можно
это
увидеть
структуре
папок
для
сверху
поменяйте
вид
проекта
android
project
и
увидите
модуле
папки
и
обе
содержат
файл
myscreen
откроем
двойным
кликом
файл
поменяем
содержимое
xmlкод
ориентация
вкладка
design
покажет
следующее
в
layout
файле
расположили
кнопки
горизонтально
адекватно
отображались
горизонтальной
ориентации
обратите
внимание
название
файла
сверху
там
присутствует
спецификатор
land
понимали
двух
myscreen
редактируете
запустим
приложение
activity
читает
layoutфайл
который
указывали
методе
setcontentview
те
myscreenxml
отображает
содержимое
при
оно
учитывает
ориентацию
устройства
случае
горизонтальной
ориентации
берет
myscreen
папки
существует
переключим
ориентацию
activity
понимает
находится
вертикальной
ориентации
использует
layoutфайл
myscreen
папки
ps
еще
немного
уроках
далее
уроках
основной
layoutфайл
называться
mainxml
пусть
это
смущает
просто
помните
ваш
основной
файл
это
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
logs
toast
messages
lessons
lesson
look
application
logs
toast
messages
translated
taras
leskiv
create
project
project
name
build
target
android
application
name
logandmess
package
name
rustartandroiddeveloplogandmess
create
activity
mainactivity
create
screen
mainxml
already
familiar
lesson
listeners
application
algorithm
change
text
button
clicked
activity
listener
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
assign
listener
buttons
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
define
button
invoked
listener
id
switch
vgetid
case
ridbtnok
ok
button
button
break
case
ridbtncancel
cancel
button
button
break
save
run
application
make
sure
everything
works
fine
testing
application
see
working
logs
displayed
logcat
window
open
logcat
go
window
show
view
window
appeared
choose
android
logcat
logcat
tab
appear
observe
tab
detail
logs
different
importance
levels
error
warn
info
debug
verbose
descending
items
dropdown
list
verbose
debug
filters
correspond
log
types
test
note
filter
shows
logs
level
also
logs
higher
importance
also
create
edit
delete
filters
examine
later
see
write
logs
really
simple
done
using
class
logv
logd
logi
logw
loge
methods
method
names
correspond
log
levels
write
change
mainactivityjava
code
take
comments
code
add
debuglogs
using
logd
method
method
takes
tag
text
message
parameters
tag
something
like
label
could
later
find
messages
pile
system
logs
add
tag
description
tag
write
text
comments
logs
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
private
static
final
string
tag
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
logdtag
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
assign
listener
buttons
logdtag
lstener
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
define
button
invoked
listener
id
logdtag
button
invoked
listener
switch
vgetid
case
ridbtnok
ok
button
logdtag
button
break
case
ridbtncancel
cancel
button
logdtag
button
break
eclipse
complain
know
log
class
update
imports
ctrl
shift
choose
androidutillog
asked
run
application
click
buttons
check
logs
see
everything
successfully
written
eclipse
created
filter
rustartandroiddeveloplogandmess
application
create
filter
click
icon
choose
name
wish
example
log
tag
value
tag
constant
described
code
used
logd
method
case
set
debug
log
level
fields
leave
empty
click
ok
new
tab
logs
appeared
logs
displayed
correspond
newly
created
filter
put
text
log
clear
write
values
variables
need
string
representation
sometimes
happens
logs
displayed
logcat
tab
although
avd
launched
application
works
without
problems
case
following
help
eclipse
go
window
open
perspective
ddms
little
bit
different
usually
set
windows
open
find
devices
tab
avddevice
visible
click
logs
appear
get
back
development
window
open
perspective
java
application
display
messages
using
toast
class
edit
onclick
method
make
toast
message
appear
indicating
button
clicked
public
void
onclickview
v
define
button
invoked
listener
id
logdtag
button
invoked
listener
switch
vgetid
case
ridbtnok
ок
button
logdtag
button
toastmaketextthis
button
break
case
ridbtncancel
cancel
button
logdtag
button
toastmaketextthis
button
break
look
syntax
static
method
creates
viewelement
method
parameters
context
look
detail
use
current
activity
text
text
need
show
duration
duration
displaying
message
toast
long
toast
short
toast
created
display
screen
need
invoke
show
method
save
run
application
check
guess
android
smartphone
seen
messages
know
done
next
lesson
create
menu
items
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
extras
passing
data
using
intent
lessons
lesson
pass
data
using
intent
translated
taras
leskiv
previous
lessons
found
intent
use
invoked
one
activity
another
passing
action
learn
transfer
data
make
simplest
application
first
screen
enter
name
surname
second
screen
display
data
transfer
data
inside
intent
create
project
project
name
build
target
android
application
name
intentextras
package
name
create
activity
mainactivity
open
mainxml
draw
screen
fields
send
button
enter
name
surname
edittext
submit
button
invoke
screen
pass
data
write
code
mainacitivtyjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
etfname
edittext
etlname
button
btnsubmit
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
etfname
edittext
findviewbyidridetfname
etlname
edittext
findviewbyidridetlname
btnsubmit
button
findviewbyidridbtnsubmit
btnsubmitsetonclicklistenerthis
public
void
onclickview
v
intent
intent
new
intentthis
viewactivityclass
etfnamegettexttostring
etlnamegettexttostring
startactivityintent
define
input
fields
button
assign
button
listener
activity
observe
onclick
method
implementation
create
intent
using
class
action
remember
started
get
acquainted
intent
way
remind
means
system
look
manifestfile
application
display
activity
finds
one
class
viewactivity
created
yet
code
underlined
red
however
still
save
file
create
activity
little
bit
later
error
disappear
intent
created
observe
code
method
used
lots
varieties
similar
put
method
map
adds
keyvalue
pair
object
first
parameter
keyname
second
value
put
two
objects
names
fname
lname
intent
fname
contains
value
etfname
field
lname
value
etlname
field
thing
left
send
equipped
intent
using
startactivity
method
create
second
activity
name
viewactivity
create
layoutfile
viewxml
textview
display
incoming
data
create
viewactivity
class
write
code
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidwidgettextview
public
class
viewactivity
extends
activity
textview
tvview
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutview
tvview
textview
findviewbyidridtvview
intent
intent
getintent
string
fname
string
lname
name
fname
lname
find
textview
receive
intent
extract
string
objects
names
fname
lname
objects
put
inside
mainactivityjava
form
output
string
textview
using
received
data
forget
register
activity
inside
manifest
time
need
intent
filters
know
name
activity
class
use
explicit
invocation
save
everything
run
application
see
following
screen
fill
fields
whatever
wish
write
john
first
name
field
smith
last
name
field
press
submit
viewactivity
displayed
read
data
intent
displayed
screen
put
string
data
inside
intent
intent
methods
see
types
putextra
method
receive
parameter
next
lesson
starting
activity
receiving
result
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
установка
android
studio
поиск
полный
список
для
писать
программы
нужна
среда
разработки
в
уроке
подробно
рассмотрим
установить
настроить
среду
разработки
я
буду
описывать
установку
применимо
операционной
системе
windows
урок
обновлен
в
статье
скриншотов
инструкций
учитывайте
версии
по
постоянно
меняются
выглядеть
подругому
версии
могут
другими
тк
разработка
приложений
ведется
java
нам
нужно
скачать
установить
соответствующее
sdk
называемое
jdk
оно
установлено
скачать
нажимайте
ближайшую
кнопку
jdk
download
выбирайте
версию
вашу
операционную
систему
скачивайте
устанавливайте
если
ссылка
работает
просто
гуглите
sdk
после
установки
рекомендую
перезагрузить
комп
в
среде
разработки
будем
создавать
программу
получать
выходе
готовое
приложение
сейчас
существует
несколько
сред
разработки
выберем
рекомендуемую
гуглом
android
studio
открывайте
жмите
кнопку
download
android
studio
если
нужна
какаято
специфическая
версия
жмите
download
options
выбирайте
вашу
версию
учитывайте
файл
весить
гигов
итак
скачали
exeфайл
запускаем
жмем
next
пока
спросит
пути
от
требуется
указать
пути
первый
путь
использован
установки
android
studio
второй
установки
android
sdk
давайте
заменим
свои
для
создадим
каталог
android
на
всякий
случай
сделайте
путь
нему
пробелов
русских
символов
например
у
это
и
путь
подставим
визард
жмем
несколько
next
пока
начнется
установка
когда
установка
закончится
запустится
android
studio
если
запустилась
ищите
ярлык
пуске
первым
делом
спросит
импортировать
настройки
прошлой
версии
оставляем
выбранным
нижний
пункт
жмем
ок
у
пока
старых
настроек
далее
появится
визард
установки
жмем
next
тут
оставляем
standard
жмем
next
визард
сообщает
нам
необходимо
загрузить
несколько
компонентов
завершения
установки
жмем
next
пошел
процесс
загрузки
затем
процесс
распаковки
в
итоге
закончит
жмем
finish
открывается
welcome
экран
после
выполнения
этих
шагов
получили
среду
разработки
помощью
которой
кодить
androidприложения
если
чтото
получается
выдает
ошибку
попробуйте
посмотреть
форум
погуглить
наверняка
первый
сталкиваетесь
проблемой
сети
описание
решения
android
studio
периодически
клянчить
скачать
установить
обновления
очень
советую
делать
пока
новичок
вы
обновления
врядли
заметите
какието
новшества
новой
версии
студии
проблемы
создать
немалые
на
следующем
уроке
настроим
android
virtual
device
avd
создадим
наше
первое
приложение
запустим
avd
это
эмулятор
смартфона
операционной
системой
android
котором
запускать
тестировать
приложения
не
подключать
свой
смартфон
каждый
также
рассмотрим
структуру
проекта
приложения
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
code
simple
browser
lessons
lesson
code
simple
browser
last
lesson
saw
browser
would
displayed
http
link
content
launch
intent
action
data
uri
object
http
link
code
simple
browser
ourself
catch
intent
display
web
page
adjust
intent
filter
use
webview
component
first
layout
contain
intent
launching
button
second
contain
webview
create
project
project
name
build
target
android
application
name
simplebrowser
package
name
create
activity
mainactivity
code
mainxml
one
button
screen
lets
code
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidneturi
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
findviewbyidridbtnwebsetonclicklistenernew
onclicklistener
public
void
onclickview
v
startactivitynew
code
little
bit
uncommon
note
determine
button
object
findviewbyid
method
returns
view
object
supporting
setonclicklistener
method
call
within
setonclicklistener
method
create
object
implements
onclicklistener
interface
code
within
onclick
method
also
create
intent
separately
within
startactivity
option
may
suits
launch
intent
means
want
load
clicking
button
create
second
activity
first
code
browserxml
webview
screen
lets
code
browseractivityjava
package
import
androidappactivity
import
androidneturi
import
androidosbundle
import
androidwebkitwebview
public
class
browseractivity
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutbrowser
webview
webview
webview
findviewbyidridwebview
webviewsetwebviewclientnew
webviewclient
uri
data
getintentgetdata
webviewloadurldatatostring
find
webview
extract
data
intent
pass
string
webview
register
activity
within
manifest
add
intent
filter
action
see
several
parameters
data
use
scheme
http
means
uri
object
must
content
httpaddress
forget
category
must
equal
default
set
label
parameter
browseractivity
mybrowser
example
also
must
add
uses
permission
androidpermissioninternet
within
permissions
tab
allow
app
connect
internet
save
launch
app
see
choicedialog
clicking
button
system
suggests
us
choose
system
browser
one
made
means
intent
http
view
request
found
two
activities
declared
within
intentfilters
display
http
links
choose
browser
see
web
page
see
activities
apps
process
actions
also
system
ones
way
become
alternative
system
apps
see
easily
could
use
webview
activity
show
webpage
content
could
use
textview
display
string
value
link
got
data
could
code
httprequest
download
webpage
display
html
content
could
give
damn
http
address
show
random
picture
dark
screen
ie
way
intent
filter
telling
system
activity
able
something
could
created
time
activity
may
display
something
rubbish
question
ethics
adequacy
common
sense
manifest
code
next
lesson
save
data
preferences
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
layoutfile
activity
xml
representation
changing
screen
orientation
lessons
last
lesson
learnt
activity
reads
layoutfile
displays
configured
find
activity
knows
specific
file
read
translated
taras
leskiv
lesson
rotate
screen
version
emulator
successfully
used
using
testing
applications
bug
rotate
screen
please
remember
lesson
create
one
emulator
version
instance
creating
project
specify
android
version
well
screenshots
made
version
pay
attention
create
new
project
project
name
new
wizard
slightly
different
tick
one
screen
name
class
see
method
implemented
invoked
application
creates
displays
activity
ignore
oncreateoptionsmenu
look
implementation
superoncreatesavedinstancestate
open
view
file
change
r
class
generated
ids
project
resources
folder
stored
could
refer
names
constants
resource
file
names
without
extensions
open
see
inside
run
application
see
happens
everything
correct
activity
displays
specified
mainxml
try
display
content
another
file
create
one
layoutfile
myscreenxml
instance
select
folder
project
click
button
creating
new
file
wizard
open
obligatory
save
file
new
constant
appear
file
rlayoutmyscreen
save
run
application
see
displays
content
myscreenxml
explicitly
specified
setcontentview
method
invoked
activity
created
oncreate
open
mainxml
see
visual
representation
kind
preview
look
screen
see
two
tabs
graphical
layout
mainxml
open
mainxml
see
quite
readable
xmldescription
view
elements
layoutfile
names
xmlelements
classes
viewelements
xmlattributes
parameters
viewelements
change
properties
tab
also
make
changes
right
displayed
graphical
layout
example
change
text
textview
instead
link
constant
specify
text
default
configure
layoutfile
vertical
screen
orientation
happen
rotate
smartphone
horizontal
orientation
turns
look
change
myscreenxml
add
vertical
row
buttons
change
inscription
xmlcode
copy
paste
file
screen
run
application
everything
fine
vertical
orientation
press
emulator
screen
orientation
changed
horizontal
buttons
fit
screen
version
emulator
glitches
screen
orientation
change
always
work
need
one
layoutfile
made
horizontal
orientation
case
display
buttons
horizontally
notify
activity
vertical
orientation
use
one
layoutfile
horizontal
another
android
creators
already
solved
issue
us
must
create
folder
create
layoutfile
inside
name
folder
file
used
horizontal
orientation
create
folder
right
click
res
new
folder
folder
name
layoutland
click
finish
create
file
configure
landscape
orientation
identically
first
time
click
button
file
creation
wizard
open
enter
name
file
myscreenxml
wizard
complain
destination
file
already
exists
destination
file
already
exists
looks
earlier
created
file
specify
new
file
must
go
folder
click
next
manually
add
suffix
land
get
variant
able
add
suffix
manually
add
orientation
attribute
left
column
specify
value
landscape
wizard
would
understood
everything
right
added
land
suffix
added
path
manually
wizard
added
attribute
right
click
finish
file
ready
put
xmlcode
file
save
get
screen
screen
run
application
activity
reads
layoutfile
specified
parameter
setcontentview
myscreenxml
displays
content
switch
orientation
activity
understands
horizontal
orientation
looks
myscreenxml
layoutland
folder
uses
lesson
explored
activity
knows
layout
file
read
configured
activity
read
another
file
next
lesson
learn
main
types
layouts
linearlayout
tablelayout
relativelayout
absolutelayout
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
architecture
components
поиск
это
набор
решений
google
которые
помогут
разработке
приложений
я
разработал
бесплатный
курс
теме
он
охватывает
следующие
подтемы
architecture
components
предоставляют
несколько
механизмов
сочетание
которых
позволит
удобно
обрабатывать
повороты
экрана
lifecycle
отслеживает
текущий
статус
activity
уведомлять
своих
подписчиков
livedata
получает
хранит
данные
отправлять
своим
подписчикам
viewmodel
поможет
сохранить
живыми
необходимые
объекты
повороте
экрана
полезные
ссылки
теме
room
удобная
обертка
работы
базой
данных
paging
library
библиотека
постраничной
загрузки
данных
базы
данных
сервера
любого
другого
источника
избавит
написания
кучи
кода
работе
view
его
удобно
использовать
viewmodel
новый
компонент
навигации
экранам
приложения
новый
механизм
выполнения
фоновых
задач
обсуждать
темы
нашем
после
теоретических
уроков
планирую
поразбирать
интересные
примеры
которых
используются
компоненты
список
уроков
курс
бесплатен
если
желание
выразить
благодарность
используйте
яндексформу
спасибо
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
intent
intent
filter
context
theory
lessons
lesson
look
throught
code
lesson
theory
intent
intent
filter
little
context
translated
taras
leskiv
previous
lesson
created
application
consists
two
activities
remind
create
activity
need
create
class
extends
androidappactivity
create
activitytag
manifestfile
specify
class
created
name
field
hope
previous
lesson
complicated
comfortable
activity
creation
procedure
pay
attention
activity
invocation
code
intent
intent
new
intentthis
activitytwoclass
startactivityintent
used
intent
object
read
information
quite
complicated
understanding
scratch
try
explain
words
case
intent
object
specify
activity
need
invoke
pass
intentobject
startactivity
method
finds
corresponding
activity
shows
creating
intent
used
intentcontext
packagecontext
class
cls
constructor
two
parameters
first
parameter
remember
created
view
one
previous
lessons
also
used
context
object
activity
subclass
context
use
activity
context
object
short
context
object
grants
access
basic
application
functions
access
resources
file
system
activity
invocation
etc
guess
future
explore
examples
see
explicitly
context
used
used
second
parameter
class
name
remind
creating
activity
specify
class
name
manifestfile
specify
class
intent
system
look
corresponding
activity
manifestfile
show
check
easily
delete
record
activity
manifestfile
try
invoke
afterwards
open
project
previous
lesson
open
manifestfile
application
tab
delete
record
activitytwo
using
remove
button
save
everything
run
application
try
invoke
activity
using
activity
button
error
occur
check
log
see
following
text
androidcontentactivitynotfoundexception
unable
find
explicit
activity
class
declared
activity
androidmanifestxml
logs
logcat
tab
eclipse
visible
go
window
show
view
android
folder
logcat
system
tells
us
found
activity
class
kindly
hints
us
may
declared
manifest
file
register
activity
manifestfile
save
everything
run
application
must
work
invoking
activity
intent
explicit
invocation
using
class
explicitly
specify
activity
would
like
see
usually
used
inside
one
application
illustrated
following
way
create
intent
pass
class
parameter
invoke
startactivity
method
created
intent
parameter
method
checks
activity
present
androidmanifest
yes
displays
activity
bounds
single
application
also
implicit
activity
invocation
difference
creating
intent
use
class
object
fill
action
data
category
parameters
specific
values
combination
values
defines
goal
trying
accomplish
example
sending
letter
opening
link
editing
text
viewing
image
calling
specific
number
byturn
specify
intent
filter
activity
set
parameters
action
data
category
values
depend
activity
capable
parameters
intent
match
conditions
filter
activity
invoked
search
goes
activities
system
several
activities
found
system
gives
choice
application
exactly
would
like
use
illustrated
following
intent
created
action
data
category
parameters
filled
name
set
parameters
convenience
using
startactivity
intent
sent
look
appropriate
activity
able
accomplish
need
defined
different
applications
system
several
activities
intent
filter
defined
sets
startactivity
method
matches
set
parameters
intent
sets
parameters
intent
filter
activity
sets
match
activity
considered
appropriate
end
one
activity
found
displayed
several
activities
found
user
given
list
choose
application
use
example
several
music
players
installed
system
open
file
system
show
list
activities
able
play
music
ask
choose
one
use
activities
edit
text
show
pictures
make
calls
ignored
intent
filter
activity
picture
case
intent
parameters
fit
way
activity
also
ignored
trying
find
analogy
intent
compared
key
intent
filter
lock
hides
awesome
activity
gradually
find
nuances
mechanism
values
using
fill
action
data
category
intent
intent
filter
important
understand
case
implicit
invocation
one
application
sends
intent
applications
check
parameters
activity
intent
filter
intent
basic
concept
android
system
without
used
activity
talk
later
wanted
write
introductory
words
came
quite
detailed
explanation
illustrations
examples
hope
managed
deliver
idea
intent
concept
lessons
practice
make
knowledge
solid
next
lesson
activity
lifecycle
activity
behavior
creation
invocation
closing
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lessons
lessons
good
afternoon
introductory
lesson
code
anything
lesson
enlighten
reasons
decided
create
site
write
programs
need
development
environment
google
recommends
use
eclipse
purpose
android
development
tools
adt
plugin
lesson
look
detail
install
configure
development
environment
test
applications
need
android
virtual
device
avd
android
smartphone
emulator
eclipse
install
launch
applications
create
look
screen
content
composed
android
applications
last
lesson
learnt
activity
reads
layoutfile
displays
configured
find
activity
knows
specific
file
read
positioning
viewelements
screen
depends
viewgroup
layout
inside
located
lesson
observe
main
types
layouts
lesson
examine
screen
properties
explore
layout
parameters
height
width
margin
gravity
weight
lesson
learn
refer
viewelements
screen
code
change
properties
lesson
learn
process
button
clicks
find
listener
learn
use
one
listener
several
viewelements
teach
activity
act
listener
lesson
find
folder
needed
store
use
lesson
look
application
logs
toast
messages
lesson
create
menu
items
lesson
create
menu
items
ids
group
sort
menu
items
lesson
create
context
menu
lesson
create
layout
programmatically
using
layoutfiles
lesson
add
components
screen
application
running
lesson
change
layoutparameters
already
existing
screen
components
lesson
write
calculator
application
lesson
explore
animation
viewcomponents
page
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
первые
уроков
pdf
поиск
первые
уроков
pdf
первая
сотня
уроков
вышла
pdfсборнике
книжка
получилась
аж
страниц
есть
оглавление
виде
закладок
навигацией
ок
шрифт
достаточно
крупный
вполне
читать
телефона
на
планшете
выглядит
красиво
скачать
регистрации
upd
появились
формата
книги
спасибо
ярославу
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
log
username
password
secret
key
remember
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
folder
using
application
resources
lessons
lesson
find
folder
needed
store
use
translated
taras
leskiv
res
folder
different
application
resources
stored
already
good
knowledge
layoutfiles
folder
also
mentioned
folder
density
suffixes
images
stored
pay
attention
folder
intended
resources
constants
storage
look
string
color
types
create
project
project
name
target
android
name
resvaluespackage
name
rustartandroiddevelopresvaluescreate
activity
mainactivity
open
file
see
two
elements
string
type
hello
used
default
text
property
textview
mainxml
correspondingly
textview
displays
value
element
used
default
title
application
activity
constant
used
manifestfile
familiar
yet
click
elements
see
represent
right
name
value
name
id
must
unique
constant
generated
rjava
could
access
stringelement
code
look
xml
inside
stringsxml
file
tab
bottom
mainxml
see
everything
clear
simple
try
using
resources
begin
create
layout
mainxml
screen
divided
two
equal
parts
contain
linearlayout
button
textview
specify
background
color
linearlayout
change
text
textview
button
implement
using
resources
configure
viewelements
top
part
manually
using
properties
bottom
part
programmatically
create
resource
file
values
folder
name
myres
creating
file
editor
opens
simple
add
element
click
add
button
choose
type
write
name
value
right
create
stringelements
colorelements
input
text
manually
practice
copy
text
myresxml
forget
save
file
look
rjava
make
sure
everything
appeared
ok
resources
created
configure
viewelements
use
elements
top
beginning
lltop
find
background
property
properties
click
selection
button
ellipsis
color
branch
highlight
lltopcolor
click
ok
tvtop
text
property
open
selection
window
find
tvtoptext
btntop
text
property
open
selection
window
find
btntoptext
color
top
part
screen
changed
inscriptions
changed
specified
myresxml
change
bottom
part
screen
write
code
first
find
elements
set
values
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
linearlayout
llbottom
linearlayout
findviewbyidridllbottom
textview
tvbottom
textview
findviewbyidridtvbottom
button
btnbottom
button
findviewbyidridbtnbottom
llbottomsetbackgroundresourcercolorllbottomcolor
tvbottomsettextrstringtvbottomtext
btnbottomsettextrstringbtnbottomtext
note
changing
text
settext
method
used
settext
used
setting
text
directly
method
takes
id
parameter
use
rjava
stores
resource
ids
see
methods
name
different
parameters
java
save
run
check
texts
colors
taken
resource
file
change
contents
myresxml
text
upper
button
instance
save
run
application
see
changes
sometimes
required
get
value
resource
code
id
accomplished
way
getresourcesgetstringrstringtvbottomtext
expression
return
text
corresponds
string
resource
name
tvbottomtext
conclusion
tell
words
files
organization
storing
resources
created
string
color
resources
single
file
myresxml
recommended
split
different
files
eg
stringsxml
colorsxml
follow
recommendation
reasons
evidence
future
resource
names
prevailing
files
folder
cannot
create
resource
name
type
different
files
name
resource
files
wish
create
many
files
need
constants
resources
files
generated
rjava
next
lesson
look
application
logs
toast
messages
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
об
авторе
поиск
меня
зовут
дмитрий
я
автор
уроков
сайта
startandroid
мои
интересы
это
компы
гаджеты
спорт
моей
основной
специализацией
раньше
разработка
сфере
продуктов
компании
sap
для
тех
теме
основном
работал
интеграционной
шиной
sap
pi
но
кроме
пришлось
поработать
abap
обоими
webdynpro
bsp
также
немного
зацепил
data
services
bpm
за
время
работы
москве
поучаствовал
проектах
таких
популярных
консалта
контор
русал
лукойл
лореаль
сабмиллер
евросеть
мвидео
если
сферы
sap
вполне
могли
гденить
пересекаться
но
момент
стало
это
неинтересно
ушел
androidразработку
сейчас
senior
android
developer
берлинской
компании
свободное
работы
время
продолжаю
вести
сайт
большинство
уроков
бесплатны
но
времени
написание
уходит
немало
поэтому
статьи
оказались
полезны
возможность
желание
оценить
мою
работу
используйте
реквизиты
левой
части
сайта
либо
купите
платных
курсов
этим
очень
поддержите
спасибо
при
возникновении
какихлибо
вопросов
используйте
подробнее
моем
опыте
навыках
посмотреть
linkedin
о
происходит
моей
жизни
помимо
андроид
стараюсь
писать
своем
личном
telegram
там
мои
мысли
игры
фильмы
спорт
текущие
события
тп
в
других
соцсетях
о
моем
опыте
поиска
работы
германии
почитать
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
layout
types
key
differences
properties
lessons
positioning
viewelements
screen
depends
viewgroup
layout
inside
located
lesson
observe
main
types
layouts
translated
taras
leskiv
linearlayout
displays
viewelements
single
row
horizontal
single
column
vertical
used
previous
lesson
demonstrating
usage
layoutfiles
screen
orientation
change
tablelayout
displays
elements
form
table
rows
columns
relativelayout
position
configured
relatively
elements
absolutelayout
element
specified
absolute
position
screen
coordinate
system
x
lets
observe
types
type
viewgroup
set
default
creating
new
layoutfiles
really
convenient
flexible
enough
create
screens
different
complexity
orientation
property
defines
child
elements
positioned
vertical
horizontal
line
make
simple
clear
example
create
project
project
name
target
android
name
layoutspackage
name
rustartandroiddeveloplayoutscreate
activity
mainactivity
open
mainxml
layoutfile
place
following
code
inside
linearlayout
vertical
orientation
root
element
drag
three
buttons
left
root
linearlayout
positioned
horizontally
change
orientation
property
horizontal
properties
save
buttons
positioned
horizontally
viewgroup
inserted
another
viewgroup
place
two
one
delete
elements
mainxml
three
buttons
except
root
specify
vertical
orientation
root
add
two
new
horizontal
inside
located
layouts
section
list
elements
left
let
remind
drag
drop
elements
list
screen
also
specific
element
outline
tab
add
three
buttons
inside
horizontal
got
two
horizontals
rows
buttons
tablelayout
consists
rows
tablerow
tr
tr
contains
view
elements
form
columns
number
views
tr
number
columns
number
columns
table
must
equal
rows
different
trs
different
numbers
viewelements
columns
overall
number
columns
defined
tr
maximum
number
observe
example
create
layoutfile
tlayoutxml
tablelayout
root
element
add
three
tablerow
rows
root
tablelayout
layouts
section
left
add
two
buttons
row
result
table
got
three
rows
two
columns
add
buttons
first
row
number
columns
equals
defined
row
maximum
number
elements
first
row
case
second
third
rows
third
fourth
columns
empty
add
textview
button
second
row
make
text
added
textview
empty
third
row
see
elements
placed
third
fourth
column
textview
empty
seen
screen
seems
like
third
column
second
third
rows
empty
width
column
defined
widest
element
column
enter
text
one
textviews
see
made
column
wider
remove
elements
fourth
column
build
screen
like
try
exercise
tl
contain
trs
also
simple
views
example
add
button
tl
tr
see
stretches
width
whole
table
type
layout
viewelement
positioned
specific
way
relatively
specified
viewelement
types
relationships
left
right
specified
element
aligned
left
right
top
bottom
edge
specified
element
aligned
left
right
top
bottom
edge
parent
centered
vertically
centered
horizontally
centered
vertically
horizontally
relative
parent
details
available
create
rlayoutxml
copy
paste
xmlcode
relativelayout
root
element
get
screen
interested
xmlcode
shortly
describe
unknown
attributes
meanings
android
word
name
element
omit
explanations
id
element
id
width
element
height
element
specified
absolute
values
following
maximum
available
width
height
bounds
parent
width
height
defined
content
element
help
states
also
reasons
developers
system
decided
name
convenient
stop
using
soon
left
compatibility
remember
trying
use
later
stop
analyze
detail
get
back
elements
example
see
textview
edittext
two
buttons
ok
cancel
look
attributes
interested
textview
occupies
available
width
even
though
visible
screen
height
defined
content
related
anything
edittext
occupies
available
height
defined
located
textview
reference
id
width
defined
content
height
defined
content
located
aligned
right
edge
margin
left
adjacent
width
defined
content
height
defined
content
located
left
aligned
top
edge
add
elements
experiment
locations
pay
attention
view
element
id
androidid
example
usually
needed
textview
times
static
rarely
refer
application
edittext
different
work
text
field
content
button
need
process
clicks
know
exactly
button
pressed
future
see
one
reason
specify
id
viewelement
provides
absolute
positioning
elements
screen
specify
coordinates
left
top
corner
component
create
alayoutxml
absolutelayout
root
element
try
add
different
elements
dragging
screen
aligned
linearlayout
tablelayout
placed
dragged
absolute
positioning
open
xmlcode
note
specifying
coordinates
properties
used
first
might
think
convenient
intuitive
method
placing
elements
screen
placed
wherever
want
case
develop
screen
specific
resolution
look
application
screen
elements
shifted
positioning
different
planned
recommended
use
layout
compatibility
future
android
versions
guaranteed
viewgroup
types
master
one
one
enough
lesson
looked
main
types
layouts
linearlayout
tablelayout
relativelayout
absolutelayout
next
lesson
examine
layoutproperties
viewelements
detail
allow
us
configure
location
viewgroup
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
optimizing
event
listeners
implementation
lessons
learn
use
one
listener
several
viewelements
teach
activity
act
listener
translated
taras
leskiv
create
project
project
name
target
android
name
listenerpackage
name
rustartandroiddeveloplistenercreate
activity
mainactivity
working
view
previous
lesson
mainxml
code
textview
text
two
buttons
make
content
textview
change
button
clicked
previous
lesson
ok
button
clicked
show
text
button
cancel
button
button
time
implement
using
one
listener
process
clicks
buttons
remind
mechanism
processing
event
button
click
example
button
cannot
process
click
needs
listener
assigned
using
setonclicklistener
method
button
clicked
listener
reacts
runs
code
onclick
method
need
perform
following
steps
implementation
create
listener
implement
onclick
method
assign
listener
button
case
assign
one
listener
multiple
buttons
define
inside
listener
button
clicked
prepare
objects
create
listener
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
create
listener
onclicklistener
oclbtn
new
onclicklistener
public
void
onclickview
v
todo
autogenerated
method
stub
lets
implement
onclick
method
passed
view
object
parameter
exactly
need
view
clicked
invoked
listener
case
would
either
ok
cancel
button
thing
left
find
id
view
compare
ridbtnok
ridbtncancel
define
button
get
id
view
use
method
go
results
use
java
operator
onclick
method
implementation
public
void
onclickview
v
define
button
invoked
listener
id
switch
vgetid
case
ridbtnok
ok
button
button
break
case
ridbtncancel
cancel
button
button
break
run
application
check
clicking
buttons
nothing
happen
created
listener
assign
buttons
assign
listener
buttons
btnoksetonclicklisteneroclbtn
btncancelsetonclicklisteneroclbtn
run
check
everything
work
fine
already
understand
one
listener
assigned
two
buttons
number
buttons
viewelements
also
different
events
require
listeners
later
working
important
understand
event
processing
done
difference
implementation
previous
lesson
created
one
listenerobject
buttons
previous
lesson
two
listener
objects
one
button
rule
less
objects
create
better
memory
allocated
object
quite
limited
resource
especially
mobile
devices
creating
one
listener
several
views
better
optimization
point
view
also
amount
code
reduced
becomes
readable
one
way
creating
listener
require
creating
object
use
object
already
created
activity
button
assigened
listener
using
method
means
object
implements
fits
make
activity
object
make
activity
implement
viewonclicklistener
interface
fill
oncreate
method
create
new
project
purpose
project
name
target
android
name
activitylistenerpackage
name
rustartandroiddevelopactivitylistenercreate
activity
mainactivity
use
layout
prepare
objects
add
interface
implementation
implements
onclicklistener
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
onclicklistener
underlined
red
present
import
section
press
ctrl
shift
choose
viewonclicklistener
eclipse
underlines
mainactivity
happening
mainactivity
implements
interface
implement
methods
yet
correct
using
eclipse
place
cursor
mainactivity
choose
add
unimplemented
methods
eclipse
add
onclick
method
already
familiar
method
implemented
activity
separate
listener
object
activity
act
listener
correspondingly
implement
method
exactly
previous
time
nothing
changed
also
passed
view
event
happened
parameter
define
view
exactly
id
perform
corresponding
actions
public
void
onclickview
v
define
button
invoked
listener
id
switch
vgetid
case
ridbtnok
ок
button
button
break
case
ridbtncancel
cancel
button
button
break
thing
left
assign
listener
buttons
object
current
mainactivity
object
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
created
unnecessary
objects
implementation
activity
created
anyway
memory
expenditure
minimal
preferred
method
implementation
may
seem
complicated
incomprehensible
especially
small
experience
objectoriented
programming
case
use
implementation
understandable
convenient
understanding
come
sure
time
experience
complete
code
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
find
viewelements
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
assign
listeners
buttons
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
define
button
invoked
listener
id
switch
vgetid
case
ridbtnok
ок
button
button
break
case
ridbtncancel
cancel
button
button
break
one
way
implementing
listener
layoutfile
mainxml
describing
button
write
using
attribute
attribute
specify
name
method
activity
method
invoked
button
clicked
add
method
inisde
activity
mainactivityjava
method
requirements
public
void
receives
view
object
parameter
public
void
onclickstartview
v
actions
button
clicked
write
actions
need
inside
method
performed
button
clicked
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
виды
layouts
ключевые
отличия
свойства
поиск
полный
список
расположение
viewэлементов
экране
зависит
viewgroup
layout
которой
находятся
в
уроке
рассмотрим
основные
виды
layout
linearlayout
отображает
viewэлементы
виде
одной
строки
horizontal
одного
столбца
vertical
я
использовал
это
прошлом
уроке
демонстрировал
использование
layoutфайлов
смене
ориентации
tablelayout
отображает
элементы
виде
таблицы
строкам
столбцам
relativelayout
каждого
элемента
настраивается
положение
относительно
других
элементов
absolutelayout
каждого
элемента
указывается
явная
позиция
экране
системе
координат
xy
рассмотрим
виды
этот
вид
viewgroup
умолчанию
предлагается
создании
новых
layoutфайлов
он
действительно
удобен
достаточно
гибок
создавать
экраны
различной
сложности
имеет
свойство
orientation
которое
определяет
будут
расположены
дочерние
элементы
горизонтальной
вертикальной
линией
сделаем
простой
наглядный
пример
создайте
проект
project
name
target
android
name
layoutspackage
name
rustartandroiddeveloplayoutscreate
activity
mainactivity
откроем
layoutфайл
mainxml
поместите
следующий
код
теперь
корневой
элемент
linearlayout
вертикальной
ориентацией
перетащите
слева
корневой
linearlayout
кнопки
они
выстроились
вертикально
теперь
properties
меняем
свойство
orientation
horizontal
сохраняем
кнопки
выстроились
горизонтально
groupview
вкладывать
друг
друга
вложим
других
удалите
mainxml
элементы
кнопки
кроме
корневого
ориентацию
корневого
укажем
вертикальную
добавим
новых
горизонтальных
в
списке
элементов
слева
находятся
разделе
layouts
напоминаю
можете
перетаскивать
элементы
списка
экран
конкретный
элемент
вкладке
outline
в
каждый
горизонтальный
добавим
кнопки
получилось
горизонтальных
ряда
кнопок
убедитесь
горизонтальных
linearlayout
высота
height
установлена
tl
состоит
строк
tablerow
tr
каждая
tr
очередь
содержит
viewэлементы
формирующие
столбцы
те
колво
view
tr
это
колво
столбцов
но
колво
столбцов
таблице
должно
равным
строк
поэтому
разных
tr
разное
колво
viewэлементов
столбцов
общее
колво
определяется
tr
максимальным
колвом
рассмотрим
примере
создадим
layoutфайл
tlayoutxml
корневым
элементом
tablelayout
добавим
корневой
tablelayout
tablerowстроки
раздела
layouts
слева
каждую
строку
добавим
две
кнопки
результат
наша
таблица
имеет
строки
столбца
добавим
первую
строку
пару
кнопок
колво
столбцов
строк
равно
тк
оно
определяется
строке
максимальным
колвом
элементов
те
первой
строке
для
второй
третьей
строки
третий
четвертый
столбцы
просто
ничем
заполнены
во
вторую
строку
добавим
textview
button
текст
добавленном
textview
сделаем
пустым
в
третьей
строке
сделаем
самое
мы
видим
элементы
легли
третий
четвертый
столбец
и
тк
textview
текста
экране
виден
кажется
третий
столбец
второй
третьей
строке
пустой
ширина
столбца
определяется
самому
широкому
элементу
столбца
введем
текст
textview
видим
расширил
столбец
я
уберу
элементы
четвертого
столбца
построю
экран
попробуйте
сами
сделать
качестве
упражнения
tl
содержать
tr
обычные
view
добавьте
например
button
прямо
tl
tr
увидите
растянулась
ширину
всей
таблицы
в
виде
layout
каждый
viewэлемент
расположен
определенным
образом
относительно
указанного
viewэлемента
виды
отношений
слева
справа
сверху
снизу
указанного
элемента
выравненным
левому
правому
верхнему
нижнему
краю
указанного
элемента
выравненным
левому
правому
верхнему
нижнему
краю
родителя
выравненным
центру
вертикально
центру
горизонтально
центру
вертикально
горизонтально
относительно
родителя
подробно
почитать
создадим
rlayoutxml
скопируем
туда
xmlкод
здесь
корневой
элемент
relativelayout
получился
экран
нам
интересен
xmlкод
сразу
кратко
опишу
незнакомые
атрибуты
значения
слово
android
названии
каждого
атрибута
это
буду
опускать
объяснениях
id
это
id
элемента
ширина
элемента
высота
элемента
могут
задаваться
абсолютных
значениях
могут
следующими
максимально
возможная
ширина
высота
пределах
родителя
ширина
высота
определяется
содержимому
элемента
в
указывается
это
самое
по
какимто
причинам
разработчики
системы
решили
название
удобнее
постепенно
будут
отказываться
а
пока
оставили
совместимости
так
запомните
дальнейшем
будем
стараться
использовать
позже
остановимся
разберем
подробнее
сейчас
вернемся
нашим
элементам
в
примере
видим
textview
edittext
button
ok
cancel
давайте
подробно
разберем
интересующие
атрибуты
textview
занимает
доступную
ширину
это
видно
экране
высота
содержимому
чему
никак
относится
edittext
вся
доступная
высота
расположен
ниже
textview
ссылка
id
ширина
содержимому
высота
содержимому
расположен
ниже
выравнен
правому
краю
имеет
отступ
слева
впритык
ширина
содержимому
высота
содержимому
расположен
слева
выравнен
верхнему
краю
вы
можете
подобавлять
элементы
поэкспериментировать
размещением
обратите
внимание
viewэлемента
id
androidid
например
textview
обычно
нужен
тк
чаще
статичны
обращаемся
работе
приложения
другое
дело
edittext
работаем
содержимым
текстового
поля
button
нам
обрабатывать
нажатия
соответственно
знать
именно
кнопка
нажата
в
будущем
увидим
одну
необходимость
задания
id
viewэлемента
обеспечивает
абсолютное
позиционирование
элементов
экране
вы
указываете
координаты
левого
верхнего
угла
компонента
создадим
alayoutxml
корневым
absolutelayout
теперь
попробуйте
перетаскиванием
подобавлять
различные
элементы
экран
они
выстраиваются
linearlayout
tablelayout
ложатся
перетащили
те
это
абсолютное
позиционирование
открываем
xmlкод
видим
задания
координат
используются
поначалу
кажется
это
наиболее
удобный
интуитивно
понятный
способ
расположения
элементов
экране
сразу
располагаются
но
это
случае
разрабатываете
экрана
конкретным
разрешением
если
открыть
такое
приложение
другом
экране
элементы
сместятся
получится
планировали
поэтому
layout
рекомендуется
использовать
и
совместимость
будущими
версиями
android
гарантируется
есть
viewgroup
постепенно
будем
осваивать
а
пока
нам
хватит
этих
в
уроке
рассмотрели
основные
виды
layout
linearlayout
tablelayout
relativelayout
absolutelayout
на
следующем
уроке
рассмотрим
подробно
некоторые
layoutсвойства
viewэлементов
которые
позволяют
настраивать
расположение
viewgroup
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
installing
configuring
development
environment
eclipse
sdk
tools
lessons
write
programs
need
development
environment
google
recommends
use
eclipse
purpose
android
development
tools
adt
plugin
lesson
look
detail
install
configure
development
environment
translated
taras
leskiv
describe
installation
windows
operating
system
using
manual
installation
system
requirements
reading
lesson
recommend
look
sdk
article
includes
many
screenshots
instructions
consider
software
versions
changed
frequently
everything
may
look
different
computer
versions
different
program
development
java
download
install
appropriate
sdk
also
called
jdk
already
installed
course
download
version
seven
appeared
recently
say
anything
people
think
quite
raw
recommend
using
reliable
version
six
java
platform
standard
edition
press
jdk
download
tick
checkbox
accept
licence
agreement
download
file
according
operating
system
problems
installing
java
sdk
installation
reboot
computer
two
ways
get
ready
development
ide
wich
consists
eclipse
ide
android
sdk
adt
first
one
download
download
platforms
adt
bundle
choose
link
version
extract
run
eclipse
run
sdk
manager
menu
window
android
sdk
manager
go
item
number
lesson
download
platformes
second
way
want
install
configure
manually
read
android
sdk
includes
tools
necessary
android
application
development
download
tools
download
platforms
sdk
tools
choose
link
operation
system
recommended
download
exe
file
propose
download
zipversion
extract
convenient
folder
note
directory
better
move
folder
anywhere
would
reconfigure
development
environment
recommend
creating
directory
android
somewhere
highly
recommended
path
directory
short
would
perfect
refer
directory
extract
archive
directory
get
fancy
convenient
development
environment
build
create
take
google
recommends
us
eclipse
classic
version
accept
proposal
download
version
extract
archive
default
eclipse
really
good
suited
android
application
development
adt
plugin
configures
environment
use
android
sdk
enables
convenient
development
launch
eclipse
launch
eclipse
first
time
ask
working
directory
store
project
files
propose
walk
far
away
create
directory
choose
ok
eclipse
running
download
adt
plugin
go
help
install
new
software
press
add
button
upper
right
corner
enter
name
field
enter
url
address
location
field
press
ok
wait
developer
tools
appear
troubles
use
http
instead
https
tick
developer
tools
press
next
see
components
installed
press
next
read
accept
licence
agreement
click
finish
download
components
starting
security
warning
authenticity
validity
software
established
pops
click
ok
computer
process
lasted
approximately
minute
finished
restart
eclipse
restart
restarting
eclipse
shows
following
dialog
first
item
reason
download
install
sdk
second
step
instructions
eclipse
additionally
download
latest
android
platform
also
offers
download
platform
widely
supported
platform
interested
second
item
allows
us
point
extracted
step
press
next
window
appear
choose
whether
send
statistic
google
influence
work
choose
yes
click
finish
informed
sdk
platform
tools
component
missing
offer
us
go
sdk
manager
download
press
ok
launch
sdk
manager
proposed
choose
components
download
via
internet
right
side
component
stated
whether
downloaded
ok
download
obligatory
download
contents
tools
folder
downloaded
yet
also
extras
folder
end
list
tick
android
support
library
item
android
versions
need
tick
sdk
platform
take
account
platform
weight
mb
work
system
administrator
come
first
lessons
need
platforms
api
api
download
platforms
versions
choose
sdk
platform
arm
eabi
system
image
work
emulator
enough
traffic
add
items
platformsamples
sdk
source
code
sample
applicationsgoogle
apis
google
inc
needed
would
like
work
google
applications
maps
navigation
etc
care
traffic
tick
everything
wait
long
time
would
weigh
one
gigabyte
selected
everything
click
install
x
packages
bottom
right
corner
new
window
accept
want
download
accept
also
see
size
components
reject
press
install
indicator
displayed
log
opened
choice
components
waiting
minutes
process
phrase
done
loading
packages
appeared
installation
finished
close
log
sdk
manager
info
new
components
weighted
gb
restart
eclipse
performing
steps
got
development
environment
code
android
applications
maybe
actions
may
seem
dull
boring
unfortunately
cannot
avoid
much
fun
something
work
error
pops
try
googling
sure
first
one
facing
problem
already
solution
internet
write
forum
next
lesson
setup
android
virtual
device
avd
eclipse
create
first
application
launch
avd
smartphone
emulator
android
operating
system
run
test
applications
point
connecting
smartphone
time
also
look
application
structure
ps
following
window
appear
accidentally
closed
everything
fine
specify
sdk
directory
manually
eclipse
go
windows
preferences
choose
android
left
click
browse
specify
directory
extracted
sdk
click
apply
told
component
missing
close
message
click
ok
got
window
popped
informs
want
improve
product
send
google
usage
statistics
always
change
preferences
left
tick
greedy
go
sdk
manager
eclipse
go
window
android
sdk
manager
download
platforms
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
lesson
creating
starting
activity
lessons
lesson
create
invoke
second
activity
application
translated
taras
leskiv
reached
interesting
topic
previous
lessons
creating
applications
included
one
screen
activity
use
android
smartphone
probably
noticed
usually
screens
application
explore
example
mail
application
following
screens
list
accounts
list
messages
message
settings
etc
high
time
us
create
multiple
screen
applications
create
project
project
name
build
target
android
application
name
twoactivity
package
name
create
activity
mainactivity
open
mainxml
create
screen
activity
one
button
clicking
launch
second
screen
open
mainactivityjava
write
following
code
package
import
androidappactivity
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
activity
implements
onclicklistener
button
btnacttwo
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnacttwo
button
findviewbyidridbtnacttwo
btnacttwosetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtnacttwo
todo
call
second
activity
break
default
break
defined
button
btnacttwo
assigned
activity
listener
onclick
method
implementation
filled
partially
define
button
clicked
little
bit
later
invoke
second
screen
first
create
screen
remember
creating
project
activity
created
default
need
specify
name
activity
usually
write
mainactivity
look
going
pening
already
know
class
name
mainactivityjava
created
responsible
activity
behavior
activity
also
registered
system
using
manifestfile
androidmanifestxml
open
file
interested
application
tab
see
mainactivity
left
expand
see
intent
filter
specific
parameters
know
used
running
little
ahead
tell
androidintentactionmain
informs
system
activity
main
displayed
first
application
launched
androidintentcategorylauncher
means
application
listed
device
android
application
list
right
name
field
mainactivity
written
name
class
responsible
job
also
considered
activity
name
want
create
one
activity
create
class
register
activity
androidmanifestxml
create
class
right
click
package
inside
project
folder
choose
new
class
class
window
appeared
enter
name
class
activitytwo
superclass
androidappactivity
activitytwo
class
created
empty
implement
oncreate
method
invoked
activity
created
package
import
androidappactivity
import
androidosbundle
public
class
activitytwo
extends
activity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
also
lack
setcontentview
method
invocation
specifies
fill
screen
method
requires
layoutfile
parameter
lets
create
layout
folder
folder
mainxml
located
name
file
twoxml
fill
file
following
code
activity
screen
display
textview
activity
two
text
use
twoxml
file
setcontentview
method
inside
activitytwojava
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayouttwo
add
highlighted
code
save
everything
activitytwo
class
ready
created
show
screen
configured
twoxml
layoutfile
need
register
activity
manifest
open
androidmanifestxml
application
tab
click
add
button
window
appeared
choose
item
create
new
element
top
level
choice
choose
activity
list
press
ok
activity
created
appeared
list
thing
left
point
class
responsible
work
right
name
field
manually
write
name
class
created
activitytwo
click
browse
choose
activity
list
wait
short
time
list
formed
need
fill
anything
else
save
everything
two
activities
registered
manifest
points
class
thing
left
go
back
mainactivityjava
finish
onclick
button
click
method
implementation
invoke
activitytwo
open
mainactivityjava
add
following
lines
case
ridbtnacttwo
intent
intent
new
intentthis
activitytwoclass
startactivityintent
break
add
highlighted
code
update
imports
ctrl
shift
save
everything
run
launch
application
mainactivity
appears
press
button
go
activitytwo
explain
activity
invocation
code
give
theory
lesson
already
quite
complicated
lots
text
screenshots
reality
procedure
short
may
quite
complicated
eventually
master
create
new
activities
different
projects
good
try
repeat
sequence
mind
understand
activity
creation
need
create
class
extends
androidappactivity
register
manifestfile
next
lesson
look
code
lesson
theory
intent
intent
filter
omit
topic
important
little
bit
context
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
хранение
данных
sqlite
поиск
полный
список
в
уроке
хранение
данных
помощью
sqlite
на
прошлом
уроке
рассмотрели
самый
простой
способ
хранения
данных
preferences
но
способ
достаточно
ограничен
хранения
большого
количества
структурированных
данных
неудобен
на
уроке
рассмотрим
это
база
данных
таблицами
запросами
обычных
бд
для
начала
немного
теории
взаимодействию
приложения
бд
в
приложении
подключении
бд
указываем
имя
бд
версию
при
могут
возникнуть
следующие
ситуации
бд
существует
это
например
случае
первичной
установки
программы
в
случае
приложение
должно
само
создать
бд
таблицы
и
далее
оно
работает
созданной
бд
бд
существует
версия
устарела
это
случае
обновления
программы
например
новой
версии
программы
нужны
дополнительные
поля
старых
таблицах
новые
таблицы
в
случае
приложение
должно
апдейтить
существующие
таблицы
создать
новые
это
необходимо
бд
существует
версия
актуальна
в
случае
приложение
успешно
подключается
бд
работает
как
понимаете
фраза
равнозначна
фразе
те
это
наша
задача
для
обработки
описанных
выше
ситуаций
нам
создать
класс
являющийся
наследником
назовем
dbhelper
этот
класс
предоставит
нам
методы
создания
обновления
бд
случаях
отсутствия
устаревания
oncreate
метод
который
вызван
бд
которой
хотим
подключиться
существует
onupgrade
вызван
случае
пытаемся
подключиться
бд
новой
версии
существующая
давайте
накидаем
простое
приложение
справочник
контактов
которое
хранить
имя
email
вводить
данные
будем
экране
приложения
отображения
информации
используем
логи
обычно
используется
list
список
тему
пока
знаем
да
хочется
перегружать
приложение
главное
освоить
приемы
работы
бд
создадим
проект
project
name
build
target
android
application
name
simplesqlite
package
name
create
activity
mainactivity
нарисуем
экран
ввода
записей
очистки
таблицы
открываем
mainxml
пишем
пара
полей
ввода
кнопки
добавления
записи
вывода
существующих
записей
очистки
таблицы
открываем
mainactivityjava
пишем
package
import
androidappactivity
import
androidcontentcontentvalues
import
androidcontentcontext
import
androiddatabasecursor
import
androiddatabasesqlitesqlitedatabase
import
androiddatabasesqlitesqliteopenhelper
import
androidosbundle
import
androidutillog
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
import
androidwidgetedittext
public
class
mainactivity
extends
activity
implements
onclicklistener
final
string
button
btnadd
btnread
btnclear
edittext
etname
etemail
dbhelper
dbhelper
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
btnadd
button
findviewbyidridbtnadd
btnaddsetonclicklistenerthis
btnread
button
findviewbyidridbtnread
btnreadsetonclicklistenerthis
btnclear
button
findviewbyidridbtnclear
btnclearsetonclicklistenerthis
etname
edittext
findviewbyidridetname
etemail
edittext
findviewbyidridetemail
создаем
объект
создания
управления
версиями
бд
dbhelper
new
dbhelperthis
public
void
onclickview
v
создаем
объект
данных
contentvalues
cv
new
contentvalues
получаем
данные
полей
ввода
string
name
etnamegettexttostring
string
email
etemailgettexttostring
подключаемся
бд
sqlitedatabase
db
dbhelpergetwritabledatabase
switch
vgetid
case
ridbtnadd
insert
mytable
подготовим
данные
вставки
виде
пар
наименование
столбца
значение
name
email
вставляем
запись
получаем
id
long
rowid
null
cv
inserted
id
rowid
break
case
ridbtnread
rows
mytable
делаем
запрос
данных
таблицы
mytable
получаем
cursor
cursor
c
null
null
null
null
null
null
ставим
позицию
курсора
первую
строку
выборки
выборке
строк
вернется
false
cmovetofirst
определяем
номера
столбцов
имени
выборке
int
idcolindex
int
namecolindex
int
emailcolindex
получаем
значения
номерам
столбцов
пишем
лог
cgetintidcolindex
name
cgetstringnamecolindex
email
cgetstringemailcolindex
переход
следующую
строку
следующей
текущая
последняя
false
выходим
цикла
cmovetonext
else
cclose
break
case
ridbtnclear
clear
mytable
удаляем
записи
int
clearcount
null
null
rows
count
clearcount
break
закрываем
подключение
бд
dbhelperclose
class
dbhelper
extends
sqliteopenhelper
public
dbhelpercontext
context
конструктор
суперкласса
supercontext
null
public
void
oncreatesqlitedatabase
db
oncreate
database
создаем
таблицу
полями
table
mytable
integer
primary
key
public
void
onupgradesqlitedatabase
db
int
oldversion
int
newversion
куча
новых
незнакомых
слов
коде
давайте
разбираться
в
методе
activity
oncreate
определяем
объекты
присваиваем
обработчики
создаем
объект
dbhelper
класса
dbhelper
управления
бд
сам
класс
описан
ниже
далее
смотрим
метод
activity
onclick
котором
обрабатываем
нажатия
кнопки
класс
используется
указания
полей
таблицы
значений
которые
поля
будем
вставлять
мы
создаем
объект
cv
позже
используем
далее
записываем
переменные
значения
полей
ввода
затем
помощью
метода
подключаемся
бд
получаем
объект
он
позволит
нам
работать
бд
мы
будем
использовать
методы
insert
вставка
записи
query
чтение
delete
удаление
у
разных
параметров
вход
пока
используем
самый
минимум
далее
смотрим
кнопка
нажата
btnadd
добавление
записи
таблицу
mytable
мы
заполняем
объект
cv
парами
имя
поля
значение
и
вставке
записи
таблицу
указанные
поля
будут
вставлены
соответствующие
значения
мы
заполняем
поля
name
email
id
заполнится
автоматически
primary
key
autoincrement
вызываем
метод
передаем
имя
таблицы
объект
cv
вставляемыми
значениями
второй
аргумент
метода
используется
вставке
таблицу
пустой
строки
нам
это
нужно
поэтому
передаем
null
метод
insert
возвращает
id
вставленной
строки
сохраняем
rowid
выводим
лог
btnread
чтение
записей
таблицы
mytable
для
чтения
используется
метод
на
вход
подается
имя
таблицы
список
запрашиваемых
полей
условия
выборки
группировка
сортировка
тк
нам
нужны
данные
полях
сортировок
группировок
используем
везде
null
только
имя
таблицы
указываем
метод
возвращает
нам
объект
класса
его
рассматривать
таблицу
данными
метод
делает
первую
запись
cursor
активной
заодно
проверяет
вообще
записи
нем
те
выбралось
чтолибо
методе
query
далее
получаем
порядковые
номера
столбцов
cursor
именам
помощью
метода
эти
номера
используем
чтения
данных
методах
выводим
данные
лог
с
помощью
метода
перебираем
строки
cursor
пока
добираемся
последней
если
записей
выводим
лог
соответствующее
сообщение
rows
в
конце
закрываем
курсор
освобождаем
занимаемые
ресурсы
методом
тк
далее
нигде
используем
btnclear
очистка
таблицы
метод
удаляет
записи
на
вход
передаем
имя
таблицы
null
качестве
условий
удаления
значит
удалится
метод
возвращает
колво
удаленных
записей
после
закрываем
соединение
бд
методом
класс
dbhelper
является
вложенным
mainactivity
описан
конце
кода
как
писал
выше
класс
должен
наследовать
класс
sqliteopenhelper
в
конструкторе
вызываем
конструктор
суперкласса
передаем
context
контекст
mydb
название
базы
данных
null
объект
работы
курсорами
нам
пока
нужен
поэтому
null
версия
базы
данных
в
методе
oncreate
класса
используем
метод
execsql
объекта
sqlitedatabase
выполнения
sqlзапроса
который
создает
таблицу
напомню
метод
вызывается
бд
существует
создавать
по
запросу
видно
создаем
таблицу
mytable
полями
id
name
email
метод
onupgrade
пока
заполняем
тк
используем
одну
версию
бд
менять
планируем
все
сохраним
запустим
приложение
будем
работать
бд
смотреть
логи
которые
покажут
какие
методы
выполняются
происходит
введем
чегонить
поля
ввода
нажмем
add
смотрим
лог
oncreate
database
insert
mytable
row
inserted
id
мы
видим
вызывался
метод
oncreate
классе
dbhelper
значит
выполнялся
скрипт
созданию
таблицы
это
произошло
это
первый
запуск
приложения
бд
создана
теперь
бд
существует
работать
далее
видим
вызывался
метод
вставки
записи
вернул
id
вставим
какуюнибудь
запись
смотрим
лог
insert
mytable
row
inserted
id
на
oncreate
вызывался
тк
бд
существует
вставилась
запись
id
давайте
посмотрим
содержимое
таблицы
нажмем
кнопку
read
посмотрим
лог
rows
mytable
id
name
john
smith
email
id
name
body
email
мы
видим
записи
которые
вставляли
тут
верно
теперь
очистим
таблицу
нажмем
clear
смотрим
лог
clear
mytable
deleted
rows
count
удалено
две
записи
верно
если
посмотрим
содержимое
таблицы
кнопка
read
rows
mytable
rows
записей
в
теме
важно
понять
работы
бд
использовали
класса
dbhelper
наследующий
sqliteopenhelper
в
конструкторе
вызываем
конструктор
суперкласса
указываем
имя
версию
бд
метод
getwritabledatabase
выполняет
подключение
базе
данных
возвращает
нам
объект
sqlitedatabase
работы
метод
close
закрывает
подключение
бд
в
случае
бд
отсутствует
устарела
класс
предоставляет
нам
самим
реализовать
создание
обновление
методах
oncreate
onupgrate
sqlitedatabase
содержит
методы
работы
данными
те
вставка
обновление
удаление
чтение
файл
базы
найти
file
explorer
прошлом
уроке
путь
нему
на
следующем
уроке
продолжим
это
приложение
добавим
возможность
обновления
удаления
конкретных
записей
я
своих
примерах
выполняю
операции
базой
данных
основном
потоке
я
делаю
усложнять
урок
но
реале
следует
использовать
работы
бд
отдельный
поток
ваше
приложение
тормозило
визуально
о
это
сделать
пишу
уроках
на
следующем
уроке
используем
методы
query
delete
указанием
условия
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
layout
параметры
viewэлементов
поиск
полный
список
на
уроке
разбираемся
характеристиках
экрана
рассматриваем
layout
параметры
высота
ширина
отступ
гравитация
вес
для
начала
немного
теории
экранам
экран
имеет
такие
физические
характеристики
диагональ
разрешение
диагональ
это
расстояние
противоположными
углами
экрана
обычно
измеряется
дюймах
разрешение
колво
точек
горизонтали
вертикали
которое
экран
способен
отобразить
измеряется
пикселах
возьмем
качестве
примера
экран
смартфона
htc
desire
диагональ
дюйма
разрешение
пикселей
колво
пикселей
одном
дюйме
называется
dpi
dot
per
inch
узнаем
чему
равно
dpi
данном
случае
вспомнив
классику
колво
пикселей
диагонали
те
вмещаемое
дюйма
b
стороны
экрана
c
dpi
dpi
те
одном
дюйме
экрана
помещается
ряд
пикселей
возвращаемся
теме
урока
рассмотрим
подробно
следующие
параметры
view
элементов
про
ширину
высоту
немного
говорили
прошлом
уроке
мы
можем
указывать
абсолютные
значения
можем
использовать
константы
разберем
подробнее
возможности
абсолютные
значения
используются
следующие
еи
dp
dip
densityindependent
pixels
абстрактная
еи
позволяющая
приложениям
выглядеть
одинаково
различных
экранах
разрешениях
sp
scaleindependent
pixels
то
dp
используется
размеров
шрифта
view
элементах
pt
дюйма
определяется
физическому
размеру
экрана
эта
еи
px
пиксел
рекомендуется
использовать
тк
разных
экранах
приложение
выглядеть
поразному
mm
миллиметр
определяется
физическому
размеру
экрана
дюйм
определяется
физическому
размеру
экрана
подробней
различиях
соотношениях
этими
еи
можете
прочесть
сайта
означает
элемент
займет
доступную
родительском
элементе
элемента
определяться
содержимым
создадим
проект
project
name
build
target
android
application
name
layoutprop
package
name
rustartandroiddeveloplayoutprop
create
activity
mainactivity
открываем
mainxml
настроим
корневой
linearlayout
горизонтальную
ориентацию
удалим
textview
добавим
button
шириной
высотой
равной
она
отображается
экране
ширина
соответствует
тексту
изменим
текст
button
button
text
сохраним
посмотрим
экран
кнопка
стала
шире
тк
ширина
определяется
содержимому
если
явно
укажем
ширину
dp
кнопка
растянется
независимо
содержимого
теперь
сделаем
ширину
равной
кнопка
растянулась
ширину
родителя
те
linearlayout
а
linearlayout
очередь
занимет
ширину
экрана
если
родитель
содержит
несколько
элементов
хотим
заняли
пространство
необходимо
использовать
параметр
layout
weight
вес
свободное
пространство
распределяется
элементами
пропорционально
weightзначениям
изменим
текст
нашей
кнопки
добавим
соседа
linearlayout
вторую
кнопку
текстом
ширину
обоих
поставьте
займемся
дележом
если
хотим
кнопки
поделили
пространство
родителя
поровну
обеих
укажем
weight
в
случае
кнопки
равны
ширине
обратите
внимание
используются
единицы
измерения
указываются
просто
числа
если
нужно
занимала
четверть
четверти
свободного
пространства
проставляем
weight
weight
колво
элементов
любым
добавим
кнопку
текстом
weight
width
xmlкод
получившегося
экрана
теперь
укажите
weight
они
претендуют
свободное
пространство
занимают
ширину
содержимому
забирает
разумеется
выше
сказанное
применимо
параметра
высоты
height
при
использовании
weight
можете
указать
значение
height
width
в
случае
учитываться
содержимое
элементов
результат
соответствующий
коэффициентам
веса
параметр
аналогичен
выравниванию
word
excel
удобнее
продемонстрировать
использованием
framelayout
я
описывал
layout
прошлом
уроке
тк
простой
все
помещаемые
элементы
умолчанию
помещает
левый
верхний
угол
никак
выстраивает
нам
это
очень
подходит
демонстрации
настроек
выравнивания
создадим
grlayoutxml
top
top
bottom
bottom
на
экране
видим
для
наглядности
текст
кнопки
отображает
свойства
все
очевидно
несложно
я
честно
пытался
понять
нужны
значения
gravity
понял
то
написано
хелпе
работает
если
сведения
этому
поводу
пишите
каменты
параметры
margin
полностью
аналогичны
margin
html
это
отступ
он
сторон
сразу
либо
необходимых
сторон
продемонстрируем
это
примере
tablelayout
создадим
marginlayoutxml
нарисуем
таблицу
кнопками
и
кнопке
центре
будем
экспериментировать
margin
dpвокруг
кнопки
сторон
образовался
отступ
dp
margin
left
dp
margin
top
dpотступ
слева
сверху
margin
right
dpmargin
bottom
dpотступ
справа
снизу
урок
получился
большой
полезный
думаю
это
последний
урок
дизайна
моделирования
верстки
дальше
начнем
кодить
если
использовал
html
наверняка
слышали
каскадные
стили
css
стили
позволяют
группировать
атрибуты
элементов
кнопок
таблиц
параграфов
тд
далее
просто
применяете
элементам
стили
элемент
рисуется
учетом
атрибутов
стиля
и
необходимости
повторять
несколько
код
элементов
которые
должны
выглядеть
одинаково
особенно
это
удобно
случае
изменения
атрибутов
вы
просто
меняете
стиль
элементы
этим
стилем
меняются
в
android
стили
имеют
точно
такое
назначение
если
несколько
элементов
выглядели
одинаково
просто
создаете
стиль
применяете
нужным
элементам
в
принципе
пока
можете
заморачиваться
этим
начать
использовать
стили
наберетесь
опыта
ну
кому
это
интересно
прямо
прошу
нашего
форума
пользователь
icamys
примере
подробно
разъясняет
использовать
стили
на
следующем
уроке
научимся
обращаться
viewэлементам
кода
менять
свойства
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
пишем
простой
калькулятор
поиск
полный
список
в
уроке
пишем
приложение
калькулятор
попробуем
написать
простейший
калькулятор
который
берет
числа
проводит
ними
операции
сложения
вычитания
умножения
деления
результат
отображает
виде
полного
выражения
создадим
проект
project
name
build
target
android
application
name
simplecalculator
package
name
rustartandroiddevelopsimplecalculator
create
activity
mainactivity
откроем
mainxml
нарисуем
экран
тут
поля
ввода
кнопки
текстовое
поле
вывода
обратите
внимание
атрибут
inputtype
edittext
он
задает
тип
содержимого
я
указал
numberdecimal
те
поле
получится
ввести
цифры
запятую
буквы
пропустит
это
удобно
самому
кодить
различные
проверки
для
textview
указан
атрибут
gravity
он
указывает
расположен
текст
textview
не
путайте
который
отвечает
размещение
textview
viewgroup
теперь
нам
читать
содержимое
полей
определять
какую
кнопку
нажали
выводить
нужный
результат
открываем
mainactivityjava
пишем
код
public
class
mainactivity
extends
activity
implements
onclicklistener
edittext
edittext
button
btnadd
button
btnsub
button
btnmult
button
btndiv
textview
tvresult
string
oper
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
находим
элементы
edittext
edittext
btnadd
button
findviewbyidridbtnadd
btnsub
button
findviewbyidridbtnsub
btnmult
button
findviewbyidridbtnmult
btndiv
button
findviewbyidridbtndiv
tvresult
textview
findviewbyidridtvresult
прописываем
обработчик
btnaddsetonclicklistenerthis
btnsubsetonclicklistenerthis
btnmultsetonclicklistenerthis
btndivsetonclicklistenerthis
public
void
onclickview
v
todo
autogenerated
method
stub
float
float
float
result
проверяем
поля
пустоту
return
читаем
edittext
заполняем
переменные
числами
определяем
нажатую
кнопку
выполняем
соответствующую
операцию
oper
пишем
операцию
будем
использовать
выводе
switch
vgetid
case
ridbtnadd
oper
result
break
case
ridbtnsub
oper
result
break
case
ridbtnmult
oper
result
break
case
ridbtndiv
oper
result
break
default
break
формируем
строку
вывода
oper
result
думаю
понятно
каментам
читаем
значения
определяем
кнопку
выполняем
операцию
выводим
текстовое
поле
обработчиком
нажатий
кнопки
выступает
activity
все
сохраним
запустим
давайте
большего
функционала
сделаем
меню
пунктами
очистки
полей
выхода
приложения
пункты
будут
называться
reset
quit
добавим
две
константы
это
будут
id
пунктов
меню
public
class
mainactivity
extends
activity
implements
onclicklistener
final
int
final
int
edittext
добавляете
строки
и
напишем
код
создания
обработки
меню
создание
меню
public
boolean
oncreateoptionsmenumenu
menu
return
superoncreateoptionsmenumenu
обработка
нажатий
пункты
меню
public
boolean
onoptionsitemselectedmenuitem
item
switch
itemgetitemid
case
очищаем
поля
break
case
выход
приложения
finish
break
return
superonoptionsitemselecteditem
сохраним
запустим
появилось
пункта
меню
reset
очищает
поля
quit
закрывает
приложение
в
качестве
самостоятельной
работы
можете
реализовать
проверку
деления
ноль
и
выводить
какоенить
сообщение
помощью
toast
прямо
поле
результата
на
следующем
уроке
рассмотрим
анимацию
viewкомпонентов
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
введение
поиск
полный
список
добрый
день
это
уроквведение
здесь
пока
кодить
будем
распишу
причины
которые
побудили
создать
сайт
я
начал
свое
знакомство
разработкой
android
примеров
официальном
сайте
половину
делал
понимал
но
какието
знания
оттуда
вынес
немного
почитал
теории
ресурсе
на
мое
знакомство
android
завершилось
я
знал
двигаться
дальше
про
книги
почемуто
подумал
зря
позже
наткнулся
статью
five
best
android
development
books
интерес
снова
появился
стало
понятно
двигаться
начал
читать
книги
понял
гораздо
первых
примеров
но
читать
такие
книги
полностью
нуля
многое
очевидно
непонятно
поэтому
хочу
попытаться
создать
уроки
android
начинающих
читателя
спиной
оставалось
непонятных
я
постараюсь
максимально
подробно
объяснять
делать
различные
примеры
большей
наглядности
с
каждым
новым
уроком
буду
вводить
использовать
новые
понятия
объекты
использовать
объекты
прошлых
уроков
закрепления
каждый
урок
стараюсь
делать
максимально
независимым
обособленным
зайти
посмотреть
нужную
тему
просматривать
кучу
лишнего
примеры
стараюсь
подбирать
наиболее
четко
отображающие
тему
урока
в
отличие
некоторых
авторов
собираюсь
научить
программированию
мы
понимаем
это
невозможно
я
знаю
сколько
получится
уроков
думаю
хватит
около
сотни
дать
весь
базис
достаточно
подробно
а
сотня
уйдет
различные
продвинутые
фишки
в
общем
начинает
изучать
скорее
придется
бегать
другим
сайтам
кроме
официального
хелпа
дополнительными
знаниями
здесь
найдете
полезной
последовательной
изложенной
простым
языком
информации
надо
понимать
мои
уроки
это
руководство
именно
я
могу
чемто
пренебречь
чтото
упустить
показать
тему
урока
давать
лишний
материал
поэтому
прошу
считать
изложенное
уроках
единственно
правильным
способом
реализации
если
возникают
проблемы
android
сайта
замечательный
который
рад
помочь
новичкам
разобраться
самых
простых
вопросах
правда
защищен
спамеров
контрольным
вопросом
ответить
зарегиться
сможете
прочитав
первые
пять
уроков
это
вынужденная
защита
зато
момента
введения
вопроса
форум
проник
спамер
на
данный
момент
уроки
охватывают
темы
создание
экрана
редакторе
программно
обработчики
нажатия
логи
всплывающие
сообщения
обычное
меню
контекстное
меню
анимация
viewкомпонентов
создание
вызов
activity
возврат
результата
activity
lifecycle
состояния
activity
intent
intent
filter
хранение
данных
preferences
sqlite
список
адаптеры
диалоги
parcel
parcelable
preferences
хранении
настроек
приложения
работа
файлами
tab
вкладки
парсинг
xml
асинхронность
handler
asynctask
сервисы
content
provider
обработка
касаний
мультитач
фрагменты
action
bar
actionmode
виджеты
ключи
подпись
приложения
viewpager
воспроизведение
звука
видео
запись
звука
работа
камерой
сенсоры
gps
google
maps
рисование
я
продолжаю
читать
книги
уроки
будут
появляться
пока
буду
развиваться
в
итоге
думаю
придем
тому
станем
достаточно
продвинутыми
разработчиками
востребованными
рынке
в
общем
говорит
клоун
зомбоящика
будет
интересно
на
следующем
уроке
установим
настроим
среду
разработки
androidприложений
ps
разработка
ведется
java
также
могут
понадобиться
знания
sql
xml
прочих
смежных
технологий
считается
знакомы
ними
если
прочесть
гугл
периодически
выпускает
обновления
android
среды
разработки
поэтому
вполне
возможно
содержимое
урока
немного
устарело
реальная
картинка
отличается
скринов
если
это
отличие
кардинально
примеры
работают
пишите
форуме
ветке
урока
будем
актуализировать
если
отличие
цвете
фона
приложения
размере
шрифта
это
критично
посыл
урока
влияет
также
замечено
поведение
кода
разных
версиях
системы
различным
я
проверял
работоспособность
материалов
уроков
возможных
версиях
поэтому
ваши
результаты
могут
отличаться
моих
pps
иногда
звучат
высказывания
большинство
уроков
сделаны
android
вышел
android
версии
например
уроки
устарели
один
чудик
както
вообще
написал
уроки
состоят
deprecated
методов
очень
люблю
комментировать
чушь
начинающих
выскажу
свое
мнение
поводу
дилетантства
я
могу
каждым
выходом
новой
версии
андроида
переделывать
уроки
тем
переделывать
подавляющее
большинство
уроков
останется
прежними
отлично
работать
любой
версии
к
тому
доля
устройств
android
пока
достаточно
велика
ею
пренебречь
и
ваших
приложениях
будете
минимальную
версию
указывать
потерять
целый
сегмент
пользователей
так
понимаю
смысл
кипиша
да
такое
выходом
новых
версий
некоторые
уроки
действительно
кардинально
устаревают
обновлять
это
например
коснулось
урока
сделал
обновление
отдельном
уроке
но
постоянно
отслеживать
обновлять
целый
урок
изза
метод
ужасужас
deprecated
это
тяжко
не
забывайте
занимаюсь
сайтом
свое
свободное
время
и
потрачу
написание
новых
материалов
отслеживание
фикс
устаревших
методов
гуглохелп
обычно
устаревших
методов
дает
ссылку
новый
метод
так
видите
eclipse
ругается
устаревший
метод
просто
ищете
хелпе
смотрите
заменили
ppps
по
android
studio
ситуация
примерно
та
не
вижу
смысла
переходить
тк
главное
уроках
это
код
среда
разработки
разве
несколько
первых
уроков
продублирую
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
войти
поиск
логин
пароль
секретный
код
запомнить
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
создание
avd
первое
приложение
структура
androidпроекта
поиск
полный
список
для
тестировать
приложения
нам
понадобится
android
virtual
device
avd
это
эмулятор
androidсмартфона
который
сможем
устанавливать
созданные
нами
приложения
запускать
давайте
создадим
урок
обновлен
на
прошлом
уроке
установили
среду
разработки
android
sdk
теперь
наконецто
можем
создать
наше
первое
приложение
посмотреть
оно
работает
чтобы
создать
приложение
нам
нужно
android
studio
создать
проект
при
создании
проекта
нем
создается
модуль
в
модуле
рисуем
экраны
приложения
пишем
код
и
запуске
модуля
получаем
готовое
приложение
поэтому
модуль
сути
является
приложением
а
проект
контейнер
модуля
те
самом
простом
случае
структура
проекта
такова
есть
проект
нем
модуль
при
запуске
проекта
запускается
модуль
получаем
androidприложение
которое
создано
модуле
в
случае
проект
одно
androidприложение
модуль
но
одном
проекте
несколько
модулей
да
проектов
создать
несколько
здесь
первом
проекте
созданы
модуля
втором
проекте
модуля
при
запуске
какоголибо
проекта
необходимо
указать
именно
модуль
хотите
запустить
и
каждый
модуль
является
отдельным
androidприложением
те
случае
проект
несколько
androidприложений
несколько
модулей
пока
будем
вдаваться
детали
предложенных
схем
удобнее
для
прохождения
уроков
создать
проект
нем
создавать
модули
каждого
урока
либо
создавать
отдельный
проект
например
каждые
уроков
можно
вообще
создавать
отдельный
проект
каждый
урок
я
думаю
начнем
варианта
проект
уроки
а
временем
освоитесь
сами
решите
вариант
удобнее
давайте
создадим
проект
открываем
android
studio
ярлык
запуска
должен
меню
пуск
либо
можете
открыть
папку
устанавливали
android
studio
прошлом
уроке
в
подпапке
bin
должен
exeфайл
открылась
среда
разработки
жмем
start
new
android
studio
project
появилось
окно
создания
проекта
давайте
заполнять
application
name
имя
проекта
оно
отображаться
списке
проектов
открытии
android
studio
напишем
android
lessons
те
android
уроки
company
domain
имя
сайта
пишем
startandroidru
package
name
это
понятие
java
подробно
посмотреть
вкратце
это
префикс
имени
классов
нашего
приложения
как
видите
пакет
автоматически
составился
имени
сайта
имени
проекта
его
отредактировать
вручную
нажав
ссылку
edit
справа
project
location
папка
компе
будут
находиться
файлы
проекта
мы
прошлом
уроке
создавали
папку
android
установили
android
studio
sdk
там
создайте
папку
androidstudioprojects
папке
будем
хранить
проекты
android
studio
и
создайте
папку
androidlessons
нашего
текущего
проекта
скорее
понятно
это
нормально
волнуйтесь
в
каждом
уроке
буду
подсказывать
заполнять
этих
полях
временем
понимание
придет
жмем
next
визард
спрашивает
какую
платформу
будем
кодить
minimum
sdk
минимальная
версия
android
которой
запустить
приложение
оставляем
жмем
next
визард
подгрузить
необходимые
компоненты
жмем
next
далее
выберите
empty
activity
жмем
next
здесь
меняем
пока
нам
необходимости
знать
это
нужно
жмем
finish
проект
создается
далее
открывается
студия
после
открытия
показывать
подсказки
если
нужны
выключайте
чекбокс
жмем
close
студия
открылась
но
снизу
виден
прогресс
бар
это
означает
выполняются
какие
действия
подождать
и
итоге
проект
открывается
нам
сразу
открыты
редактирование
некоторые
файлы
в
менять
будем
пока
необходимости
в
левой
части
видим
слово
app
это
модуль
по
умолчанию
создании
проекта
создается
модуль
app
нам
интересен
тк
будем
создавать
свои
модули
но
пусть
остается
удалять
советую
тот
визард
который
прошли
создании
проекта
основном
касался
модуля
итак
проект
создан
теперь
создадим
проекте
свой
модуль
повторюсь
каждого
урока
будем
создавать
модуль
проекте
сейчас
создадим
модуль
приложение
текущего
урока
эта
процедура
частично
похожа
создание
проекта
небольшими
отличиями
чтобы
создать
модуль
меню
выбираем
file
new
new
module
тип
модуля
выбираем
phone
tablet
application
жмем
next
заполняем
поля
name
непосредственно
имя
приложения
которое
отображаться
списке
приложений
смартфоне
пишем
firstproject
module
name
это
название
модуля
те
это
название
отображаться
слева
списке
модулей
app
давайте
придумаем
шаблон
названия
модулей
например
проекта
на
номер
урока
выделим
цифры
номер
проекта
одну
также
будем
добавлять
название
приложения
firstproject
и
это
напишем
маленькими
буквами
пробелов
получится
такое
имя
модуля
package
name
имя
пакета
отредактируем
вручную
нажав
edit
справа
оставим
rustartandroid
добавим
точку
имя
модуля
minimum
sdk
оставляйте
изменений
жмем
next
далее
выберите
empty
activity
жмем
next
здесь
меняем
жмем
finish
ждем
через
какоето
время
модуль
создан
увидим
списке
слева
это
значение
которое
указали
поле
module
name
можно
раскрыть
модуль
посмотреть
содержимое
вкратце
пройдемся
интересующим
элементам
файл
androidmanifestxml
манифест
конфигфайл
приложения
в
папке
java
подпапках
весь
написанный
нами
код
приложения
папка
res
используется
файловресурсов
различного
типа
все
это
будем
дальнейшем
использовать
станет
понятнее
нужно
давайте
наконецто
запустим
наше
первое
приложение
для
выбрать
соответствующий
модуль
выпадающем
списке
сверху
и
жмем
правее
списка
кнопку
зеленым
треугольником
либо
комбинацию
чтобы
запустить
приложение
нужно
какоенить
реальное
androidустройство
эмулятор
у
пока
запускать
приложение
можете
подключить
шнуром
реальное
устройство
оно
появится
возникнет
проблем
драйверами
настройками
устройства
либо
создать
эмулятор
жмем
create
new
virtual
device
здесь
выбрать
формфактор
устройства
оставляйте
выбрано
умолчанию
жмем
next
далее
переходите
вкладку
images
должен
образ
названии
которого
слова
download
те
загружен
можем
использовать
в
данном
случае
эмулятор
установлен
android
версии
если
нужна
другая
версия
загружайте
используйте
жмем
next
далее
нам
предлагают
указать
название
эмулятора
поменять
настройки
оставляем
жмем
finish
в
итоге
списке
устройств
появляется
созданный
эмулятор
можем
использовать
запуска
приложения
жмем
ok
через
какоето
время
вплоть
нескольких
минут
появится
эмулятор
и
нем
начнет
запускаться
android
и
итоге
запустится
наше
приложение
название
заголовке
firstproject
именно
указывали
создании
приложения
те
создали
запустили
ваше
первое
приложение
поздравляю
впереди
сотни
таких
приложений
запусков
если
эмулятор
показал
ваше
приложение
убедитесь
android
studio
эмулятор
для
снизу
слева
нажмите
вкладку
android
monitor
и
списке
устройств
выше
должен
виден
эмулятор
если
эмулятор
списке
приложение
отобразилось
попробуйте
снова
запустить
приложение
нажав
зеленый
треугольник
если
эмулятора
списке
закройте
эмулятор
попробуйте
снова
запустить
приложение
этот
урок
обновлен
июне
а
многие
последующие
уроки
написаны
аж
поэтому
скриншоты
могут
отличаться
ваших
это
нормально
также
должен
предупредить
делал
тестировал
первые
уроки
android
версии
это
указано
начале
уроков
но
это
вовсе
означает
уроки
безнадежно
устарели
читать
смысла
никакого
код
подавляющем
большинстве
случаев
абсолютно
в
новых
версиях
android
добавляются
новые
компоненты
прошлые
обычно
остаются
изменений
достаточно
редко
меняются
объявляются
устаревшими
ps
если
открыт
проект
хотите
снова
увидеть
стартовое
окно
android
studio
меню
выберите
file
close
project
вы
увидите
стартовое
окно
слева
список
ваших
проектов
pss
если
имя
пользователя
русскими
буквами
могут
возникнуть
проблемы
как
решить
прочесть
форуме
урока
если
строка
выше
помогла
попробуйте
решение
на
следующем
уроке
будем
добавлять
наше
приложение
различные
элементы
менять
свойства
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
работаем
элементами
экрана
кода
поиск
полный
список
в
уроке
научимся
обращаться
кода
viewэлементам
экране
менять
свойства
создадим
проект
project
name
build
target
android
application
name
viewbyid
package
name
rustartandroiddevelopviewbyid
create
activity
mainactivity
чтобы
обратиться
элементу
экрана
кода
нам
нужен
id
он
прописывается
либо
properties
либо
layoutфайлах
удобнее
для
id
существует
четкий
формат
означает
это
новый
ресурс
должен
добавиться
rjava
класс
существует
давайте
откроем
mainxml
textview
укажем
id
сохраним
теперь
откроем
rjava
видим
класса
id
появилась
константа
mytext
те
обратиться
написать
ridmytext
она
связана
элементом
textview
можем
использовать
обратиться
элементу
программно
для
нам
понадобится
метод
он
id
возвращает
view
давайте
напишем
вызов
метода
напомню
пока
пишем
наш
код
методе
oncreate
это
метод
который
вызывается
создании
activity
если
непонятно
писать
подсмотреть
конец
урока
выложил
код
откроем
mainactivityjava
строки
вызовом
метода
setcontentview
напишем
view
mytextview
findviewbyidridmytext
если
view
подчеркнуто
красным
скорей
класс
добавлен
секцию
нажмите
автоматического
обновления
импорта
теперь
mytextview
типа
view
это
наш
textview
экране
но
тип
это
предок
textview
остальных
viewэлементов
и
нам
подходит
хотим
проделывать
операции
соответствующие
textview
поэтому
нам
необходимо
view
textview
изменим
наш
код
следующий
textview
mytextview
textview
findviewbyidridmytext
теперь
mytextview
имеет
тип
textview
результат
метода
findviewbyid
преобразуем
view
textview
теперь
можем
применять
mytextview
для
примера
возьмем
метод
сейчас
отображаемый
текст
hello
world
mainactivity
мы
программно
поменяем
new
text
textview
text
сохраняем
запускаем
видим
текст
изменился
добавим
экран
кнопку
button
id
текст
оставим
умолчанию
сохраняем
сохранить
rjava
появится
id
пишем
код
button
mybtn
button
findviewbyidridmybtn
обратите
внимание
совпадает
имя
объекта
id
они
друг
другу
мешают
делать
логичнее
это
остается
ваше
усмотрение
так
кнопку
нашли
давайте
изменим
текст
запустим
приложение
текст
кнопке
поменялся
кнопку
понажимать
происходить
тк
нигде
указывали
делать
нажатии
этим
займемся
следующем
уроке
а
пока
давайте
сделаем
кнопку
неактивной
mybtnsetenabledfalse
мы
поменяли
параметр
enabled
теперь
кнопку
нажать
сохраним
запустим
убедимся
добавим
checkbox
id
по
умолчанию
галочка
стоит
давайте
поставим
программно
используется
метод
setchecked
который
меняет
параметр
checked
checkbox
mychb
checkbox
findviewbyidridmychb
mychbsetcheckedtrue
запустив
приложение
видим
код
сработал
как
видите
несложно
используем
метод
findviewbyid
id
получить
объект
соответствующий
какомулибо
viewэлементу
button
textview
checkbox
далее
вызываем
необходимые
методы
объектов
settext
setenabled
setchecked
в
итоге
должен
получиться
код
package
rustartandroiddevelopviewbyid
import
androidappactivity
import
androidosbundle
import
androidwidgetbutton
import
androidwidgetcheckbox
import
androidwidgettextview
public
class
mainactivity
extends
activity
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
textview
mytextview
textview
findviewbyidridmytext
text
button
mybtn
button
findviewbyidridmybtn
mybtnsetenabledfalse
checkbox
mychb
checkbox
findviewbyidridmychb
mychbsetcheckedtrue
на
следующем
уроке
научимся
обрабатывать
нажатие
кнопки
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
новости
поиск
новости
сегодня
сайту
startandroid
лет
я
написал
немного
текущую
деятельность
планы
вышел
новый
урок
курса
rxjava
урок
retrofit
retrolambdaв
уроке
используем
rxjava
работе
retrofit
сокращаем
количество
кода
помощью
лямбдавыражений
вышел
новый
урок
курса
rxjava
урок
операторы
объединенияв
уроке
подробно
разбираем
отличие
операторов
merge
concat
amb
zip
combinelatest
withlatestfrom
на
примере
выясняем
нужен
flatmap
отличается
concatmap
вышел
новый
урок
курса
dagger
урок
androidinjectionв
уроке
разберемся
работает
механизм
androidinjection
который
позволяет
упростить
inject
activity
fragment
рассмотрим
классы
daggeractivity
daggerfragment
использовании
которых
вашем
коде
вообще
строки
вызовом
метода
inject
кроме
уроках
курсов
rxjava
dagger
появилась
возможность
оставлять
комментарии
вышел
новый
урок
курса
dagger
урок
builderв
уроке
подробно
рассмотрим
билдеры
генерируются
даггером
использовать
свой
билдер
помощью
аннотации
передавать
объекты
компонент
минуя
модули
кроме
рассмотрим
вариант
архитектурного
решения
dagger
mvp
которое
позволит
сохранять
презентер
повороте
экрана
научимся
создавать
сабкомпоненты
помощью
билдеров
аргумента
subcomponents
аннотации
уже
изучили
dagger
пройдите
курс
rxjava
я
время
вернулся
курсу
dagger
с
выходом
новых
версий
библиотеки
появились
новые
возможности
которых
хотел
рассказать
в
четверг
марта
выйдет
урок
котором
подробно
рассмотрим
билдеры
генерируются
даггером
использовать
свой
билдер
помощью
передавать
объекты
компонент
минуя
модули
кроме
рассмотрим
вариант
архитектурного
решения
dagger
mvp
которое
позволит
сохранять
презентер
повороте
экрана
а
следующей
неделе
выйдет
урок
androidinjection
который
призван
упростить
inject
activity
fragment
с
выходом
каждого
нового
урока
цена
курса
dagger
увеличивается
купите
курс
старой
цене
мск
марта
получите
новые
уроки
бесплатно
после
долгого
вынужденного
перерыва
вышел
новый
урок
курса
rxjava
урок
обработка
ошибокв
уроке
обрабатываем
ошибки
помощью
операторов
onerrorreturn
onerrorresumenext
onexceptionresumenext
рассмотрим
перезапустить
observable
помощью
различных
вариантов
оператора
retry
подробно
разберем
работает
оператор
retrywhen
вышел
новый
урок
курса
rxjava
урок
subcribeon
observeonв
уроке
рассмотрим
работает
rxjava
точки
зрения
потоков
научимся
управлять
потоками
помощью
операторов
subscribeon
observeon
на
сайте
также
курс
dagger
в
курсе
урока
практически
полностью
раскрывает
тему
вышел
новый
урок
курса
rxjava
урок
subjectв
уроке
рассмотрим
subject
типы
publishsubject
replaysubject
behaviorsubject
asyncsubject
unicastsubject
serializedsubject
кроме
урок
дополнен
информацией
compositesubscription
вышел
новый
урок
курса
rxjava
урок
hot
сold
observable
connectableobservableв
уроке
подробно
посмотрим
взаимодействие
observable
observer
выясним
отличается
это
взаимодействие
cold
hot
observable
в
течение
урока
нами
будут
рассмотрены
операторы
publish
replay
refcount
cache
класс
connectableobservable
с
наступающим
новым
годом
вышел
это
достаточно
интересная
полезная
тема
которая
последнее
время
слуху
курс
состоит
пока
трех
уроков
которых
рассказываю
самых
основных
понятиях
observale
observer
action
subscription
операторы
в
последующих
двухтрех
уроках
речь
пойдет
observable
subject
работе
потоками
всего
думаю
получится
около
уроков
и
пропустили
сайте
также
небольшой
информативный
на
сайте
появились
уроки
dagger
я
оформил
отдельным
курсом
который
сможете
найти
меню
курсы
ссылка
небольшую
презентацию
курса
перешел
таки
новую
джумлу
в
основном
вроде
работает
связка
форумом
вебадреса
статей
подсветка
кода
возможно
мелочи
какие
остались
буду
допиливать
из
интересных
новшеств
появилась
возможность
отправлять
отчеты
ошибках
уроках
помощью
с
чистой
совестью
продолжу
уроки
первая
сотня
уроков
вышла
pdfсборнике
книжка
получилась
аж
страниц
есть
оглавление
виде
закладок
навигацией
ок
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
оптимизируем
реализацию
обработчиков
поиск
полный
список
в
уроке
научимся
использовать
обработчик
нескольких
viewэлементов
научим
activity
выступать
качестве
обработчика
создадим
проектproject
name
target
android
name
listenerpackage
name
rustartandroiddeveloplistenercreate
activity
mainactivity
будем
работать
теми
view
предыдущем
уроке
код
mainxml
итак
textview
текстом
две
кнопки
как
прошлом
уроке
сделаем
нажатию
кнопки
менялось
содержимое
textview
по
нажатию
кнопки
ok
будем
выводить
текст
нажата
кнопка
ок
нажатию
cancel
нажата
кнопка
cancel
но
сделаем
это
помощью
одного
обработчика
который
обрабатывать
нажатия
обеих
кнопок
напомню
механизм
обработки
событий
примере
нажатия
кнопки
сама
кнопка
обрабатывать
нажатия
умеет
нужен
обработчик
listener
который
присваивается
помощью
метода
setonclicklistener
когда
кнопку
нажимают
обработчик
реагирует
выполняет
код
метода
onclick
соответственно
реализации
необходимо
выполнить
следующие
шаги
создаем
обработчик
заполняем
метод
onclick
присваиваем
обработчик
кнопке
в
нашем
случае
будем
присваивать
обработчик
обеим
кнопкам
внутри
обработчика
определять
именно
кнопка
нажата
подготовим
объекты
создадим
обработчик
public
class
mainactivity
extends
activity
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
создание
обработчика
onclicklistener
oclbtn
new
onclicklistener
public
void
onclickview
v
todo
autogenerated
method
stub
давайте
заполнять
метод
onclick
на
вход
подается
объект
класса
view
это
нам
нужно
это
view
которой
произошло
нажатие
которая
вызвала
обработчик
те
нашем
случае
это
либо
кнопка
ok
либо
cancel
нам
осталось
узнать
id
view
сравнить
нашими
ridbtnok
ridbtncancel
определить
именно
это
кнопка
чтобы
получить
id
какойлибо
view
используется
метод
для
перебора
результатов
используем
javaоператор
реализация
метода
onclick
public
void
onclickview
v
id
определеяем
кнопку
вызвавшую
обработчик
switch
vgetid
case
ridbtnok
кнопка
ок
кнопка
break
case
ridbtncancel
кнопка
cancel
кнопка
break
если
запустить
приложение
проверить
произойдет
обработчик
создали
присвоили
кнопкам
обеим
кнопкам
присваиваем
обработчик
btnoksetonclicklisteneroclbtn
btncancelsetonclicklisteneroclbtn
вот
можем
запускать
проверять
должно
работать
как
понимаете
обработчик
присвоен
двум
любому
количеству
кнопок
и
кнопкам
у
остальных
viewэлементов
различные
события
которые
нуждаются
обработчиках
в
дальнейшем
будем
ними
работать
а
важно
понять
схему
происходит
обработка
событий
отличие
способа
реализации
уроке
прошлого
урока
создали
объектобработчик
обеих
кнопок
прошлом
уроке
объекта
одному
каждой
кнопке
есть
правило
меньше
объектов
создаете
тк
каждый
объект
выделяется
память
это
достаточно
ограниченный
ресурс
особенно
телефонов
поэтому
создавать
обработчик
нескольких
view
это
правильнее
точки
зрения
оптимизации
к
тому
кода
становится
меньше
читать
удобнее
есть
способ
создания
обработчика
который
вовсе
потребует
создания
объектов
будет
использоваться
созданный
объект
activity
кнопка
присваивает
обработчика
помощью
метода
те
подойдет
любой
объект
почему
классу
activity
таким
объектом
мы
просто
укажем
activityкласс
реализует
интерфейс
viewonclicklistener
заполним
метод
oncreate
создадим
новый
проектproject
name
target
android
name
activitylistenerpackage
name
rustartandroiddevelopactivitylistenercreate
activity
mainactivity
экран
снова
возьмем
самый
подготовим
объекты
добавим
реализацию
интерфейса
implements
onclicklistener
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
onclicklistener
подчеркнут
красным
тк
импорте
поэтому
выбираем
viewonclicklistenerтеперь
eclipse
ругается
класс
mainactivity
это
происходит
класса
прописан
интерфейс
реализации
методов
интерфейса
исправим
это
помощью
eclipse
наведите
курсор
mainacivity
выберите
add
unimplemented
methods
eclipse
добавит
знакомый
нам
метод
onclick
только
метод
реализован
activity
отдельном
объектеобработчике
соответственно
activity
выступать
обработчиком
заполним
метод
точно
раньше
ничего
изменилось
ему
вход
подается
view
которой
произошло
событие
id
определим
именно
эта
view
выполним
соответствующие
действия
public
void
onclickview
v
id
определеяем
кнопку
вызвавшую
обработчик
switch
vgetid
case
ridbtnok
кнопка
ок
кнопка
break
case
ridbtncancel
кнопка
cancel
кнопка
break
осталось
методе
oncreate
присвоить
обработчик
кнопкам
это
объект
те
текущий
объект
mainactivity
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
при
реализации
создали
одного
лишнего
объекта
activity
создается
любом
случае
затраты
памяти
минимальны
это
рекомендуемый
метод
но
возможно
способ
покажется
сложным
непонятным
особенно
мало
опыта
объектноориентированном
программировании
в
таком
случае
используйте
ту
реализацию
которая
понятна
удобна
а
временем
опытом
понимание
обязательно
придет
полный
код
public
class
mainactivity
extends
activity
implements
onclicklistener
textview
tvout
button
btnok
button
btncancel
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
найдем
viewэлементы
tvout
textview
findviewbyidridtvout
btnok
button
findviewbyidridbtnok
btncancel
button
findviewbyidridbtncancel
присваиваем
обработчик
кнопкам
btnoksetonclicklistenerthis
btncancelsetonclicklistenerthis
public
void
onclickview
v
id
определеяем
кнопку
вызвавшую
обработчик
switch
vgetid
case
ridbtnok
кнопка
ок
кнопка
break
case
ridbtncancel
кнопка
cancel
кнопка
break
есть
способ
реализации
в
layoutфайле
mainxml
описании
кнопки
пишем
те
используем
атрибут
в
нем
указываем
имя
метода
activity
этот
метод
сработает
нажатии
кнопку
далее
добавляем
метод
activity
mainactivityjava
требования
методу
public
void
вход
принимает
view
public
void
onclickstartview
v
действия
нажатии
кнопку
в
методе
прописываете
необходимые
действия
будут
выполнены
нажатии
кнопки
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
все
курсы
поиск
основные
уроки
сайте
рассчитаны
начинающих
темы
посложнее
оформлены
отдельными
курсами
на
странице
каждого
курса
можете
прочесть
первые
одиндва
урока
приобрести
курс
а
решили
нужны
курсы
странице
купить
докупить
сразу
это
выгоднее
покупать
одному
курсы
будут
доступны
регистрации
сайте
оплаты
если
покупаете
сразу
курсы
стоимость
скидкой
составляет
рублей
с
выходом
новых
уроков
стоимость
курсов
увеличивается
но
читатели
купившие
курсы
автоматически
получат
доступ
новым
урокам
поэтому
темы
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
на
следующие
курсы
предоставлена
скидка
при
возникновении
какихлибо
вопросов
используйте
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
создание
вызов
activity
поиск
полный
список
в
уроке
создадим
вызовем
второе
activity
приложении
урок
обновлен
мы
подобрались
очень
интересной
теме
на
предыдущих
уроках
создавали
приложения
которые
содержали
экран
activity
но
пользуетесь
смартфоном
android
замечали
экранов
приложении
обычно
если
рассмотреть
например
почтовое
приложение
нем
следующие
экраны
список
аккаунтов
список
писем
просмотр
письма
создание
письма
настройки
тд
пришла
нам
пора
научиться
создавать
многоэкранные
приложения
создадим
модуль
name
twoactivitymodule
name
name
откроем
создадим
экран
activity
на
экране
одна
кнопка
нажатию
которой
будем
вызывать
второй
экран
открываем
mainactivityjava
пишем
код
package
import
androidappactivity
import
androidosbundle
import
androidviewview
import
androidviewviewonclicklistener
import
androidwidgetbutton
public
class
mainactivity
extends
appcompatactivity
implements
onclicklistener
button
btnacttwo
called
activity
first
created
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
btnacttwo
button
findviewbyidridbtnacttwo
btnacttwosetonclicklistenerthis
public
void
onclickview
v
switch
vgetid
case
ridbtnacttwo
todo
call
second
activity
break
default
break
мы
определили
кнопку
btnacttwo
присвоили
activity
качестве
обработчика
реализация
метода
onclick
кнопки
пока
заполнена
частично
определяем
кнопка
нажата
чуть
позже
будем
вызывать
второй
экран
но
сначала
второй
экран
создать
если
помните
создании
проекта
умолчанию
создается
activity
от
требуется
указать
имя
activity
обычно
пишем
mainactivity
давайте
разбираться
происходит
мы
знаем
создается
одноименный
класс
mainactivityjava
который
отвечает
поведение
activity
но
кроме
activity
регистрируется
системе
помощью
манифестфайла
androidmanifestxml
давайте
откроем
файл
нас
интересует
тег
application
в
нем
видим
тег
activity
атрибутом
name
mainactivity
в
activity
находится
тег
intentfilter
определенными
параметрами
пока
знаем
это
нам
это
нужно
забегая
вперед
скажу
androidintentactionmain
показывает
системе
activity
является
основной
первой
отображаться
запуске
приложения
а
androidintentcategorylauncher
означает
приложение
отображено
общем
списке
приложений
android
те
манифестфайл
это
чтото
типа
конфигурации
в
нем
можем
указать
различные
параметры
отображения
запуска
activity
целого
приложения
если
файле
информации
activity
которое
хотите
запустить
приложении
получите
ошибку
android
studio
создании
модуля
создала
mainactivity
поместила
манифест
данные
нем
если
надумаем
сами
создать
новое
activity
студия
также
предоставит
нам
визард
который
автоматически
добавит
создаваемое
activity
манифест
давайте
создадим
новое
activity
жмем
правой
кнопкой
package
папке
проекта
выбираем
new
activity
empty
activity
в
появившемся
окне
вводим
имя
класса
activitytwo
layout
жмем
finish
класс
activitytwo
создан
package
import
import
androidosbundle
public
class
activitytwo
extends
appcompatactivity
protected
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
в
setcontentview
сразу
указан
layoutфайл
он
создан
визардом
откройте
заполните
следующим
кодом
activity
экран
отображать
textview
текстом
activity
сохраните
класс
activitytwo
готов
отображении
выведет
экран
настроили
layoutфайле
twoxml
давайте
снова
заглянем
файл
манифеста
появился
тег
activity
атрибутом
name
activitytwo
этот
тег
совершенно
пустой
каких
либо
параметров
настроек
но
пустой
необходим
нам
осталось
вернуться
mainactivityjava
довершить
реализацию
метода
onclick
нажатие
кнопки
именно
прописать
вызов
activitytwo
открываем
mainactivityjava
добавляем
строки
case
ridbtnacttwo
intent
intent
new
intentthis
activitytwoclass
startactivityintent
break
добавляете
строки
обновите
импорт
сохраните
можем
конструкцию
запускать
при
запуске
появляется
mainactivity
нажимаем
кнопку
переходим
activitytwo
код
вызова
activity
пока
объясняю
теорией
гружу
урок
получился
сложным
получилось
текста
скриншотов
самом
деле
процедура
минутная
поначалу
возможно
непонятно
постепенно
втянемся
создадим
штук
новых
activity
разных
проектах
тема
уляжется
голове
пока
попробуйте
несколько
пройти
мысленно
цепочку
действий
усвоить
создания
activity
необходимо
создать
класс
который
наследует
androidappactivity
создать
соответствующую
запись
манифестфайле
на
следующем
уроке
разбираемся
коде
урока
теория
intent
intent
filter
пропустите
тема
очень
важная
немного
context
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
производительность
поиск
на
droidcon
berlin
довелось
послушать
новый
android
profiler
докладчик
google
рассказывал
новых
удобных
инструментах
доступных
разработчикам
мониторинга
сетевых
запросов
потребления
памяти
использования
процессора
это
очень
полезный
интересный
доклад
слушая
понял
тема
очень
важная
обязательно
рассказать
для
большинства
разработчиков
производительность
это
последнее
будут
заниматься
процессе
разработки
приложения
о
производительности
обычно
вспоминают
становится
реальной
проблемой
которой
никак
получается
отмахнуться
но
пользователи
замечают
признаки
плохой
производительности
приложения
гораздо
новые
фичи
наиболее
распространенная
причина
плохих
отзывов
маркете
это
плохая
производительность
баги
поэтому
очень
важно
уделять
внимание
скорости
эффективности
работы
приложения
в
курсе
подробно
разберем
доступные
нам
инструменты
поиска
проблем
производительности
научимся
пользоваться
ими
понимать
данные
которые
нам
предоставляют
более
подробно
можете
прочитать
с
большой
вероятностью
вашем
текущем
проекте
сможете
стать
единоличным
гуру
производительности
тк
мало
разработчиков
всерьез
интересуется
темой
в
ваше
резюме
добавлять
пункт
application
performance
собеседованиях
будете
рассказывать
текущем
проекте
нашли
пофиксили
множество
мемори
ликов
ускорили
старт
приложения
раза
избавились
тормозов
скролле
списка
при
сможете
подробно
описать
какие
именно
действия
предпринимали
какие
инструменты
использовали
все
это
огромным
плюсом
глазах
будущего
работодателя
пару
собеседовании
спрашивали
какие
знаю
инструменты
выявления
проблем
производительности
а
также
просили
перечислить
правила
оптимизации
которых
придерживаюсь
создании
приложений
ну
целом
производительность
это
интересная
тема
можно
увидеть
работу
приложения
изнутри
например
подробный
стек
вызова
методов
указанием
сколько
времени
выполнялся
каждый
метод
или
содержимое
памяти
приложения
какие
объекты
кого
держит
ссылку
или
сетевые
запросы
указанием
содержания
стека
вызова
потока
на
сегодняшний
день
курс
приобрели
человек
первые
урока
доступны
бесплатно
регистрации
прочитав
примете
осознанное
решение
покупке
в
первом
уроке
поговорим
почему
приложения
очень
важна
производительность
обсудим
общую
схему
поиска
устранения
проблем
я
опишу
пару
случаев
моей
практики
подробно
расскажу
курс
во
втором
уроке
рассмотрим
самые
распространенные
приемы
советы
созданию
эффективного
приложения
курс
постоянно
дополняется
на
сегодняшний
день
состоит
полный
курс
доступен
регистрации
сайте
оплаты
стоимость
курса
рублей
с
выходом
новых
уроков
стоимость
увеличивается
но
читатели
купившие
курс
автоматически
получат
доступ
новым
урокам
поэтому
тема
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
читателю
купившему
хотя
курс
предоставляется
скидка
остальные
курсы
доступ
курсу
предоставляется
навсегда
включая
последующие
уроки
обновления
сразу
курсы
скидкой
процентов
можете
купить
докупить
при
возникновении
какихлибо
вопросов
используйте
урок
strictmodeв
уроке
рассмотрим
возможности
strictmode
разберем
узнать
ui
потоке
выполняются
операции
диском
сетью
урок
памятьв
уроке
обсуждаем
память
расходуется
такое
garbage
collector
программно
узнать
количество
свободной
памяти
а
также
разберем
режим
low
memory
метод
ontrimmemory
котором
система
просит
освободить
память
урок
memory
profiler
allocationв
уроке
разбираемся
помощью
memory
profiler
получить
подробную
информацию
создании
новых
удалении
старых
объектов
урок
memory
profiler
dumpв
уроке
рассмотрим
создать
memory
dump
подробно
разберемся
читать
содержимое
урок
утечки
памяти
что
это
такое
образуетсяв
уроке
узнаем
такое
утечка
памяти
примерах
подробно
рассмотрим
образуется
кроме
обсудим
такие
понятия
слабая
ссылка
weakreference
anonymous
class
скрытая
ссылка
урок
утечки
памяти
как
понять
найтив
уроке
рассмотрим
определить
приложении
утечка
памяти
найти
урок
утечки
памяти
leakcanaryв
уроке
рассматриваем
инструмент
leakcanary
использовать
читать
понимать
результаты
работы
кроме
изучим
возможности
кастомизации
разберем
несколько
реальных
примеров
ликов
урок
cpu
profilerв
уроке
начинаем
работу
cpu
профайлером
рассмотрим
какую
информацию
отображает
основной
экран
урок
cpu
profiler
стек
методовв
уроке
рассмотрим
доступные
нам
представления
стека
методов
call
chart
flame
chart
top
bottom
урок
cpu
profiler
режимы
записи
стека
методовв
уроке
рассмотрим
доступные
нам
возможности
записи
стека
методов
урок
network
profilerв
уроке
рассмотрим
возможности
network
profiler
урок
energy
profilerв
уроке
рассмотрим
возможности
energy
profiler
урок
кадрв
уроке
поговорим
формируется
кадр
а
также
рассмотрим
инструменты
поиска
графических
проблем
урок
apk
analyzerв
уроке
рассмотрим
apk
analyzer
это
инструмент
который
покажет
подробную
информацию
apkфайле
урок
systraceв
уроке
рассмотрим
утилиту
systrace
которая
предоставляет
детализированный
отчет
происходит
системе
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
уроки
поиск
уроки
полный
список
уроков
добрый
день
это
уроквведение
здесь
пока
кодить
будем
распишу
причины
которые
побудили
создать
сайт
для
писать
программы
нужна
среда
разработки
в
уроке
подробно
рассмотрим
установить
настроить
среду
разработки
я
буду
описывать
установку
применимо
операционной
системе
windows
для
тестировать
приложения
нам
понадобится
android
virtual
device
avd
это
эмулятор
androidсмартфона
который
сможем
устанавливать
созданные
нами
приложения
запускать
давайте
создадим
давайте
посмотрим
андроид
приложениях
формируется
видим
экране
на
прошлом
уроке
выяснили
activity
читает
layoutфайл
отображает
нем
сконфигурировано
теперь
выясним
откуда
activity
знает
именно
layoutфайл
читать
расположение
viewэлементов
экране
зависит
viewgroup
layout
которой
находятся
в
уроке
рассмотрим
основные
виды
layout
linearlayout
отображает
viewэлементы
виде
одной
строки
horizontal
одного
столбца
vertical
я
использовал
это
прошлом
уроке
демонстрировал
использование
layoutфайлов
смене
ориентации
tablelayout
отображает
элементы
виде
таблицы
строкам
столбцам
relativelayout
каждого
элемента
настраивается
положение
относительно
других
элементов
absolutelayout
каждого
элемента
указывается
явная
позиция
экране
системе
координат
xy
рассмотрим
виды
на
уроке
разбираемся
характеристиках
экрана
рассматриваем
layout
параметры
высота
ширина
отступ
гравитация
вес
в
уроке
научимся
обращаться
кода
viewэлементам
экране
менять
свойства
в
уроке
научимся
обрабатывать
нажатие
кнопки
узнаем
такое
обработчик
в
уроке
научимся
использовать
обработчик
нескольких
viewэлементов
научим
activity
выступать
качестве
обработчика
в
уроке
узнаем
нужна
папка
хранить
использовать
в
уроке
рассмотрим
логи
приложения
всплывающие
сообщения
в
уроке
создаем
пункты
меню
в
уроке
создаем
пункты
меню
c
id
группируем
сортируем
пункты
меню
в
уроке
создадим
контекстное
меню
в
уроке
рисуем
экран
программно
layoutфайл
в
уроке
добавляем
компоненты
экран
прямо
приложения
в
уроке
изменяем
layoutпараметры
существующих
компонентов
экрана
в
уроке
пишем
приложение
калькулятор
в
уроке
рассмотрим
анимацию
viewкомпонентов
страница
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
rxjava
поиск
rxjava
решает
насущные
проблемы
разработки
тема
достойная
изучения
толковые
учебники
одном
воды
другом
сразу
грузят
кучей
понятий
трудно
разобраться
чему
поэтому
решил
написать
свой
курс
получилось
максимум
полезной
понятной
информации
минимуме
затраченного
времени
первые
уроков
курса
описывают
первую
версию
rxjava
на
эта
информация
актуальна
второй
версии
в
уроке
описана
разница
первой
второй
версией
последующих
уроках
используется
вторая
версия
rxjava
это
полезный
инструмент
курс
поможет
освоить
использовать
создании
androidприложений
кроме
знания
rxjava
станут
приятным
пунктом
вашем
резюме
я
встречал
такое
требование
вакансиях
позицию
senior
androidразработчика
на
сегодняшний
день
курс
приобрели
человек
много
примеров
описанием
результатов
выполнения
подробные
объяснения
сложных
понимания
механизмов
первые
урока
доступны
бесплатно
регистрации
прочитав
примете
осознанное
решение
покупке
курс
постоянно
дополняется
на
сегодняшний
день
состоит
полный
курс
доступен
регистрации
сайте
оплаты
стоимость
курса
рублей
с
выходом
новых
уроков
стоимость
увеличивается
но
читатели
купившие
курс
автоматически
получат
доступ
новым
урокам
поэтому
тема
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
читателю
купившему
хотя
курс
предоставляется
скидка
остальные
курсы
доступ
курсу
предоставляется
навсегда
включая
последующие
уроки
обновления
сразу
курсы
скидкой
процентов
можете
купить
докупить
при
возникновении
какихлибо
вопросов
используйте
урок
subscription
создаем
свой
observableв
уроке
изучаем
subscription
объект
который
дает
возможность
отписаться
observable
создаем
несложную
реализацию
observable
учитываем
статус
подписки
и
рассмотрим
полезный
инструмент
compositesubscription
урок
hot
сold
observable
connectableobservableв
уроке
подробно
посмотрим
взаимодействие
observable
observer
выясним
отличается
это
взаимодействие
cold
hot
observable
в
течение
урока
нами
будут
рассмотрены
операторы
publish
replay
refcount
cache
класс
connectableobservable
урок
subjectв
уроке
рассмотрим
subject
типы
publishsubject
replaysubject
behaviorsubject
asyncsubject
unicastsubject
serializedsubject
урок
subscribeon
observeonв
уроке
рассмотрим
работает
rxjava
точки
зрения
потоков
научимся
управлять
потоками
помощью
операторов
subscribeon
observeon
урок
обработка
ошибокв
уроке
обрабатываем
ошибки
помощью
операторов
onerrorreturn
onerrorresumenext
onexceptionresumenext
рассмотрим
перезапустить
observable
помощью
различных
вариантов
оператора
retry
подробно
разберем
работает
оператор
retrywhen
урок
операторы
объединенияв
уроке
подробно
разбираем
отличие
операторов
merge
concat
amb
zip
combinelatest
withlatestfrom
на
примере
выясняем
нужен
flatmap
отличается
concatmap
урок
retrofit
retrolambdaв
уроке
используем
rxjava
работе
retrofit
сокращаем
количество
кода
помощью
лямбдавыражений
урок
backpressureв
уроке
примерах
рассмотрим
заключается
backpressure
используем
операторы
onbackpressure
обертку
synconsubscribe
работы
observable
поддерживающими
backpressure
урок
rxjava
уроке
разбираем
основные
отличия
второй
версии
rxjava
посмотрим
отличаются
flowable
observable
какие
интерфейсы
используются
подписчиков
подписки
какие
новые
объекты
появились
какие
старые
объекты
переименованы
удалены
урок
rxbindingв
уроке
используем
rxbinding
работать
view
rx
парадигме
урок
тестирование
rxjavapluginsв
уроке
разбираем
возможности
классов
testobserver
testscheduler
которые
могут
использованы
написании
тестов
а
также
рассмотрим
несколько
методов
rxjavaplugins
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
kotlin
поиск
первые
урока
доступны
бесплатно
регистрации
прочитав
примете
осознанное
решение
покупке
в
первом
уроке
объясню
почему
первых
уроках
теории
и
начнем
разбираться
такое
корутина
suspend
функция
во
втором
уроке
разберем
такое
continuation
suspend
функция
приостанавливает
код
блокируя
поток
в
третьем
уроке
подробно
разберем
создать
suspend
функции
также
рассмотрим
блокировать
поток
корутина
потеряться
нужно
слово
suspend
курс
постоянно
дополняется
на
сегодня
состоит
полный
курс
доступен
регистрации
сайте
оплаты
стоимость
курса
рублей
с
выходом
новых
уроков
стоимость
увеличивается
но
читатели
купившие
курс
автоматически
получат
доступ
новым
урокам
поэтому
тема
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
читателю
купившему
хотя
курс
предоставляется
скидка
остальные
курсы
доступ
курсу
предоставляется
навсегда
включая
последующие
уроки
обновления
сразу
курсы
скидкой
процентов
можете
купить
докупить
при
возникновении
какихлибо
вопросов
используйте
урок
корутины
continuation
возврат
значенийв
уроке
рассмотрим
подробно
continuation
обрабатывает
ответ
suspend
функций
а
также
корутина
вернуть
какоелибо
значение
результат
своей
работы
урок
корутины
suspend
функции
изнутрив
уроке
разбираем
работает
suspend
функция
изнутри
как
вернуть
значение
сразу
асинхронной
работы
урок
корутины
jobв
уроке
начинаем
разбираться
представляет
корутина
из
каких
объектов
состоит
происходит
время
выполнения
урок
корутины
scopeв
уроке
рассмотрим
такое
scope
создать
самый
простой
вариант
урок
корутины
отменав
уроке
запускаем
отменяем
корутины
проверяем
корутины
влияют
основной
поток
урок
корутины
билдеры
launch
asyncв
уроке
рассмотрим
билдеры
launch
async
как
ведут
вложенные
корутины
как
дождаться
окончания
работы
корутины
получить
результат
работы
как
создать
отложенную
корутину
запустить
позже
как
распараллеливать
задачи
помощью
корутин
урок
корутины
contextв
уроке
разбираемся
context
какие
элементы
используются
умолчанию
как
создавать
свой
элемент
как
происходит
передача
элементов
контекст
создаваемой
корутины
урок
корутины
dispatcherв
уроке
рассмотрим
основные
виды
диспетчеров
также
поговорим
происходит
капотом
корутин
использовании
диспетчера
урок
корутины
связь
родительской
дочерней
корутинойв
уроке
разбираемся
создается
дочерняя
корутина
рассмотрим
формируется
контекст
работает
связь
родительской
корутиной
урок
корутины
обработка
исключенийв
уроке
рассмотрим
обработать
исключения
возникающие
корутине
разберем
происходит
капотом
работает
coroutineexceptionhandler
урок
корутины
обработка
исключений
вложенные
корутиныв
уроке
продолжаем
обсуждать
обработку
исключений
примере
вложенных
корутин
урок
корутины
обработка
исключений
async
suspendв
уроке
разбираемся
чему
приводят
исключения
async
корутине
suspend
функциях
урок
корутины
отмена
это
ошибкав
уроке
обсуждаем
работает
отмена
корутин
капотом
урок
корутины
coroutinescope
supervisorscope
withcontext
runblockingв
уроке
обсуждаем
функции
coroutinescope
supervisorscope
withcontext
runblocking
урок
корутины
каналыв
уроке
разбираемся
работают
каналы
что
капотом
закрытие
отмена
канала
буфер
produce
consume
broadcast
урок
корутины
flowв
уроке
разбираемся
такое
flow
работает
капотом
отличается
каналов
урок
корутины
flow
билдеры
простые
операторыв
уроке
рассмотрим
способы
создания
flow
простые
операторы
создание
своих
операторов
урок
корутины
flow
операторы
channelflow
flowon
buffer
produceinв
уроке
рассматриваем
операторы
channelflow
flowon
buffer
producein
урок
корутины
flow
ошибка
отмена
повторв
уроке
рассматриваем
операторы
catch
retry
retrywhen
возможность
отмены
flow
урок
корутины
практика
scope
livedataв
уроке
рассматриваем
билдер
livedata
операторы
получения
scope
viewmodelscope
lifecyclescope
mainscope
урок
корутины
практика
retrofitв
уроке
рассматриваем
интеграцию
корутин
retrofit
урок
корутины
практика
roomв
уроке
рассматриваем
интеграцию
корутин
room
урок
корутины
практика
примеры
использованияв
уроке
используем
корутины
несложных
примерах
репозиторием
usecase
урок
корутины
практика
параллельная
работав
уроке
вызываем
suspend
функции
параллельно
последовательно
урок
корутины
flow
sharedflow
stateflowв
уроке
подробно
разбираем
такое
sharedflow
stateflow
урок
корутины
практика
работа
viewв
уроке
создаем
suspend
функции
flow
колбэков
view
компонентов
урок
корутины
практика
различные
сценариив
уроке
рассматриваем
различные
сценарии
использования
flow
suspend
которые
могут
пригодиться
работе
урок
корутины
тестированиев
уроке
разбираемся
нужен
runblocking
отличается
runblockingtest
умеет
делать
testcoroutinedispatcher
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
чаты
поиск
чаты
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
тестирование
поиск
тестирование
очень
важная
полезная
тема
тесты
позволят
значительно
сократить
время
требуемое
ручное
тестирование
вашего
приложения
снизят
количество
ошибок
вашем
приложении
любая
серьезная
вакансия
android
разработчика
потребует
умения
покрывать
ваш
код
тестами
использовать
различные
инструменты
как
это
работает
вы
пишете
программытесты
которых
описываете
тестовые
входные
данные
ожидаемый
результат
программатест
запускает
ваше
приложение
отдельные
компоненты
указанными
вами
тестовыми
входными
данными
сравнивает
ожидаемый
результат
результатом
который
выдало
ваше
приложение
если
ожидаемый
реальный
результат
совпали
значит
тест
пройден
успешно
далее
каких
либо
изменениях
кода
вашего
приложения
просто
снова
запускаете
тест
убедиться
работает
должно
если
тест
выявил
ошибку
значит
ваши
изменения
чтото
поломали
в
курсе
планирую
рассмотреть
подробно
возможности
различных
инструментов
тестирования
на
сегодняшний
день
курс
приобрели
человек
первый
урок
доступен
бесплатно
регистрации
прочитав
примете
осознанное
решение
покупке
курс
постоянно
дополняется
на
сегодняшний
день
состоит
полный
курс
доступен
регистрации
сайте
оплаты
стоимость
курса
рублей
с
выходом
новых
уроков
стоимость
увеличивается
но
читатели
купившие
курс
автоматически
получат
доступ
новым
урокам
поэтому
тема
интересна
откладывайте
покупку
получайте
следующие
уроки
бесплатно
читателю
купившему
хотя
курс
предоставляется
скидка
остальные
курсы
доступ
курсу
предоставляется
навсегда
включая
последующие
уроки
обновления
сразу
курсы
скидкой
процентов
можете
купить
докупить
при
возникновении
какихлибо
вопросов
используйте
урок
как
создать
запустить
локальный
теств
уроке
научимся
создавать
запускать
локальные
тесты
урок
assert
методыв
уроке
рассмотрим
какие
assert
методы
можем
использовать
тестах
разберем
существующие
мэтчеры
метода
assertthat
научимся
создавать
свои
урок
mock
объектыв
уроке
разбираемся
могут
понадобится
mock
объекты
создавать
настраивать
использовать
урок
mockitoв
уроке
подробно
разбираем
возможности
библиотеки
mockito
урок
espressoв
уроке
пишем
несложные
ui
тесты
помощью
espresso
урок
espresso
viewmatcher
viewaction
viewassertionв
уроке
подробно
рассматриваем
viewmatcher
viewaction
viewassertion
создаем
свой
кастомный
мэтчер
урок
espresso
adapterview
recyclerviewв
уроке
разберемся
использовать
espresso
работы
списками
тестах
урок
espresso
idlingresourceв
уроке
используем
idlingresource
научить
тест
делать
паузу
ждать
пока
приложение
выполняет
фоновые
действия
урок
espresso
activitytestrule
intentstestruleв
уроке
посмотрим
подробнее
activitytestrule
используем
intentstestrule
работы
intent
урок
junit
rulesв
уроке
подробно
разберем
работу
механизма
rule
рассмотрим
несколько
существующих
правил
напишем
свое
урок
junit
exceptions
parameterized
timeout
ignoredв
уроке
рассмотрим
несколько
полезных
механизмов
junit
exceptions
проверка
ожидаемой
ошибки
parameterized
передача
тест
набора
параметров
timeout
установка
таймаута
теста
ignored
возможность
пометить
тест
выполнялся
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
о
сайте
поиск
сайт
посвящен
обучению
разработке
приложений
android
разработка
android
ведется
языке
java
желательно
знать
можете
найти
интернет
вкратце
распишу
разделы
сайта
новичок
начинайте
свой
путь
android
этих
уроков
они
расскажут
обо
базовых
вещах
отдельные
статьи
которые
вписываются
формат
уроков
и
новички
опытные
разработчики
смогут
найти
чтонибудь
интересное
курсы
набор
уроков
посвященный
конкретной
теме
темы
стараюсь
выбирать
самые
трендовые
востребованные
на
данный
момент
опубликовано
курса
у
сайта
группы
соцсетях
которых
делюсь
интересными
ссылками
статьи
различных
ресурсов
mediumcom
habrahabrru
тд
если
нужно
регулярное
интересное
чтиво
android
разработке
подписывайтесь
если
возникают
какиелибо
вопросы
android
просто
хочется
общения
единомышленниками
присоединяйтесь
нашим
чатам
telegram
также
отдельный
чат
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
constraintlayout
основы
поиск
полный
список
android
studio
умолчанию
предлагает
нам
использовать
constraintlayout
создании
разметки
экрана
давайте
разберемся
это
штука
работать
хоть
это
урок
заточен
новичков
тк
сюда
вести
ссылка
самых
первых
уроков
поэтому
опытных
разработчиков
прошу
удивляться
стилю
изложения
материала
начало
можете
пропустить
немного
теории
начнем
самых
азов
чтобы
могли
размещать
экране
различные
компоненты
кнопки
поля
ввода
чекбоксы
тп
необходимо
использовать
специальный
контейнер
именно
будете
помещать
компоненты
в
android
компоненты
называются
view
контейнер
viewgroup
существуют
несколько
типов
viewgroup
linearlayout
relativelayout
framelayout
tablelayout
constraintlayout
тд
они
различаются
будут
упорядочивать
компоненты
внутри
linearlayout
например
выстроит
горизонтальной
вертикальной
линии
а
tablelayout
виде
таблицы
более
подробно
можете
прочитать
в
уроке
разбираться
будут
вести
компоненты
контейнере
constraintlayout
вообще
слово
constraint
переводится
ограничение
принуждение
но
это
точно
отражает
смысл
самое
подходящее
слово
которое
могу
подобрать
это
привязка
его
буду
использовать
чтобы
самим
попрактиковаться
рекомендую
создать
модуль
урока
о
создать
модуль
говорили
в
меню
студии
file
new
new
module
name
constraintlayoutintromodule
name
name
итак
android
studio
модуль
а
нем
файл
res
layout
откроем
файл
двойным
кликом
он
выглядит
убедитесь
слевавнизу
открытка
вкладка
design
режим
просмотра
выбран
design
blueprint
сейчас
экране
видите
текст
hello
world
этот
текст
отображен
помощью
view
которое
называется
textview
вы
можете
видеть
component
tree
слеваснизу
обратите
внимание
textview
вложен
constraintlayout
это
говорил
начале
constraintlayout
контейнер
внутри
находятся
различные
view
нашем
случае
textview
также
сказать
constraintlayout
является
родителем
родительским
viewgroup
textview
давайте
удалим
textview
экрана
для
просто
выделите
экране
component
tree
нажмите
кнопку
del
клавиатуре
теперь
constraintlayout
пуст
экран
отображает
если
чтото
удалили
ошибке
можете
восстановить
это
нажав
а
чегото
наворотили
получается
это
отменить
откройте
вкладку
text
слеваснизу
вставьте
туда
код
ваш
экран
вернется
первоначальному
состоянию
давайте
добавим
экран
какойнибудь
компонент
например
снова
textview
для
просто
перетащите
компонент
мышкой
palette
экран
после
textview
появился
экране
component
tree
запустим
приложение
посмотрим
текст
выглядеть
видим
textview
уехал
влево
вверх
чтото
явно
пошло
если
откроете
текстовое
представление
вашего
экрана
вкладка
text
слеваснизу
увидите
элемент
textview
подчеркнут
красной
линией
если
навести
мышкой
покажет
ошибкуthis
view
constrained
designtime
positions
jump
unless
add
constraints
этим
сообщением
студия
говорит
нам
view
привязано
его
текущее
положение
экране
актуально
разработки
те
студии
а
работе
приложения
это
положение
проигнорировано
view
уедет
точку
те
влевовверх
наблюдали
запуске
как
сделать
view
constraintlayout
оставалось
месте
смещалось
угол
необходимо
добавить
привязки
constraints
они
будут
задавать
положение
view
экране
относительно
какихлибо
других
элементов
относительно
родительского
view
давайте
добавим
привязки
нашего
textview
если
выделите
экране
textview
можете
видеть
круга
бокам
эти
круги
используются
создавать
привязки
существует
типа
привязок
одни
задают
положение
view
горизонтали
другие
вертикали
создадим
горизонтальную
привязку
привяжем
положение
textview
левому
краю
родителя
напомню
родителем
textview
является
constraintlayout
который
нашем
случае
занимает
весь
экран
поэтому
края
constraintlayout
совпадают
краями
экрана
чтобы
создать
привязку
нажмите
мышкой
textview
выделить
затем
зажмите
левой
кнопкой
мыши
левый
кружок
тащите
левой
границе
textview
также
уехал
влево
он
привязался
левой
границе
своего
родителя
но
вовсе
необязательно
должны
вплотную
мы
можем
задать
отступ
для
просто
зажмите
левой
кнопкой
мыши
textview
перетащите
вправо
отпустите
обратите
внимание
число
которое
меняется
это
величина
отступа
textview
объекта
которому
привязан
нашем
случае
левой
границы
родителя
запустим
приложение
раньше
textview
уезжал
влевовверх
уехал
вверх
влево
уехал
тк
создали
горизонтальную
привязку
и
textview
знает
горизонтали
должен
располагаться
определенным
отступом
левого
края
давайте
создадим
вертикальную
привязку
закрепить
textview
вертикали
используем
верхний
кружок
тащим
верхней
границе
textview
привязывается
вертикали
верхней
границе
родителя
после
перетащить
textview
нужно
настроить
горизонтальный
вертикальный
отступы
при
перетаскивании
видите
значения
отступов
теперь
textview
привязан
горизонтали
вертикали
те
точно
знает
должен
находиться
экране
время
работы
приложения
запускаем
проверить
textview
никуда
уехал
находится
настроили
помощью
привязок
давайте
добавим
одно
view
например
кнопку
button
если
запустить
приложение
кнопка
уедет
влевовверх
чему
привязана
мы
можем
привязывать
границам
родителя
другим
view
давайте
привяжем
кнопку
textview
мы
привязали
кнопку
textview
создав
две
привязки
вертикальная
привязка
верхняя
граница
кнопки
привязана
нижней
границе
textview
отступ
те
сказать
вертикальной
осиверхняя
граница
кнопки
нижняя
граница
textview
горизонтальная
привязка
левая
граница
кнопки
привязана
правой
границе
textview
отступ
горизонтальной
осилевая
граница
кнопки
правая
граница
textview
тк
кнопка
привязана
textview
будем
перемещать
textview
кнопка
также
перемещаться
добавим
view
например
checkbox
давайте
сделаем
горизонтали
находился
уровне
textview
для
нам
левую
границу
checkbox
привязать
левой
границе
textview
сделать
нулевой
отступ
а
вертикали
привяжем
нижней
границе
родителя
теперь
чекбокс
textview
выравнены
левому
краю
чтобы
удалить
привязку
просто
нажать
соответствующий
кружок
удалим
привязки
кнопки
чтобы
удалить
сразу
привязки
специальная
кнопка
мы
рассмотрели
примеры
view
привязано
каждой
оси
одной
стороны
те
слева
справа
горизонтали
сверху
снизу
вертикали
но
можем
привязать
view
обоих
сторон
каждой
оси
пока
рассмотрим
горизонтальную
привязку
но
разумеется
это
работать
вертикальной
привязки
давайте
попробуем
например
левый
край
привязать
левой
границе
родителя
правый
край
правой
границе
родителя
очистим
экран
view
добавим
новый
textview
какихлибо
привязок
теперь
привяжем
левой
правой
границам
родителя
textview
сначала
ушел
влево
тк
привязка
левой
границе
создания
привязки
правой
границе
выровнялся
расположен
центру
те
привязки
уравняли
друг
друга
view
находится
ровно
посередине
чему
привязан
слева
чему
привязан
справа
те
нашем
случае
view
находится
посередине
левой
правой
границами
родителя
обратите
внимание
такие
двусторонние
привязки
отображаются
пружинки
линии
давайте
немного
усложним
пример
добавив
кнопку
перенастроив
привязки
кнопка
привязана
правому
краю
а
textview
привязан
левому
краю
кнопке
если
будем
перемещать
кнопку
textview
оставаться
ровно
посередине
левым
краем
кнопкой
мы
можем
настроить
двустороннюю
привязку
view
располагалось
посередине
ближе
левому
краю
кнопке
для
удобно
использовать
специальный
скролл
properties
этим
скроллом
задаете
пропорцию
по
умолчанию
значение
это
половина
соответственно
view
находится
половине
расстояния
объектами
которому
оно
привязано
в
нашем
случае
значении
textview
находится
посередине
левым
краем
кнопкой
если
поставить
значение
например
textview
находится
левого
края
расстоянии
равном
четверти
расстояния
левым
краем
кнопкой
если
поставить
textview
находится
левого
края
расстоянии
равном
расстояния
левым
краем
кнопкой
и
менялось
расстояние
левым
краем
кнопкой
пропорции
будут
соблюдаться
в
следующем
уроке
продолжим
рассматривать
возможности
constraintlayout
psесли
пришли
урок
ссылке
первых
уроков
можете
вернуться
продолжить
обучение
этой
информации
достаточно
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
home
good
afternoon
introductory
lesson
code
anything
lesson
enlighten
reasons
decided
create
site
write
programs
need
development
environment
google
recommends
use
eclipse
purpose
android
development
tools
adt
plugin
lesson
look
detail
install
configure
development
environment
test
applications
need
android
virtual
device
avd
android
smartphone
emulator
eclipse
install
launch
applications
create
look
screen
content
composed
android
applications
last
lesson
learnt
activity
reads
layoutfile
displays
configured
find
activity
knows
specific
file
read
positioning
viewelements
screen
depends
viewgroup
layout
inside
located
lesson
observe
main
types
layouts
lesson
examine
screen
properties
explore
layout
parameters
height
width
margin
gravity
weight
lesson
learn
refer
viewelements
screen
code
change
properties
lesson
learn
process
button
clicks
find
listener
learn
use
one
listener
several
viewelements
teach
activity
act
listener
lesson
find
folder
needed
store
use
lesson
look
application
logs
toast
messages
lesson
create
menu
items
lesson
create
menu
items
ids
group
sort
menu
items
lesson
create
context
menu
lesson
create
layout
programmatically
using
layoutfiles
lesson
add
components
screen
application
running
lesson
change
layoutparameters
already
existing
screen
components
lesson
write
calculator
application
lesson
explore
animation
viewcomponents
page
language
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
урок
service
простой
пример
поиск
полный
список
в
уроке
создаем
запускаем
останавливаем
простой
сервис
для
начала
определиться
порусски
называть
service
общепринятый
перевод
служба
наиболее
популярный
пример
службы
windows
но
системы
android
привычнее
использовать
слово
сервис
его
буду
использовать
своих
уроках
обозначения
service
и
момент
сразу
прояснить
service
прописывается
манифесте
рядом
activity
получается
приложение
application
содержит
activity
сервис
предлагаю
упрощения
изложения
материала
словом
приложение
понимать
таки
activity
которые
запустить
увидеть
экране
те
раньше
называли
приложением
а
сервис
считать
отдельной
приложения
вещью
а
обозначить
приложение
контейнер
activity
сервиса
буду
использовать
слово
application
те
приложение
это
набор
activity
сервис
service
приложение
сервис
application
как
итак
сервис
это
некая
задача
которая
работает
фоне
использует
ui
запускать
останавливать
сервис
приложений
других
сервисов
также
подключиться
работающему
сервису
взаимодействовать
в
качестве
примера
рассмотреть
алгоритм
почтовой
программы
она
состоит
приложения
сервиса
сервис
работает
фоне
периодически
проверяет
наличие
новой
почты
скачивает
выводит
уведомления
а
запускаете
приложение
оно
отображает
загруженные
сервисом
письма
также
приложение
подключиться
сервису
поменять
нем
например
период
проверки
почты
закрыть
сервис
постоянная
проверка
почты
нужна
те
сервис
нужен
ваша
задача
продолжала
работать
приложение
закрыто
в
ближайших
уроках
разберемся
какие
способы
взаимодействия
существуют
приложением
сервисом
в
уроке
создадим
простейший
сервис
который
выводить
чтонибудь
лог
а
приложение
запускать
останавливать
сервис
создадим
проект
project
name
build
target
android
application
name
servicesimple
package
name
create
activity
mainactivity
добавим
stringsxml
строки
экран
mainxml
две
кнопки
запуска
остановки
сервиса
и
progressbar
рядом
mainactivity
создайте
класс
myservice
наследующий
androidappservice
содержимое
myservicejava
package
import
androidappservice
import
androidcontentintent
import
androidosibinder
import
androidutillog
public
class
myservice
extends
service
final
string
public
void
oncreate
superoncreate
public
int
onstartcommandintent
intent
int
flags
int
startid
sometask
return
superonstartcommandintent
flags
startid
public
void
ondestroy
superondestroy
public
ibinder
onbindintent
intent
return
null
void
sometask
у
сервиса
activity
методы
oncreate
ondestroy
которые
срабатывают
создании
уничтожении
сервиса
метод
срабатывает
сервис
запущен
методом
в
нем
запускаем
наш
метод
sometask
который
пока
пуст
у
onstartcommand
вход
выход
идут
параметры
пока
используем
метод
onbind
нам
пока
интересен
но
реализовать
обязаны
возвращаем
null
sometask
будем
кодить
работу
сервиса
сервис
новые
создаваемые
activity
необходимо
прописать
манифесте
делается
это
полностью
аналогично
жмете
add
выбираете
service
и
поле
name
выбираете
myservice
mainactivityjava
package
import
androidappactivity
import
androidcontentintent
import
androidosbundle
import
androidviewview
public
class
mainactivity
extends
activity
final
string
public
void
oncreatebundle
savedinstancestate
superoncreatesavedinstancestate
setcontentviewrlayoutmain
public
void
onclickstartview
v
startservicenew
intentthis
myserviceclass
public
void
onclickstopview
v
stopservicenew
intentthis
myserviceclass
здесь
метода
которые
срабатывают
нажатии
кнопки
start
service
stop
service
в
соответственно
запускаем
останавливаем
сервис
методами
startservice
на
вход
передаем
intent
указывающий
сервис
это
очень
похоже
вызываем
activity
методом
startactivity
давайте
сохраним
запустим
приложение
нажмем
start
service
смотрим
лог
oncreate
onstartcommand
выполнился
метод
oncreate
сервис
создался
onstartcommand
сервис
выполняет
содержимое
метода
onstartcommand
если
нажмем
start
service
onstartcommand
сервис
создан
oncreate
вызывается
выполняется
метод
onstartcommand
жмем
stop
service
ondestroy
сервис
уничтожился
убедимся
сервис
зависит
приложения
жмем
start
service
oncreateonstartcommand
сервис
запущен
закрываем
приложение
кнопкой
назад
в
логах
тишина
ondestroy
сервисе
выполнился
сервис
продолжает
жить
ему
равно
работает
приложение
запустившее
работает
долгим
удержанием
клавиши
домой
выведем
список
последних
приложений
снова
откроем
наше
приложение
нажмем
stop
service
в
логах
ondestroy
сервис
уничтожен
теперь
попробуем
выполнять
чтонибудь
осмысленное
onstartcommand
перепишем
метод
sometask
myservicejava
void
sometask
int
try
catch
interruptedexception
e
eprintstacktrace
будем
интервалом
секунду
выводить
лог
записи
сервиса
все
сохраним
запустим
нажмем
start
service
progressbar
замер
экран
стал
недоступен
а
логи
идут
oncreateonstartcommandi
вывод
сервис
работает
основном
потоке
блокирует
экран
вынесем
цикл
паузами
отдельный
поток
и
раза
бегать
давайте
заодно
узнаем
делает
метод
перепишем
метод
sometask
void
sometask
new
threadnew
runnable
public
void
run
int
try
catch
interruptedexception
e
eprintstacktrace
stopself
мы
вынесли
код
отдельный
поток
добавили
вызов
метода
stopself
метод
аналогичен
методу
stopservice
останавливает
сервис
котором
вызван
все
сохраняем
запускаем
жмем
start
service
progressbar
крутится
экран
блокирован
логи
идут
oncreateonstartcommandi
сервис
создался
выполнил
работу
остановился
методом
stopself
на
следующем
уроке
передаем
данные
сервис
рассматриваем
методы
остановки
сервиса
stopself
stopselfresult
присоединяйтесь
нам
telegram
канале
публикуются
ссылки
новые
статьи
сайта
startandroidru
интересные
материалы
хабра
mediumcom
тп
чатах
решаем
возникающие
вопросы
проблемы
различным
темам
просто
хочется
поговорить
коллегами
разработке
чат
новый
чат
обсуждения
проблем
производительности
ваших
пожеланий
содержанию
курса
теме
language
дмитрий
виноградов
подробнее
никакие
другие
люди
имеют
этому
сайту
никакого
отношения
просто
занимаются
плагиатом
в
публикую
ссылки
интересные
полезные
статьи
android
в
обсудить
вопросы
проблемы
возникающие
разработке
группа
вконтакте
поддержка
проекта
start
android
все
права
защищены
копирование
материалов
возможно
разрешения
автора
при
возникновении
какихлибо
вопросов
используйте
frontend
framework
twitter
inc
code
licensed
font
licensed
